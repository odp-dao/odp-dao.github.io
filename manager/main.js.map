{"version":3,"mappings":"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Ac,QAAS,UAAW,WAAY,UAAW,WAAY,OAAQ,SAAU,UAAW,QAAS,QAAS,OAAQ,OAAQ,OAAQ,QAAS,QAAS,UAAW,QAAS,WAAY,QAAS,OAAQ,OAAQ,OAAQ,MAAO,MAAO,QAAS,SAAU,OAAQ,QAAS,OAAQ,OAAQ,UAAW,OAAQ,OAAQ,aAAc,MAAO,OAAQ,MAAO,QAAS,OAAQ,OAAQ,UAAW,QAAS,OAAQ,SAAU,QAAS,WAAY,QAAS,QAAS,SAAU,UAAW,QAAS,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,QAAS,OAAQ,OAAQ,MAAO,QAAS,MAAO,QAAS,WAAY,OAAQ,SAAU,MAAO,SAAU,QAAS,QAAS,WAAY,WAAY,QAAS,UAAW,QAAS,MAAO,OAAQ,QAAS,MAAO,QAAS,OAAQ,OAAQ,OAAQ,SAAU,QAAS,QAAS,SAAU,OAAQ,OAAQ,QAAS,MAAO,UAAW,SAAU,SAAU,QAAS,OAAQ,SAAU,SAAU,OAAQ,SAAU,WAAY,QAAS,OAAQ,QAAS,QAAS,SAAU,MAAO,MAAO,OAAQ,SAAU,SAAU,UAAW,WAAY,QAAS,OAAQ,QAAS,SAAU,OAAQ,QAAS,MAAO,OAAQ,UAAW,QAAS,OAAQ,QAAS,UAAW,SAAU,SAAU,MAAO,QAAS,SAAU,YAAa,QAAS,UAAW,UAAW,SAAU,UAAW,OAAQ,WAAY,UAAW,WAAY,OAAQ,OAAQ,MAAO,QAAS,MAAO,MAAO,SAAU,QAAS,MAAO,OAAQ,SAAU,OAAQ,QAAS,QAAS,MAAO,OAAQ,QAAS,OAAQ,SAAU,UAAW,WAAY,MAAO,WAAY,MAAO,OAAQ,WAAY,WAAY,SAAU,YAAa,UAAW,MAAO,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,SAAU,OAAQ,SAAU,YAAa,OAAQ,UAAW,OAAQ,aAAc,SAAU,QAAS,UAAW,MAAO,QAAS,SAAU,SAAU,OAAQ,SAAU,UAAW,QAAS,OAAQ,OAAQ,UAAW,UAAW,SAAU,UAAW,UAAW,MAAO,OAAQ,QAAS,OAAQ,YAAa,UAAW,SAAU,MAAO,OAAQ,MAAO,UAAW,QAAS,SAAU,UAAW,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,QAAS,UAAW,YAAa,SAAU,OAAQ,OAAQ,QAAS,SAAU,OAAQ,QAAS,WAAY,OAAQ,SAAU,QAAS,UAAW,OAAQ,SAAU,QAAS,QAAS,QAAS,OAAQ,QAAS,SAAU,QAAS,SAAU,OAAQ,MAAO,YAAa,SAAU,OAAQ,OAAQ,OAAQ,SAAU,WAAY,UAAW,OAAQ,UAAW,QAAS,QAAS,SAAU,OAAQ,SAAU,SAAU,SAAU,WAAY,OAAQ,SAAU,SAAU,SAAU,UAAW,QAAS,YAAa,WAAY,MAAO,QAAS,QAAS,QAAS,UAAW,OAAQ,SAAU,WAAY,YAAa,OAAQ,OAAQ,WAAY,MAAO,SAAU,OAAQ,UAAW,QAAS,SAAU,OAAQ,OAAQ,UAAW,OAAQ,OAAQ,SAAU,OAAQ,aAAc,QAAS,OAAQ,SAAU,QAAS,QAAS,QAAS,SAAU,SAAU,MAAO,WAAY,UAAW,OAAQ,YAAa,SAAU,QAAS,OAAQ,QAAS,UAAW,OAAQ,MAAO,SAAU,MAAO,QAAS,YAAa,WAAY,OAAQ,SAAU,SAAU,SAAU,SAAU,OAAQ,OAAQ,OAAQ,QAAS,aAAc,OAAQ,OAAQ,UAAW,OAAQ,WAAY,UAAW,MAAO,QAAS,SAAU,QAAS,SAAU,OAAQ,QAAS,OAAQ,YAAa,aAAc,WAAY,SAAU,SAAU,MAAO,QAAS,OAAQ,QAAS,SAAU,MAAO,UAAW,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,OAAQ,SAAU,QAAS,YAAa,OAAQ,QAAS,YAAa,MAAO,QAAS,QAAS,QAAS,QAAS,gBAAiB,QAAS,OAAQ,SAAU,OAAQ,YAAa,MAAO,OAAQ,UAAW,OAAQ,WAAY,QAAS,QAAS,MAAO,OAAQ,SAAU,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,QAAS,OAAQ,WAAY,YAAa,MAAO,OAAQ,UAAW,SAAU,QAAS,MAAO,WAAY,OAAQ,OAAQ,SAAU,SAAU,YAAa,OAAQ,OAAQ,YAAa,QAAS,UAAW,MAAO,SAAU,UAAW,OAAQ,UAAW,UAAW,UAAW,OAAQ,UAAW,WAAY,WAAY,YAAa,MAAO,SAAU,UAAW,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,OAAQ,QAAS,WAAY,YAAa,QAAS,OAAQ,YAAa,UAAW,YAAa,OAAQ,QAAS,MAAO,QAAS,UAAW,SAAU,QAAS,OAAQ,UAAW,OAAQ,UAAW,WAAY,OAAQ,QAAS,WAAY,UAAW,UAAW,QAAS,SAAU,QAAS,OAAQ,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","names":["OrderStyleDefinition","PLC","statusGroup","instruction","label","icon","buttons","value","backgroundColor","color","CFM","RTP","DSP","CON","CAN","OWO","animRouteTransition","trigger","transition","query","style","opacity","animate","animFadeInOutAnimation","animSlideInOutAnimation","animGrowAnimation","animGrowMenuAnimation","state","width","PARAMETER_CODEC","encodeKey","key","encodeURIComponent","encodeValue","decodeKey","decodeURIComponent","decodeValue","constructor","config","http","this","rootUrl","_rootUrl","newParams","HttpParams","encoder","ApiConfiguration","factory","AuthenticationService","__BaseService","super","postApiAuthenticationOauthTokenResponse","body","__params","__headers","HttpHeaders","__body","req","HttpRequest","headers","params","responseType","request","pipe","__filter","_r","HttpResponse","__map","postApiAuthenticationOauthToken","i0","BrandService","getApiBrandIdResponse","id","String","getApiBrandId","CatalogService","getApiCatalogMerchantMerchantIdResponse","merchantId","getApiCatalogMerchantMerchantId","getApiCatalogIdResponse","getApiCatalogId","putApiCatalogIdResponse","putApiCatalogId","deleteApiCatalogIdResponse","deleteApiCatalogId","postApiCatalogResponse","postApiCatalog","CategoryService","getApiCategoryCatalogCatalogIdResponse","catalogId","getApiCategoryCatalogCatalogId","getApiCategoryIdResponse","getApiCategoryId","putApiCategoryIdResponse","putApiCategoryId","deleteApiCategoryIdResponse","deleteApiCategoryId","postApiCategoryResponse","postApiCategory","CouponService","getApiCouponResponse","getApiCoupon","postApiCouponResponse","postApiCoupon","getApiCouponMerchantMerchantIdResponse","getApiCouponMerchantMerchantId","getApiCouponIdResponse","getApiCouponId","putApiCouponIdResponse","putApiCouponId","deleteApiCouponIdResponse","deleteApiCouponId","CustomerAppEndpointService","getApiCustomerAppEndpointResponse","getApiCustomerAppEndpoint","postApiCustomerAppEndpointResponse","postApiCustomerAppEndpoint","getApiCustomerAppEndpointMerchantMerchantIdResponse","getApiCustomerAppEndpointMerchantMerchantId","getApiCustomerAppEndpointIdResponse","getApiCustomerAppEndpointId","putApiCustomerAppEndpointIdResponse","putApiCustomerAppEndpointId","deleteApiCustomerAppEndpointIdResponse","deleteApiCustomerAppEndpointId","HashDataService","getApiHashDataResponse","getApiHashData","postApiHashDataResponse","postApiHashData","getApiHashDataIdResponse","getApiHashDataId","putApiHashDataIdResponse","putApiHashDataId","deleteApiHashDataIdResponse","deleteApiHashDataId","getApiHashDataMerchantGroupIdResponse","getApiHashDataMerchantGroupId","ItemService","getApiItemResponse","getApiItem","postApiItemResponse","postApiItem","getApiItemIdResponse","getApiItemId","putApiItemIdResponse","putApiItemId","deleteApiItemIdResponse","deleteApiItemId","getApiItemCategoryCategoryIdResponse","categoryId","getApiItemCategoryCategoryId","putApiItemStatusResponse","status","set","toString","productId","items","forEach","val","append","putApiItemStatus","MerchantService","getApiMerchantResponse","getApiMerchant","postApiMerchantResponse","postApiMerchant","getApiMerchantIdResponse","getApiMerchantId","putApiMerchantIdResponse","putApiMerchantId","deleteApiMerchantIdResponse","deleteApiMerchantId","MerchantGroupService","getApiMerchantGroupResponse","pesq","parentId","getApiMerchantGroup","postApiMerchantGroupResponse","postApiMerchantGroup","getApiMerchantGroupIdResponse","getApiMerchantGroupId","putApiMerchantGroupIdResponse","putApiMerchantGroupId","deleteApiMerchantGroupIdResponse","deleteApiMerchantGroupId","OptionService","getApiOptionResponse","getApiOption","postApiOptionResponse","postApiOption","getApiOptionIdResponse","getApiOptionId","putApiOptionIdResponse","putApiOptionId","deleteApiOptionIdResponse","deleteApiOptionId","putApiOptionStatusResponse","options","putApiOptionStatus","OptionGroupService","getApiOptionGroupResponse","getApiOptionGroup","postApiOptionGroupResponse","postApiOptionGroup","getApiOptionGroupIdResponse","getApiOptionGroupId","putApiOptionGroupIdResponse","putApiOptionGroupId","deleteApiOptionGroupIdResponse","deleteApiOptionGroupId","OptionGroupProductService","getApiOptionGroupProductResponse","getApiOptionGroupProduct","postApiOptionGroupProductResponse","postApiOptionGroupProduct","getApiOptionGroupProductIdResponse","getApiOptionGroupProductId","putApiOptionGroupProductIdResponse","putApiOptionGroupProductId","deleteApiOptionGroupProductIdResponse","deleteApiOptionGroupProductId","OrderService","getApiOrderV10IdResponse","getApiOrderV10Id","getApiOrderV10EventsPoolingResponse","Types","Groups","getApiOrderV10EventsPooling","postApiOrderV10EventsAcknowledgmentResponse","postApiOrderV10EventsAcknowledgment","postApiOrder10IdDeliveryCodeResponse","code","postApiOrder10IdDeliveryCode","postApiOrder10IdRequestDriverResponse","postApiOrder10IdRequestDriver","getApiOrder10IdTrackingResponse","getApiOrder10IdTracking","postApiOrderV10IdConfirmResponse","postApiOrderV10IdConfirm","postApiOrderV10IdStartPreparationResponse","postApiOrderV10IdStartPreparation","postApiOrderV10IdReadyToPickupResponse","postApiOrderV10IdReadyToPickup","postApiOrderV10IdDispatchResponse","postApiOrderV10IdDispatch","postApiOrderV10IdRequestCancellationResponse","postApiOrderV10IdRequestCancellation","postApiOrderV10IdAcceptCancellationResponse","postApiOrderV10IdAcceptCancellation","postApiOrderV10IdDenyCancellationResponse","postApiOrderV10IdDenyCancellation","postApiOrderV10IdCustomerRequestCancellationResponse","postApiOrderV10IdCustomerRequestCancellation","postApiOrder10IdCustomerPickupAreaAssignedResponse","postApiOrder10IdCustomerPickupAreaAssigned","postApiOrderResponse","postApiOrder","PaymentMethodService","getApiPaymentMethodResponse","getApiPaymentMethod","postApiPaymentMethodResponse","postApiPaymentMethod","getApiPaymentMethodMerchantMerchantIdResponse","getApiPaymentMethodMerchantMerchantId","getApiPaymentMethodIdResponse","getApiPaymentMethodId","putApiPaymentMethodIdResponse","putApiPaymentMethodId","deleteApiPaymentMethodIdResponse","deleteApiPaymentMethodId","ProductService","getApiProductResponse","getApiProduct","postApiProductResponse","postApiProduct","getApiProductIdResponse","getApiProductId","putApiProductIdResponse","putApiProductId","deleteApiProductIdResponse","deleteApiProductId","getApiProductIdSharingCountResponse","getApiProductIdSharingCount","getApiProductMerchantGroupMerchantGroupIdResponse","merchantGroupId","getApiProductMerchantGroupMerchantGroupId","putApiProductIdStatusResponse","resources","putApiProductIdStatus","SysService","getApiSysVerResponse","getApiSysVer","postApiSysUploadResponse","__formData","FormData","fullpath","file","postApiSysUpload","getApiSysDownloadMultiHashResponse","inline","filename","multiHash","getApiSysDownloadMultiHash","_DB","Dexie","version","stores","events","orders","tempEvents","localorders","Subject","_onNewEventsSubject","asObservable","name","sourceName","endpoint","initialize","httpClient","HttpClient","HttpXhrBackend","build","XMLHttpRequest","orderSvc","poolingLoopRoutine","_eventsArray","toPromise","next","error","acknowledge","_ackList","Enumerable","select","p","toArray","length","doPooling","getOrder","changeStatus","orderId","ret","static","window","__uuidv4","_onReadyAdapterSubject","scheme","document","location","protocol","port","webSocket","replace","hostname","subscribe","d","console","log","Promise","resolve","reject","ipfsScriptElement","getElementById","createElement","src","addEventListener","_ipfs","Ipfs","head","appendChild","getIpfsScriptInstance","__awaiter","_isListenerLoaded","_node","setTimeout","create","repo","pubsub","EXPERIMENTAL","Addresses","Swarm","then","active","ipfsHash","ipfs","getNode","arrBV","uint8ArrayConcat","all","cat","Blob","type","blob","add","pin","SSIpfs","undefined","SSLoadLib","libName","path","libScriptElement","dtoOauthRequest","cryptoService","privateKey","importPrivateKey","clientSecret","publicKey","importPublicKey","_timestamp","Date","toISOString","_accessToken","encrypt","localStorage","setItem","JSON","stringify","accessToken","expiresIn","CryptoService","SSAuthentication","Instance","str2ab","str","buf","ArrayBuffer","bufView","Uint8Array","i","strLen","charCodeAt","ab2str","fromCharCode","apply","generateNewKeys","keyPair","crypto","subtle","generateKey","modulusLength","publicExponent","hash","pubkStr","pubk","exportKey","btoa","prik","prikStr","text","encoded","buffermsg","decrypt","atob","keystr","pemContents","split","trim","binaryDerString","binaryDer","importKey","_endpoint","_privateKey","_publicKey","_onEventReceivedSubject","setInterval","_isRunning","mainLoopRoutine","_isUsingDelinetEndpoint","_isIpfsLoaded","loadIpfs","_isOrbitDbLoaded","_logEvents","loadOrbitDb","checkOrbitDbLib","_loadingDb","OrbitDb","createInstance","_ipfsNode","_odb","on","dbname","peer","res","address","entry","progress","total","fetchLogEvents","heads","load","e","_evs","iterator","limit","gt","_lastHashFetched","collect","map","index","n","payload","_a","_b","_event","encryptedChunks","cry","encChunks","chunks","payloadStr","idx","encChunk","chunk","push","parse","eventType","fetchedLogEvents","indexOf","processEvent","toPublicKey","ipfsNode","_swarms","OrbitDB","sendEvent","evt","Error","SSUuid","createdAt","sendAckToEvent","eventId","AppComponent","systemSvc","route","integratorSvc","translate","setDefaultLang","currentLanguage","getBrowserLang","use","c","remove","isSystemReadyAsync","isReady","startPooling","ngOnInit","selectors","ctx_r1","ConfirmDialogComponent","dialogRef","data","title","message","onConfirm","close","onDismiss","MAT_DIALOG_DATA","$localize","ctx","MatchMediaUtil","theme","getItem","matchMedia","matches","documentElement","setAttribute","prefersColorScheme","EthIdentityProvider","getId","signIdentity","identity","provider","ethereum","ethers","wallet","getSigner","_type","ssW","sessionStorage","_createWallet","getAddress","ssSI","signMessage","signatures","mnemonicOpts","mnemonic","fromMnemonic","wordlist","encryptedJsonOpts","json","password","fromEncryptedJson","progressCallback","createRandom","SSOrbitdb","ipfsnode","_instance","_identity","GetEthWalletIdentity","dbName","preLoad","docsInstances","docs","indexBy","docsPoolInstances","accessController","write","logInstances","_odbInstance","_dbList","indexedDB","databases","zipdir","JSZip","folder","_db","GetIDB","dbBlob","open","dbkp","exportDB","replaceAll","zipblob","generateAsync","content","contentType","a","href","URL","createObjectURL","download","click","downloadUtil","_indb","onsuccess","indb","ev","result","enable","err","Identities","addIdentityProvider","accounts","listAccounts","daiContract","symbol","balance","balanceOf","createIdentity","SystemService","sysSvc","cryptoSvc","router","dialog","_isSystemReady","_selectedMerchantGroupChanged","_selectedMerchantChanged","tId","terminalId","_loadSystem","baseCurrency","_baseCurrency","storedBaseCurrency","odp_terminal_base_currency","reload","_terminalId","localSettings","_localSettings","_tSettings","General","TerminalId","OperationMode","isStaticAppOnly","Locale","Timer","Appearence","ColorTheme","StartMenu","Animations","Methods","currency","method","cardBrand","displayName","selectedMerchant","Endpoints","Debug","getTheme","startsWith","loadStaticStack","loadApiStack","loadCommonShared","loadLocalPersistedChooses","selectedMerchantGroup","navigate","logDatahashChannel","oauthRes","OauthToken","isAuthenticated","sessionIdentity","r","newValue","_selectedMerchantGroup","_selectedMerchant","field","_fieldValue","logout","get","msg","maxWidth","showCancel","afterClosed","ok","clear","delinetEndpoint","delinetClient","DelinetClient","onEventReceived","start","stop","newsuid","newEvt","fullCode","metadata","IntegratorService","itemSvc","_onInitialized","_onOrdersListUpdatedSubject","_onOrdersListLoadedSubject","_onAddedOrderSubject","_onUpdatedOrderSubject","_onDeletedOrderSubject","_onEventFromPoolSubject","_countDownPooling","_progressToNextPooling","_OnErrorSubject","selectedMerchantChanged","d2","selectedMerchantPost","listOrder","adapter","OAdWebApi","activeAdapters","OAdWebSocket","OAdDelinetChannel","onNewEvents","_events","dto","event","source","isPoolingLoopRoutineActive","secondsElapsedFromLastPooling","poolingDelaySeconds","isRunningPooling","countDown","Math","floor","initialized","stopPooling","isRunningProcessEvent","isWaitingToProcessEvent","_storedEvents","_storedEvent","getAdapter","_localStoredOrder","where","o","order","defaultIfEmpty","firstOrDefault","_orderDetail","newUuid","modifiedAt","updateOrderEvent","persistEventChanges","obj","driver","workerExternalUuid","workerName","workerPhone","workerPhotoUrl","workerVehicleType","GTO","AAO","CLT","AAD","consumerRequestCancellation","processingStatus","processingStatusAt","promisses","x","storedOrderid","storedOrderId","_localOrderDetail","ctx_r8","ctx_r10","OrderStatusComponent","EventEmitter","acceptCancellation","changeStatusEvent","emit","idStoredOrder","orderStatus","storedOrder","denyCancellation","ctx_r7","ctx_r14","OrdersDetailComponent","breakpointObserver","locale","observe","Breakpoints","shareReplay","isHandset$","_isHandset","closeEvent","getCurrencySymbol","getLocaleCurrencySymbol","getTime","timeDiffCalc","dateFuture","dateNow","diffInMilliSeconds","abs","days","hours","minutes","difference","LOCALE_ID","i18n_19","ctx_r11","oxw","ctx_r13","ctx_r16","OrdersComponent","FormControl","tipo","lst","IMMEDIATE","currentId","selectOrderById","selectOrder","ngOnDestroy","onInitialized","starting","mountList","listOrderStatusGroup","dtoOrderStatus","onAddedOrder","sO","group","qtd","alert","onUpdatedOrder","OldGroup","y","any","s","os","splice","newGroup","onDeletedOrder","element","losgp","selectedStoredOrder","osc","dir","selectedOrderStatus","navigateByUrl","storedOrders","lstIndex","lstDtoOrderStatusGroup","dtoOg","addGroup","checkCancelleds","SplashComponent","onChange","onNotChange","onError","chainId","web3","currentProvider","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","catch","ctx_r6","AuthComponent","_http","_router","authSvc","removeItem","checkMetamask","__isMetaMaskShim__","SSWeb3","keydownListener","doLogin","doLoginWithWallet","clientId","_usr","_pwd","DebugComponent","merchantGroupSvc","createDelinetChannel","channelName","newLogChannel","logChannel","testPublishPackage","IpfsHttpClient","pair","sig","authHeader","Buffer","url","authorization","urlPrefix","files","fetch","mode","lastResult","_c","v","addAll","h","cid","sendDelinetEvent","txttest","testGetList","response","exportToJsonString","idbDatabase","cb","exportObject","objectStoreNamesSet","Set","objectStoreNames","size","Array","from","transaction","onerror","storeName","allObjects","objectStore","openCursor","cursor","target","continue","Object","keys","testBackup","dbs","db","idbReq","jsonString","testGetOne","deleteTest","capFirst","string","charAt","toUpperCase","slice","getRandomInt","min","max","random","generateName","name1","name2","testPLCEvent","newuid","displayId","orderType","orderTiming","salesChannel","preparationStartDateTime","isTest","extraInfo","merchant","customer","documentNumber","phone","number","localizer","localizerExpiration","ordersCountOnMerchant","imageUrl","externalCode","ean","unit","quantity","unitPrice","addition","price","scalePrices","optionsPrice","totalPrice","observations","delivery","deliveredBy","deliveryDateTime","deliveryAddress","streetName","streetNumber","formattedAddress","neighborhood","complement","reference","postalCode","city","country","coordinates","latitude","longitude","benefits","additionalFees","subTotal","deliveryFee","orderAmount","payments","prepaid","pending","methods","picking","picker","replacementOptions","additionalInfo","schedule","deliveryDateTimeStart","deliveryDateTimeEnd","takeout","takeoutDateTime","indoor","table","jsonstr","test","isNew","objtst","ordersEndpoint","adminMode","pwaManifest","product","ImgService","domSanitizer","getBlobUrlFromImageBlob","bypassSecurityTrustUrl","getBlobUrlFromHashAsync","resizeImage","settings","maxSize","reader","FileReader","image","Image","canvas","no","match","onload","readerEvent","height","_","getContext","drawImage","dataURI","bytes","unescape","mime","ia","dataURItoBlob","toDataURL","resize","readAsDataURL","ctx_r4","ChooseMerchantComponent","merchantSvc","imgSvc","pwaman","app_icon_ipfs","imgLogo","MerchantList","createNewMerchant","selectMerchant","m","inputElm","onchange","srcElement","MffUploadFileComponent","uploadFile","UploadUtil","_file","_formData","post","reportProgress","timeout","HttpEventType","round","loaded","onComplete","WizardNewMerchantGroupComponent","appName","appShortName","appIcon","onUploadIcon","uploadedIcon","formMerchantGroup","register","jsonpwa","short_name","newRegister","CatalogDataService","categorySvc","catalogSvc","optionGroupProductSvc","optionGroupSvc","productSvc","optionSvc","_onLoadCatalogsSubject","_onLoadCategoriesSubject","catalog","_catalog","getCategories","filterCategories","categories","catFilter","categoriesDb","_self","loadCatalog","catalogs","getOptionGroups","optionGroupProducts","data2","optionGroups","populateOptionGroups","saveCategory","category","c2","idx2","deleteCategory","getItemByCategory","saveItem","it","setIdsComplements","w","item","productIdNavigation","template","saveProduct","saveOptionGroup","og","optionGroupProduct","optionGroupId","optionGroupIdNavigation","option","deleteItem","objs","doc","j","k","ogp","setStatusItem","itemId","setStatusOption","getProduct","getOptionGroup","ChangeDebouncedDirective","ngModel","subscription","control","valueChanges","skip","distinctUntilChanged","debounceTime","ngModelChangeDebounceTime","ngModelChangeDebounced","unsubscribe","ctx_r25","ctx_r37","ctx_r39","ctx_r41","PublishComponent","brandSvc","couponSvc","paymentMethodSvc","customerAppEndpointSvc","hashdataSvc","catalogDataSvc","ipfsW3GWList","Food","Pharmacy","Gifts","setCurrentGateway","checkCustomGW","selectedIpfsGateway","useCustomIpfsGatewayEnabled","getLoweredUnspacedName","strName","toLowerCase","loadHashes","odpStoreNameValue","odpStoreName","appname","shortname","odpName","appicon","updateNFTEnabled","checkNFT","stgGateway","_web3","w3","Web3","givenProvider","checkNetwork","isWrongNetwork","hashes","orderByDescending","lastKnownPublications","onlyNameds","lastHashdata","hashApp","lastHashApp","hashPackage","popAlert","isNftOwner","odpStoreContract","eth","Contract","odpStoreNamesContractAbi","odpStoreNamesContractAddress","tokenFromCodename","parseInt","codeName_to_tokenId","call","isNftFree","tokenOwner","ownerOf","nftHash","tokenId_to_hashCustomerApp","requestAccounts","mgroup","mgroupupdated","generateMetadata","ipfsGw","customGateway","nftFiles","description","odpStoreDescription","external_url","lastAppPublication","attributes","trait_type","odpSubStoreCategory","odpStoreCategory","lastResultTokenMeta","g","publishingNFT","mintNFT","hasMintedOrUpdatedErrorNftFlag","hasMintedOrUpdatedNftFlag","gasPrice","getGasPrice","web3Accounts","mintPrice","currentCreatePrice","createNewStoreMethodCall","createNewStore","workingWeb3","workingWeb3Title","lastMintedNftName","workingWeb3Msg","_value","_gasPrice","mintTx","send","gasLimit","hashp","lastPubHash","hashOdpName","updateNFT","currentUpdatePrice","updateURIMethodCall","updateTokenURI","getIpfsGWLink","getIpfsGWLinkView","getIpnsGWLink","ipns","getOdpStoreLink","ipfsOdpCustomerAppPublication","getOdpStoreGatewayLink","cleanStringify","object","copyWithoutCircularReferences","references","maxDepth","depth","cleanObject","pop","generateAndPublish","genHashDataMsg","publishingHashData","generateCustomerAppEnabled","publishingAppData","publishCustomerAppEnabled","publishingIPNS","datahashChannel","pushHashDataToOrbitDbEnabled","brandObj","_merc","delinetPrivateKey","merchantIdNavigation","productRequest","idxMerchant","brandMerchant","couponsRequest","paymentMethodRequest","paymentList","catalogsM","_category","_itm","customerAppEndPointRequest","custAppEndpoints","protocolType","uri","delinetPublicKey","_d","pt","rt","lastPublication","hashP2p","genCustomerAppMsg","customerAppIpfsDir","getCustomerAppIpfsFiles","lastResultApp","results","_f","tn","Zt","list1","list2","genIpnsMsg","publish","lastIPNSPublication","hashIpns","ls","dataFromIpfs","TextDecoder","decode","endsWith","subFiles","concat","inputs","internalType","stateMutability","anonymous","indexed","outputs","_r0","WizardNewMerchantComponent","customerAppEndpointsSvc","channelOptions","streetAddress","email","delinetendpoint","getCurrency","navigator","language","currencyOptions","formMerchant","settingsData","newMerchantRegister","acceptDeliveryOrder","acceptScheduledOrder","acceptTableOrder","acceptTakeoutOrder","selectedOptChannel","createNewDelinetChannel","newMerchantResponse","newCatalog","catalogResponse","ctx_r5","ChooseMerchantGroupComponent","hashDataSvc","MerchantGroupList","loadFromWeb3","mgrp","getAppIconUrl","gettingFromWeb3","account_totalTokens","_added","tokenOfOwnerByIndex","tokenUri","tokenURI","codename","tokenId_to_codeName","jsonMetaData","ipfsApp","appData","_cidIpfs","hashData","endpointHashdata","endpoints","merchantGroup","nmerchant","indexCatalog","indexCategory","createNewMerchantGroup","pwa","selectMerchantGroup","ctx_r15","ctx_r17","LeftBarMenuComponent","instance","toogleShowText","showText","notImplemented","selectedMerchantGroupChanged","HelpComponent","showTextOnMenus","SERVER_URL","$event","ctx_r22","STORE_ID","ctx_r28","API_KEY","ctx_r34","SetPaymentMethodComponent","settingsDataPropertiesNames","getOwnPropertyNames","loadGwSettingsData","selected","_method","gatewaySettings","gwSettingsData","updateGwSettingsData","_m","newPaymentMethod","gateway","ctx_r30","ctx_r32","SettingsComponent","getProperties","addOrderEndpoint","removeOrderEndpoint","updateSettings","settingsChanged","ctx_r12","i_r11","ctx_r19","ctx_r31","PizzaSizeEditorComponent","acceptedFractions","slices","deleteSize","addSize","newSize","newOptionGroupProduct","changeQtyFlavors","acceptedFraction","sort","getTextAcceptsFlavors","alterStatus","deleteConfirm","PizzaCrustEditorComponent","PizzaEdgeEditorComponent","ctx_r2","ctx_r33","ctx_r35","CategoryEditorComponent","tmpName","choosingTemplate","loadTempletePizza","loadSizePizza","itemPizza","productPizza","chooseOption","setTab","listTabs","currentTab","checkContinue","newIdx","info","save","openDialog","loadSave","getMaxOptionGroupProducts","retOg","ogpNew","listAcceptedFractions","back","OptionEditorComponent","deleteOption","onDeletedOption","OptionGroupProductEditorComponent","_mandatory","editing","mandatory","validate","addItemComplement","ctx_r18","ctx_r20","ctx_r24","ItemEditorComponent","notChangedItem","hasComplement","cancel","addComplementGroup","position","right","onDeletedOptionGroup","ChangePriceService","_onSavePricesSubject","changeItemPrice","objChangingPrice","changingPrice","itemsToChangePrice","changedPrice","hasChanges","blurItem","discard","ctx_r26","ctx_r36","ctx_r38","ctx_r42","ctx_r44","ctx_r56","op_r51","ctx_r59","CategoryListItemComponent","changePriceSvc","onSavePrices","onUploadImg","_item","changeImg","hasIpfsHash","uploadedImg","alterStatusItem","editItem","tmpItem","loadDelete","toggleShowOptions","showOptions","ctx_r23","CategoryComponent","addItem","editCategory","toggleShowItems","showItems","routes","redirectTo","pathMatch","component","animation","realignInkBar","tabs","ngDoCheck","addCategory","reorder","PageCategoryComponent","AppRoutingModule","RouterModule","useHash","BrowserAnimationsModule","AuthInterceptor","intercept","now","handle","tap","finalize","OrdersInterceptor","clone","getAll","products","productsIndex","uuid","productsDb","opProductsDb","propertyName","search","put","delete","fakeRestControllers","ProductFakeController","optionGroup","allCatalogs","allCategories","allOptionGroups","StaticStackInterceptor","started","staticStackManipulator","staticStackResponseAsync","spltd","lastPartOfUrl","fakeRestController","find","dbdoc","postResponse","del","queryField","SSRestBridge","httpres","statusText","subj","complete","UploadInterceptor","getIpfsMeta","fullName","httpInterceptorProviders","provide","HTTP_INTERCEPTORS","useClass","multi","ItemDetailsComponent","imgItem","ItemPriceComponent","originalPrice","applyingDiscount","applyDiscount","changePrice","percentage","changePercentage","removeDiscount","ItemClassificationComponent","ItemAvailabilityComponent","OptionGroupListItemComponent","edit","TranslateHttpLoader","registerLocaleData","ptBr","es","zh","AppModule","library","addIconPacks","fas","fab","bootstrap","useValue","MatDialogRef","DEFAULT_CURRENCY_CODE","imports","BrowserModule","TranslateModule","defaultLanguage","loader","TranslateLoader","useFactory","HttpLoaderFactory","deps","CommonModule","HttpClientModule","FlexLayoutModule","ReactiveFormsModule","FontAwesomeModule","MatTabsModule","MatListModule","MatButtonModule","MatTooltipModule","MatMenuModule","MatInputModule","MatSelectModule","MatProgressSpinnerModule","FormsModule","MatDialogModule","MatIconModule","MatProgressBarModule","AngularSplitModule","MatToolbarModule","MatSlideToggleModule","MatRadioModule","MatCheckboxModule","i4","i8","i10","__main","__NgCli_bootstrap_1","bootstrapModule"],"sources":["./src/app/shared/order/order-style-definition.ts","./src/app/shared/animations.ts","./src/app/api/base-service.ts","./src/app/api/api-configuration.ts","./src/app/api/services/authentication.service.ts","./src/app/api/services/brand.service.ts","./src/app/api/services/catalog.service.ts","./src/app/api/services/category.service.ts","./src/app/api/services/coupon.service.ts","./src/app/api/services/customer-app-endpoint.service.ts","./src/app/api/services/hash-data.service.ts","./src/app/api/services/item.service.ts","./src/app/api/services/merchant.service.ts","./src/app/api/services/merchant-group.service.ts","./src/app/api/services/option.service.ts","./src/app/api/services/option-group.service.ts","./src/app/api/services/option-group-product.service.ts","./src/app/api/services/order.service.ts","./src/app/api/services/payment-method.service.ts","./src/app/api/services/product.service.ts","./src/app/api/services/sys.service.ts","./src/app/shared/integrator-db.ts","./src/app/services/integrator/adapters/order/webapi/o-ad-web-api.ts","./src/app/static-stack/uuid.ts","./src/app/services/integrator/adapters/order/websocket/o-ad-web-socket.ts","./src/app/static-stack/ipfs.ts","./src/app/static-stack/loadlib.ts","./src/app/static-stack/authentication.ts","./src/app/services/crypto.service.ts","./src/app/services/integrator/adapters/order/delinet/delinet-client.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/components/dialogs/confirm-dialog/confirm-dialog.component.html","./src/app/components/dialogs/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/match-media-util.ts","./src/app/static-stack/eth-identity-provider.ts","./src/app/static-stack/identity-provider-interface.ts","./src/app/static-stack/orbitdb.ts","./src/app/shared/download-util.ts","./src/app/services/system.service.ts","./src/app/services/integrator/adapters/order/delinet/o-ad-delinet.ts","./src/app/services/integrator/integrator.service.ts","./src/app/components/order-status/order-status.component.html","./src/app/components/order-status/order-status.component.ts","./src/app/components/order-detail/order-detail.component.html","./src/app/components/order-detail/order-detail.component.ts","./src/app/pages/orders/orders.component.html","./src/app/pages/orders/orders.component.ts","./src/app/components/splash/splash.component.ts","./src/app/components/splash/splash.component.html","./src/app/static-stack/web3.ts","./src/app/pages/auth/auth.component.html","./src/app/pages/auth/auth.component.ts","./src/app/pages/debug/debug.component.ts","./src/app/pages/debug/debug.component.html","./src/app/services/img.service.ts","./src/app/pages/choose-merchant/choose-merchant.component.html","./src/app/pages/choose-merchant/choose-merchant.component.ts","./src/app/shared/upload-util.ts","./src/app/components/mat-form-field/mff-upload-file/mff-upload-file.component.html","./src/app/components/mat-form-field/mff-upload-file/mff-upload-file.component.ts","./src/app/pages/wizards/wizard-new-merchant-group/wizard-new-merchant-group.component.html","./src/app/pages/wizards/wizard-new-merchant-group/wizard-new-merchant-group.component.ts","./src/app/services/catalog/catalog-data.service.ts","./src/app/directives/change-debounced.directive.ts","./src/app/pages/publish/publish.component.html","./src/app/pages/publish/publish.component.ts","./src/app/pages/wizards/wizard-new-merchant/wizard-new-merchant.component.html","./src/app/pages/wizards/wizard-new-merchant/wizard-new-merchant.component.ts","./src/app/pages/choose-merchant-group/choose-merchant-group.component.html","./src/app/pages/choose-merchant-group/choose-merchant-group.component.ts","./src/app/components/left-bar-menu/left-bar-menu.component.html","./src/app/components/left-bar-menu/left-bar-menu.component.ts","./src/app/pages/help/help.component.ts","./src/app/pages/help/help.component.html","./src/app/components/set-payment-method/set-payment-method.component.html","./src/app/components/set-payment-method/set-payment-method.component.ts","./src/app/pages/settings/settings.component.html","./src/app/pages/settings/settings.component.ts","./src/app/components/pizza-size-editor/pizza-size-editor.component.html","./src/app/components/pizza-size-editor/pizza-size-editor.component.ts","./src/app/components/pizza-crust-editor/pizza-crust-editor.component.ts","./src/app/components/pizza-crust-editor/pizza-crust-editor.component.html","./src/app/components/pizza-edge-editor/pizza-edge-editor.component.ts","./src/app/components/pizza-edge-editor/pizza-edge-editor.component.html","./src/app/components/category-editor/category-editor.component.html","./src/app/components/category-editor/category-editor.component.ts","./src/app/components/option/option-editor/option-editor.component.html","./src/app/components/option/option-editor/option-editor.component.ts","./src/app/components/option/option-group-product-editor/option-group-product-editor.component.html","./src/app/components/option/option-group-product-editor/option-group-product-editor.component.ts","./src/app/components/item/item-editor/item-editor.component.html","./src/app/components/item/item-editor/item-editor.component.ts","./src/app/services/catalog/change-price.service.ts","./src/app/components/category-list-item/category-list-item.component.html","./src/app/components/category-list-item/category-list-item.component.ts","./src/app/components/category/category.component.html","./src/app/components/category/category.component.ts","./src/app/pages/page-category/page-category.component.html","./src/app/app-routing.module.ts","./src/app/pages/page-category/page-category.component.ts","./src/app/api-interceptors/auth-interceptor.ts","./src/app/api-interceptors/orders-interceptor.ts","./src/app/static-stack/fake-controllers/product.fakecontroller.ts","./src/app/static-stack/fake-controllers/index.ts","./src/app/static-stack/fake-controllers/optionGroup.fakecontroller.ts","./src/app/static-stack/fake-controllers/brand.fakecontroller.ts","./src/app/api-interceptors/staticStackInterceptor.ts","./src/app/static-stack/restbridge.ts","./src/app/api-interceptors/upload-interceptor.ts","./src/app/api-interceptors/index.ts","./src/app/components/item/item-details/item-details.component.html","./src/app/components/item/item-details/item-details.component.ts","./src/app/components/item/item-price/item-price.component.html","./src/app/components/item/item-price/item-price.component.ts","./src/app/components/item/item-classification/item-classification.component.ts","./src/app/components/item/item-classification/item-classification.component.html","./src/app/components/item/item-availability/item-availability.component.ts","./src/app/components/item/item-availability/item-availability.component.html","./src/app/components/option/option-group-list-item/option-group-list-item.component.html","./src/app/components/option/option-group-list-item/option-group-list-item.component.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export class OrderStyleDefinition {\n\n    public static readonly osd: any = {\n        PLC: {\n            statusGroup: \"Pending\",\n            instruction: { label: \"Confirm order\", icon: \"exclamation-circle\" },\n            buttons: [{ value: \"requestCancellation\", label: \"Cancel\", icon: \"trash-alt\" }, { value: \"confirm\", label: \"Confirm\", icon: \"vote-yea\" }],\n            backgroundColor:\"#fde7e69e\",\n            color:\"#d10c0c\"\n        },\n        CFM: {\n            statusGroup: \"In Preparation\",\n            instruction: {label:\"Deliver until\",icon:\"check\"},\n            buttons: [{ value: \"requestCancellation\", label: \"Cancelar\", icon: \"trash-alt\" }, { value: \"dispatch\", label: \"Despachar\", icon: \"motorcycle\" }, { value: \"readyToPickup\", label: \"Pronto para retirar\", icon: \"check\" }],\n            backgroundColor:\"#ffe9bb4d\",\n            color:\"#e99516\"\n        },\n        RTP: {\n            statusGroup: \"Ready To Pickup\",\n            instruction: {label:\"order ready\",icon:\"shopping-bag\"},\n            buttons: [{ value: \"requestCancellation\", label: \"Cancelar\", icon: \"trash-alt\" }, { value: \"CON\", label: \"Concluir\", icon: \"check-circle\" }],\n            backgroundColor:\"#c8efc847\",\n            color:\"#09b509\"\n        },\n        DSP: {\n            statusGroup: \"Dispatched\",\n            instruction: {label:\"order sended\",icon:\"motorcycle\"},\n            buttons: [{ value: \"requestCancellation\", label: \"Cancelar\", icon: \"trash-alt\" }, { value: \"CON\", label: \"Concluir\", icon: \"check-circle\" }],\n            backgroundColor:\"#c8efc850\",\n            color:\"#09b509\"\n        },\n        CON: {\n            statusGroup: \"Concluded\",\n            instruction: {label:\"order concluded\",icon:\"check\"},\n            buttons: [],\n            backgroundColor:\"lightgray\",\n            color:\"gray\"\n        },\n        CAN: {\n            statusGroup: \"Canceled\",\n            instruction: {label:\"order canceled\",icon:\"times-circle\"},\n            buttons: [],\n            backgroundColor:\"lightgray\",\n            color:\"gray\"\n        },\n        OWO: {\n            statusGroup: \"Order with ocurrences\",\n            instruction: {label:\"need attention\",icon:\"exclamation-circle\"},\n            buttons: [],\n            backgroundColor:\"red\",\n            color:\"white\"\n        },\n    };\n\n\n}\n","import { animate, query, state, style, transition, trigger } from \"@angular/animations\";\n\n\nexport const animRouteTransition=trigger(\n    'routeAnimations', \n    [\n      transition(\n        'orders <=> *, settings <=> *, help <=> *,publish <=> *,category <=> *', \n        [\n          query(':self',[\n            style({  \"margin-left\":\"100%\", opacity: 0 }),\n            animate('0.2s ease-out', \n            style({  \"margin-left\":\"0%\",opacity: 1 }))\n          ]),\n          \n        ]\n      )\n    ]\n  );\n\nexport const animFadeInOutAnimation=trigger(\n    'fadeInOutAnimation', \n    [\n      transition(\n        ':enter', \n        [\n          style({  opacity: 0 }),\n          animate('1s ease-out', \n                  style({  opacity: 1 }))\n        ]\n      ),\n      transition(\n        ':leave', \n        [\n          style({ opacity: 1 }),\n          animate('1s ease-in', \n                  style({  opacity: 0 }))\n        ]\n      )\n    ]\n  )\n\nexport const animSlideInOutAnimation=trigger(\n    'slideInOutAnimation', \n    [\n      transition(\n        ':enter', \n        [\n          style({ \"margin-left\":\"100%\" , opacity: 0 }),\n          animate('0.15s ease-out', \n                  style({ \"margin-left\":\"0%\"  ,opacity: 1 }))\n        ]\n      ),\n      transition(\n        ':leave', \n        [\n          style({\"margin-left\":\"0%\", opacity: 1 }),\n          animate('0.05s ease-in', \n                  style({ \"margin-left\":\"100%\", opacity: 0 }))\n        ]\n      )\n    ]\n  )\n\n  export const animGrowAnimation=trigger(\n    'growAnimation', \n    [\n      transition(\n        ':enter', \n        [\n          style({ \"max-width\":\"0%\" , opacity: 0 }),\n          animate('0.1s ease-out', \n                  style({ \"max-width\":\"100%\"  ,opacity: 1 }))\n        ]\n      ),\n      transition(\n        ':leave', \n        [\n          style({\"max-width\":\"100%\", opacity: 1 }),\n          animate('0.3s ease-in', \n                  style({ \"max-width\":\"0%\", opacity: 0 }))\n        ]\n      )\n    ]\n  )\n\n  export const animGrowMenuAnimation=trigger('openCloseMenu', [\n    // ...\n    state('open', style({\n    })),\n    state('closed', style({\n      'width': '40px',\n    })),\n    transition('open => closed', [\n      animate('0.1s')\n    ]),\n    transition('closed => open', [\n      animate('0.05s')\n    ]),\n  ])","/* tslint:disable */\nimport { HttpClient, HttpParameterCodec, HttpParams } from '@angular/common/http';\nimport { ApiConfiguration } from './api-configuration';\n\n/**\n * Custom parameter codec to correctly handle the plus sign in parameter\n * values. See https://github.com/angular/angular/issues/18261\n */\nclass ParameterCodec implements HttpParameterCodec {\n  encodeKey(key: string): string {\n    return encodeURIComponent(key);\n  }\n\n  encodeValue(value: string): string {\n    return encodeURIComponent(value);\n  }\n\n  decodeKey(key: string): string {\n    return decodeURIComponent(key);\n  }\n\n  decodeValue(value: string): string {\n    return decodeURIComponent(value);\n  }\n}\nconst PARAMETER_CODEC = new ParameterCodec();\n\n/**\n * Base class for API services\n */\nexport class BaseService {\n  constructor(\n    protected config: ApiConfiguration,\n    protected http: HttpClient\n  ) {\n  }\n\n  private _rootUrl: string = '';\n\n  /**\n   * Returns the root url for API operations. If not set directly in this\n   * service, will fallback to ApiConfiguration.rootUrl.\n   */\n  get rootUrl(): string {\n    return this._rootUrl || this.config.rootUrl;\n  }\n\n  /**\n   * Sets the root URL for API operations in this service.\n   */\n  set rootUrl(rootUrl: string) {\n    this._rootUrl = rootUrl;\n  }\n\n  /**\n   * Creates a new `HttpParams` with the correct codec\n   */\n  protected newParams(): HttpParams {\n    return new HttpParams({\n      encoder: PARAMETER_CODEC\n    });\n  }\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\n\n/**\n * Global configuration for Api services\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiConfiguration {\n  rootUrl: string = '.';\n}\n\nexport interface ApiConfigurationInterface {\n  rootUrl?: string;\n}\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { DtoOauthResponse } from '../models/dto-oauth-response';\nimport { DtoOauthRequest } from '../models/dto-oauth-request';\n@Injectable({\n  providedIn: 'root',\n})\nclass AuthenticationService extends __BaseService {\n  static readonly postApiAuthenticationOauthTokenPath = '/api/Authentication/oauth/token';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiAuthenticationOauthTokenResponse(body?: DtoOauthRequest): __Observable<__StrictHttpResponse<DtoOauthResponse>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Authentication/oauth/token`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<DtoOauthResponse>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiAuthenticationOauthToken(body?: DtoOauthRequest): __Observable<DtoOauthResponse> {\n    return this.postApiAuthenticationOauthTokenResponse(body).pipe(\n      __map(_r => _r.body as DtoOauthResponse)\n    );\n  }\n}\n\nmodule AuthenticationService {\n}\n\nexport { AuthenticationService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { DtoBrand } from '../models/dto-brand';\n@Injectable({\n  providedIn: 'root',\n})\nclass BrandService extends __BaseService {\n  static readonly getApiBrandIdPath = '/api/Brand/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiBrandIdResponse(id: string): __Observable<__StrictHttpResponse<DtoBrand>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Brand/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<DtoBrand>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiBrandId(id: string): __Observable<DtoBrand> {\n    return this.getApiBrandIdResponse(id).pipe(\n      __map(_r => _r.body as DtoBrand)\n    );\n  }\n}\n\nmodule BrandService {\n}\n\nexport { BrandService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { Catalog } from '../models/catalog';\n@Injectable({\n  providedIn: 'root',\n})\nclass CatalogService extends __BaseService {\n  static readonly getApiCatalogMerchantMerchantIdPath = '/api/Catalog/merchant/{merchantId}';\n  static readonly getApiCatalogIdPath = '/api/Catalog/{id}';\n  static readonly putApiCatalogIdPath = '/api/Catalog/{id}';\n  static readonly deleteApiCatalogIdPath = '/api/Catalog/{id}';\n  static readonly postApiCatalogPath = '/api/Catalog';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param merchantId undefined\n   * @return Success\n   */\n  getApiCatalogMerchantMerchantIdResponse(merchantId: string): __Observable<__StrictHttpResponse<Array<Catalog>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Catalog/merchant/${encodeURIComponent(String(merchantId))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Catalog>>;\n      })\n    );\n  }\n  /**\n   * @param merchantId undefined\n   * @return Success\n   */\n  getApiCatalogMerchantMerchantId(merchantId: string): __Observable<Array<Catalog>> {\n    return this.getApiCatalogMerchantMerchantIdResponse(merchantId).pipe(\n      __map(_r => _r.body as Array<Catalog>)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiCatalogIdResponse(id: string): __Observable<__StrictHttpResponse<Catalog>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Catalog/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Catalog>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiCatalogId(id: string): __Observable<Catalog> {\n    return this.getApiCatalogIdResponse(id).pipe(\n      __map(_r => _r.body as Catalog)\n    );\n  }\n\n  /**\n   * @param params The `CatalogService.PutApiCatalogIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiCatalogIdResponse(params: CatalogService.PutApiCatalogIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Catalog/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `CatalogService.PutApiCatalogIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiCatalogId(params: CatalogService.PutApiCatalogIdParams): __Observable<null> {\n    return this.putApiCatalogIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiCatalogIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/Catalog/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiCatalogId(id: string): __Observable<null> {\n    return this.deleteApiCatalogIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiCatalogResponse(body?: Catalog): __Observable<__StrictHttpResponse<Catalog>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Catalog`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Catalog>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiCatalog(body?: Catalog): __Observable<Catalog> {\n    return this.postApiCatalogResponse(body).pipe(\n      __map(_r => _r.body as Catalog)\n    );\n  }\n}\n\nmodule CatalogService {\n\n  /**\n   * Parameters for putApiCatalogId\n   */\n  export interface PutApiCatalogIdParams {\n    id: string;\n    body?: Catalog;\n  }\n}\n\nexport { CatalogService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { Category } from '../models/category';\n@Injectable({\n  providedIn: 'root',\n})\nclass CategoryService extends __BaseService {\n  static readonly getApiCategoryCatalogCatalogIdPath = '/api/Category/catalog/{catalogId}';\n  static readonly getApiCategoryIdPath = '/api/Category/{id}';\n  static readonly putApiCategoryIdPath = '/api/Category/{id}';\n  static readonly deleteApiCategoryIdPath = '/api/Category/{id}';\n  static readonly postApiCategoryPath = '/api/Category';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param catalogId undefined\n   * @return Success\n   */\n  getApiCategoryCatalogCatalogIdResponse(catalogId: string): __Observable<__StrictHttpResponse<Array<Category>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Category/catalog/${encodeURIComponent(String(catalogId))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Category>>;\n      })\n    );\n  }\n  /**\n   * @param catalogId undefined\n   * @return Success\n   */\n  getApiCategoryCatalogCatalogId(catalogId: string): __Observable<Array<Category>> {\n    return this.getApiCategoryCatalogCatalogIdResponse(catalogId).pipe(\n      __map(_r => _r.body as Array<Category>)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiCategoryIdResponse(id: string): __Observable<__StrictHttpResponse<Category>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Category/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Category>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiCategoryId(id: string): __Observable<Category> {\n    return this.getApiCategoryIdResponse(id).pipe(\n      __map(_r => _r.body as Category)\n    );\n  }\n\n  /**\n   * @param params The `CategoryService.PutApiCategoryIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiCategoryIdResponse(params: CategoryService.PutApiCategoryIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Category/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `CategoryService.PutApiCategoryIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiCategoryId(params: CategoryService.PutApiCategoryIdParams): __Observable<null> {\n    return this.putApiCategoryIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiCategoryIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/Category/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiCategoryId(id: string): __Observable<null> {\n    return this.deleteApiCategoryIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiCategoryResponse(body?: Category): __Observable<__StrictHttpResponse<Category>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Category`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Category>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiCategory(body?: Category): __Observable<Category> {\n    return this.postApiCategoryResponse(body).pipe(\n      __map(_r => _r.body as Category)\n    );\n  }\n}\n\nmodule CategoryService {\n\n  /**\n   * Parameters for putApiCategoryId\n   */\n  export interface PutApiCategoryIdParams {\n    id: string;\n    body?: Category;\n  }\n}\n\nexport { CategoryService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { Coupon } from '../models/coupon';\n@Injectable({\n  providedIn: 'root',\n})\nclass CouponService extends __BaseService {\n  static readonly getApiCouponPath = '/api/Coupon';\n  static readonly postApiCouponPath = '/api/Coupon';\n  static readonly getApiCouponMerchantMerchantIdPath = '/api/Coupon/merchant/{merchantId}';\n  static readonly getApiCouponIdPath = '/api/Coupon/{id}';\n  static readonly putApiCouponIdPath = '/api/Coupon/{id}';\n  static readonly deleteApiCouponIdPath = '/api/Coupon/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiCouponResponse(): __Observable<__StrictHttpResponse<Array<Coupon>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Coupon`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Coupon>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiCoupon(): __Observable<Array<Coupon>> {\n    return this.getApiCouponResponse().pipe(\n      __map(_r => _r.body as Array<Coupon>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiCouponResponse(body?: Coupon): __Observable<__StrictHttpResponse<Coupon>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Coupon`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Coupon>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiCoupon(body?: Coupon): __Observable<Coupon> {\n    return this.postApiCouponResponse(body).pipe(\n      __map(_r => _r.body as Coupon)\n    );\n  }\n\n  /**\n   * @param merchantId undefined\n   * @return Success\n   */\n  getApiCouponMerchantMerchantIdResponse(merchantId: string): __Observable<__StrictHttpResponse<Array<Coupon>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Coupon/merchant/${encodeURIComponent(String(merchantId))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Coupon>>;\n      })\n    );\n  }\n  /**\n   * @param merchantId undefined\n   * @return Success\n   */\n  getApiCouponMerchantMerchantId(merchantId: string): __Observable<Array<Coupon>> {\n    return this.getApiCouponMerchantMerchantIdResponse(merchantId).pipe(\n      __map(_r => _r.body as Array<Coupon>)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiCouponIdResponse(id: string): __Observable<__StrictHttpResponse<Coupon>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Coupon/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Coupon>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiCouponId(id: string): __Observable<Coupon> {\n    return this.getApiCouponIdResponse(id).pipe(\n      __map(_r => _r.body as Coupon)\n    );\n  }\n\n  /**\n   * @param params The `CouponService.PutApiCouponIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiCouponIdResponse(params: CouponService.PutApiCouponIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Coupon/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `CouponService.PutApiCouponIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiCouponId(params: CouponService.PutApiCouponIdParams): __Observable<null> {\n    return this.putApiCouponIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiCouponIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/Coupon/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiCouponId(id: string): __Observable<null> {\n    return this.deleteApiCouponIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule CouponService {\n\n  /**\n   * Parameters for putApiCouponId\n   */\n  export interface PutApiCouponIdParams {\n    id: string;\n    body?: Coupon;\n  }\n}\n\nexport { CouponService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { CustomerAppEndpoint } from '../models/customer-app-endpoint';\n@Injectable({\n  providedIn: 'root',\n})\nclass CustomerAppEndpointService extends __BaseService {\n  static readonly getApiCustomerAppEndpointPath = '/api/CustomerAppEndpoint';\n  static readonly postApiCustomerAppEndpointPath = '/api/CustomerAppEndpoint';\n  static readonly getApiCustomerAppEndpointMerchantMerchantIdPath = '/api/CustomerAppEndpoint/merchant/{merchantId}';\n  static readonly getApiCustomerAppEndpointIdPath = '/api/CustomerAppEndpoint/{id}';\n  static readonly putApiCustomerAppEndpointIdPath = '/api/CustomerAppEndpoint/{id}';\n  static readonly deleteApiCustomerAppEndpointIdPath = '/api/CustomerAppEndpoint/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiCustomerAppEndpointResponse(): __Observable<__StrictHttpResponse<Array<CustomerAppEndpoint>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/CustomerAppEndpoint`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<CustomerAppEndpoint>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiCustomerAppEndpoint(): __Observable<Array<CustomerAppEndpoint>> {\n    return this.getApiCustomerAppEndpointResponse().pipe(\n      __map(_r => _r.body as Array<CustomerAppEndpoint>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiCustomerAppEndpointResponse(body?: CustomerAppEndpoint): __Observable<__StrictHttpResponse<CustomerAppEndpoint>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/CustomerAppEndpoint`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<CustomerAppEndpoint>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiCustomerAppEndpoint(body?: CustomerAppEndpoint): __Observable<CustomerAppEndpoint> {\n    return this.postApiCustomerAppEndpointResponse(body).pipe(\n      __map(_r => _r.body as CustomerAppEndpoint)\n    );\n  }\n\n  /**\n   * @param merchantId undefined\n   * @return Success\n   */\n  getApiCustomerAppEndpointMerchantMerchantIdResponse(merchantId: string): __Observable<__StrictHttpResponse<Array<CustomerAppEndpoint>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/CustomerAppEndpoint/merchant/${encodeURIComponent(String(merchantId))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<CustomerAppEndpoint>>;\n      })\n    );\n  }\n  /**\n   * @param merchantId undefined\n   * @return Success\n   */\n  getApiCustomerAppEndpointMerchantMerchantId(merchantId: string): __Observable<Array<CustomerAppEndpoint>> {\n    return this.getApiCustomerAppEndpointMerchantMerchantIdResponse(merchantId).pipe(\n      __map(_r => _r.body as Array<CustomerAppEndpoint>)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiCustomerAppEndpointIdResponse(id: string): __Observable<__StrictHttpResponse<CustomerAppEndpoint>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/CustomerAppEndpoint/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<CustomerAppEndpoint>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiCustomerAppEndpointId(id: string): __Observable<CustomerAppEndpoint> {\n    return this.getApiCustomerAppEndpointIdResponse(id).pipe(\n      __map(_r => _r.body as CustomerAppEndpoint)\n    );\n  }\n\n  /**\n   * @param params The `CustomerAppEndpointService.PutApiCustomerAppEndpointIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiCustomerAppEndpointIdResponse(params: CustomerAppEndpointService.PutApiCustomerAppEndpointIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/CustomerAppEndpoint/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `CustomerAppEndpointService.PutApiCustomerAppEndpointIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiCustomerAppEndpointId(params: CustomerAppEndpointService.PutApiCustomerAppEndpointIdParams): __Observable<null> {\n    return this.putApiCustomerAppEndpointIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiCustomerAppEndpointIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/CustomerAppEndpoint/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiCustomerAppEndpointId(id: string): __Observable<null> {\n    return this.deleteApiCustomerAppEndpointIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule CustomerAppEndpointService {\n\n  /**\n   * Parameters for putApiCustomerAppEndpointId\n   */\n  export interface PutApiCustomerAppEndpointIdParams {\n    id: string;\n    body?: CustomerAppEndpoint;\n  }\n}\n\nexport { CustomerAppEndpointService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { HashData } from '../models/hash-data';\n@Injectable({\n  providedIn: 'root',\n})\nclass HashDataService extends __BaseService {\n  static readonly getApiHashDataPath = '/api/HashData';\n  static readonly postApiHashDataPath = '/api/HashData';\n  static readonly getApiHashDataIdPath = '/api/HashData/{id}';\n  static readonly putApiHashDataIdPath = '/api/HashData/{id}';\n  static readonly deleteApiHashDataIdPath = '/api/HashData/{id}';\n  static readonly getApiHashDataMerchantGroupIdPath = '/api/HashData/merchantGroup/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiHashDataResponse(): __Observable<__StrictHttpResponse<Array<HashData>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/HashData`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<HashData>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiHashData(): __Observable<Array<HashData>> {\n    return this.getApiHashDataResponse().pipe(\n      __map(_r => _r.body as Array<HashData>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiHashDataResponse(body?: HashData): __Observable<__StrictHttpResponse<HashData>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/HashData`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<HashData>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiHashData(body?: HashData): __Observable<HashData> {\n    return this.postApiHashDataResponse(body).pipe(\n      __map(_r => _r.body as HashData)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiHashDataIdResponse(id: string): __Observable<__StrictHttpResponse<HashData>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/HashData/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<HashData>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiHashDataId(id: string): __Observable<HashData> {\n    return this.getApiHashDataIdResponse(id).pipe(\n      __map(_r => _r.body as HashData)\n    );\n  }\n\n  /**\n   * @param params The `HashDataService.PutApiHashDataIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiHashDataIdResponse(params: HashDataService.PutApiHashDataIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/HashData/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `HashDataService.PutApiHashDataIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiHashDataId(params: HashDataService.PutApiHashDataIdParams): __Observable<null> {\n    return this.putApiHashDataIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiHashDataIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/HashData/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiHashDataId(id: string): __Observable<null> {\n    return this.deleteApiHashDataIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiHashDataMerchantGroupIdResponse(id: string): __Observable<__StrictHttpResponse<string>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/HashData/merchantGroup/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<string>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiHashDataMerchantGroupId(id: string): __Observable<string> {\n    return this.getApiHashDataMerchantGroupIdResponse(id).pipe(\n      __map(_r => _r.body as string)\n    );\n  }\n}\n\nmodule HashDataService {\n\n  /**\n   * Parameters for putApiHashDataId\n   */\n  export interface PutApiHashDataIdParams {\n    id: string;\n    body?: HashData;\n  }\n}\n\nexport { HashDataService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { Item } from '../models/item';\n@Injectable({\n  providedIn: 'root',\n})\nclass ItemService extends __BaseService {\n  static readonly getApiItemPath = '/api/Item';\n  static readonly postApiItemPath = '/api/Item';\n  static readonly getApiItemIdPath = '/api/Item/{id}';\n  static readonly putApiItemIdPath = '/api/Item/{id}';\n  static readonly deleteApiItemIdPath = '/api/Item/{id}';\n  static readonly getApiItemCategoryCategoryIdPath = '/api/Item/category/{categoryId}';\n  static readonly putApiItemStatusPath = '/api/Item/status';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiItemResponse(): __Observable<__StrictHttpResponse<Array<Item>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Item`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Item>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiItem(): __Observable<Array<Item>> {\n    return this.getApiItemResponse().pipe(\n      __map(_r => _r.body as Array<Item>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiItemResponse(body?: Item): __Observable<__StrictHttpResponse<Item>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Item`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Item>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiItem(body?: Item): __Observable<Item> {\n    return this.postApiItemResponse(body).pipe(\n      __map(_r => _r.body as Item)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiItemIdResponse(id: string): __Observable<__StrictHttpResponse<Item>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Item/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Item>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiItemId(id: string): __Observable<Item> {\n    return this.getApiItemIdResponse(id).pipe(\n      __map(_r => _r.body as Item)\n    );\n  }\n\n  /**\n   * @param params The `ItemService.PutApiItemIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiItemIdResponse(params: ItemService.PutApiItemIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Item/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `ItemService.PutApiItemIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiItemId(params: ItemService.PutApiItemIdParams): __Observable<null> {\n    return this.putApiItemIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiItemIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/Item/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiItemId(id: string): __Observable<null> {\n    return this.deleteApiItemIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param categoryId undefined\n   * @return Success\n   */\n  getApiItemCategoryCategoryIdResponse(categoryId: string): __Observable<__StrictHttpResponse<Array<Item>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Item/category/${encodeURIComponent(String(categoryId))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Item>>;\n      })\n    );\n  }\n  /**\n   * @param categoryId undefined\n   * @return Success\n   */\n  getApiItemCategoryCategoryId(categoryId: string): __Observable<Array<Item>> {\n    return this.getApiItemCategoryCategoryIdResponse(categoryId).pipe(\n      __map(_r => _r.body as Array<Item>)\n    );\n  }\n\n  /**\n   * @param params The `ItemService.PutApiItemStatusParams` containing the following parameters:\n   *\n   * - `status`:\n   *\n   * - `productId`:\n   *\n   * - `items`:\n   */\n  putApiItemStatusResponse(params: ItemService.PutApiItemStatusParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    if (params.status != null) __params = __params.set('status', params.status.toString());\n    if (params.productId != null) __params = __params.set('productId', params.productId.toString());\n    (params.items || []).forEach(val => {if (val != null) __params = __params.append('items', val.toString())});\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Item/status`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `ItemService.PutApiItemStatusParams` containing the following parameters:\n   *\n   * - `status`:\n   *\n   * - `productId`:\n   *\n   * - `items`:\n   */\n  putApiItemStatus(params: ItemService.PutApiItemStatusParams): __Observable<null> {\n    return this.putApiItemStatusResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule ItemService {\n\n  /**\n   * Parameters for putApiItemId\n   */\n  export interface PutApiItemIdParams {\n    id: string;\n    body?: Item;\n  }\n\n  /**\n   * Parameters for putApiItemStatus\n   */\n  export interface PutApiItemStatusParams {\n    status?: string;\n    productId?: string;\n    items?: Array<string>;\n  }\n}\n\nexport { ItemService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { Merchant } from '../models/merchant';\n@Injectable({\n  providedIn: 'root',\n})\nclass MerchantService extends __BaseService {\n  static readonly getApiMerchantPath = '/api/Merchant';\n  static readonly postApiMerchantPath = '/api/Merchant';\n  static readonly getApiMerchantIdPath = '/api/Merchant/{id}';\n  static readonly putApiMerchantIdPath = '/api/Merchant/{id}';\n  static readonly deleteApiMerchantIdPath = '/api/Merchant/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiMerchantResponse(): __Observable<__StrictHttpResponse<Array<Merchant>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Merchant`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Merchant>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiMerchant(): __Observable<Array<Merchant>> {\n    return this.getApiMerchantResponse().pipe(\n      __map(_r => _r.body as Array<Merchant>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiMerchantResponse(body?: Merchant): __Observable<__StrictHttpResponse<Merchant>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Merchant`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Merchant>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiMerchant(body?: Merchant): __Observable<Merchant> {\n    return this.postApiMerchantResponse(body).pipe(\n      __map(_r => _r.body as Merchant)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiMerchantIdResponse(id: string): __Observable<__StrictHttpResponse<Merchant>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Merchant/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Merchant>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiMerchantId(id: string): __Observable<Merchant> {\n    return this.getApiMerchantIdResponse(id).pipe(\n      __map(_r => _r.body as Merchant)\n    );\n  }\n\n  /**\n   * @param params The `MerchantService.PutApiMerchantIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiMerchantIdResponse(params: MerchantService.PutApiMerchantIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Merchant/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `MerchantService.PutApiMerchantIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiMerchantId(params: MerchantService.PutApiMerchantIdParams): __Observable<null> {\n    return this.putApiMerchantIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiMerchantIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/Merchant/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiMerchantId(id: string): __Observable<null> {\n    return this.deleteApiMerchantIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule MerchantService {\n\n  /**\n   * Parameters for putApiMerchantId\n   */\n  export interface PutApiMerchantIdParams {\n    id: string;\n    body?: Merchant;\n  }\n}\n\nexport { MerchantService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { MerchantGroup } from '../models/merchant-group';\n@Injectable({\n  providedIn: 'root',\n})\nclass MerchantGroupService extends __BaseService {\n  static readonly getApiMerchantGroupPath = '/api/MerchantGroup';\n  static readonly postApiMerchantGroupPath = '/api/MerchantGroup';\n  static readonly getApiMerchantGroupIdPath = '/api/MerchantGroup/{id}';\n  static readonly putApiMerchantGroupIdPath = '/api/MerchantGroup/{id}';\n  static readonly deleteApiMerchantGroupIdPath = '/api/MerchantGroup/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param params The `MerchantGroupService.GetApiMerchantGroupParams` containing the following parameters:\n   *\n   * - `pesq`:\n   *\n   * - `parentId`:\n   *\n   * @return Success\n   */\n  getApiMerchantGroupResponse(params: MerchantGroupService.GetApiMerchantGroupParams): __Observable<__StrictHttpResponse<Array<MerchantGroup>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    if (params.pesq != null) __params = __params.set('pesq', params.pesq.toString());\n    if (params.parentId != null) __params = __params.set('parentId', params.parentId.toString());\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/MerchantGroup`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<MerchantGroup>>;\n      })\n    );\n  }\n  /**\n   * @param params The `MerchantGroupService.GetApiMerchantGroupParams` containing the following parameters:\n   *\n   * - `pesq`:\n   *\n   * - `parentId`:\n   *\n   * @return Success\n   */\n  getApiMerchantGroup(params: MerchantGroupService.GetApiMerchantGroupParams): __Observable<Array<MerchantGroup>> {\n    return this.getApiMerchantGroupResponse(params).pipe(\n      __map(_r => _r.body as Array<MerchantGroup>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   */\n  postApiMerchantGroupResponse(body?: MerchantGroup): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/MerchantGroup`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   */\n  postApiMerchantGroup(body?: MerchantGroup): __Observable<null> {\n    return this.postApiMerchantGroupResponse(body).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  getApiMerchantGroupIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/MerchantGroup/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  getApiMerchantGroupId(id: string): __Observable<null> {\n    return this.getApiMerchantGroupIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param params The `MerchantGroupService.PutApiMerchantGroupIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiMerchantGroupIdResponse(params: MerchantGroupService.PutApiMerchantGroupIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/MerchantGroup/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `MerchantGroupService.PutApiMerchantGroupIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiMerchantGroupId(params: MerchantGroupService.PutApiMerchantGroupIdParams): __Observable<null> {\n    return this.putApiMerchantGroupIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiMerchantGroupIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/MerchantGroup/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiMerchantGroupId(id: string): __Observable<null> {\n    return this.deleteApiMerchantGroupIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule MerchantGroupService {\n\n  /**\n   * Parameters for getApiMerchantGroup\n   */\n  export interface GetApiMerchantGroupParams {\n    pesq?: string;\n    parentId?: string;\n  }\n\n  /**\n   * Parameters for putApiMerchantGroupId\n   */\n  export interface PutApiMerchantGroupIdParams {\n    id: string;\n    body?: MerchantGroup;\n  }\n}\n\nexport { MerchantGroupService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { Option } from '../models/option';\n@Injectable({\n  providedIn: 'root',\n})\nclass OptionService extends __BaseService {\n  static readonly getApiOptionPath = '/api/Option';\n  static readonly postApiOptionPath = '/api/Option';\n  static readonly getApiOptionIdPath = '/api/Option/{id}';\n  static readonly putApiOptionIdPath = '/api/Option/{id}';\n  static readonly deleteApiOptionIdPath = '/api/Option/{id}';\n  static readonly putApiOptionStatusPath = '/api/Option/status';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiOptionResponse(): __Observable<__StrictHttpResponse<Array<Option>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Option`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Option>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiOption(): __Observable<Array<Option>> {\n    return this.getApiOptionResponse().pipe(\n      __map(_r => _r.body as Array<Option>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOptionResponse(body?: Option): __Observable<__StrictHttpResponse<Option>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Option`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Option>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOption(body?: Option): __Observable<Option> {\n    return this.postApiOptionResponse(body).pipe(\n      __map(_r => _r.body as Option)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOptionIdResponse(id: string): __Observable<__StrictHttpResponse<Option>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Option/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Option>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOptionId(id: string): __Observable<Option> {\n    return this.getApiOptionIdResponse(id).pipe(\n      __map(_r => _r.body as Option)\n    );\n  }\n\n  /**\n   * @param params The `OptionService.PutApiOptionIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiOptionIdResponse(params: OptionService.PutApiOptionIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Option/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `OptionService.PutApiOptionIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiOptionId(params: OptionService.PutApiOptionIdParams): __Observable<null> {\n    return this.putApiOptionIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiOptionIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/Option/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiOptionId(id: string): __Observable<null> {\n    return this.deleteApiOptionIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param params The `OptionService.PutApiOptionStatusParams` containing the following parameters:\n   *\n   * - `status`:\n   *\n   * - `productId`:\n   *\n   * - `options`:\n   */\n  putApiOptionStatusResponse(params: OptionService.PutApiOptionStatusParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    if (params.status != null) __params = __params.set('status', params.status.toString());\n    if (params.productId != null) __params = __params.set('productId', params.productId.toString());\n    (params.options || []).forEach(val => {if (val != null) __params = __params.append('options', val.toString())});\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Option/status`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `OptionService.PutApiOptionStatusParams` containing the following parameters:\n   *\n   * - `status`:\n   *\n   * - `productId`:\n   *\n   * - `options`:\n   */\n  putApiOptionStatus(params: OptionService.PutApiOptionStatusParams): __Observable<null> {\n    return this.putApiOptionStatusResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule OptionService {\n\n  /**\n   * Parameters for putApiOptionId\n   */\n  export interface PutApiOptionIdParams {\n    id: string;\n    body?: Option;\n  }\n\n  /**\n   * Parameters for putApiOptionStatus\n   */\n  export interface PutApiOptionStatusParams {\n    status?: string;\n    productId?: string;\n    options?: Array<string>;\n  }\n}\n\nexport { OptionService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { OptionGroup } from '../models/option-group';\n@Injectable({\n  providedIn: 'root',\n})\nclass OptionGroupService extends __BaseService {\n  static readonly getApiOptionGroupPath = '/api/OptionGroup';\n  static readonly postApiOptionGroupPath = '/api/OptionGroup';\n  static readonly getApiOptionGroupIdPath = '/api/OptionGroup/{id}';\n  static readonly putApiOptionGroupIdPath = '/api/OptionGroup/{id}';\n  static readonly deleteApiOptionGroupIdPath = '/api/OptionGroup/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiOptionGroupResponse(): __Observable<__StrictHttpResponse<Array<OptionGroup>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/OptionGroup`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<OptionGroup>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiOptionGroup(): __Observable<Array<OptionGroup>> {\n    return this.getApiOptionGroupResponse().pipe(\n      __map(_r => _r.body as Array<OptionGroup>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOptionGroupResponse(body?: OptionGroup): __Observable<__StrictHttpResponse<OptionGroup>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/OptionGroup`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<OptionGroup>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOptionGroup(body?: OptionGroup): __Observable<OptionGroup> {\n    return this.postApiOptionGroupResponse(body).pipe(\n      __map(_r => _r.body as OptionGroup)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOptionGroupIdResponse(id: string): __Observable<__StrictHttpResponse<OptionGroup>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/OptionGroup/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<OptionGroup>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOptionGroupId(id: string): __Observable<OptionGroup> {\n    return this.getApiOptionGroupIdResponse(id).pipe(\n      __map(_r => _r.body as OptionGroup)\n    );\n  }\n\n  /**\n   * @param params The `OptionGroupService.PutApiOptionGroupIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiOptionGroupIdResponse(params: OptionGroupService.PutApiOptionGroupIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/OptionGroup/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `OptionGroupService.PutApiOptionGroupIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiOptionGroupId(params: OptionGroupService.PutApiOptionGroupIdParams): __Observable<null> {\n    return this.putApiOptionGroupIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiOptionGroupIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/OptionGroup/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiOptionGroupId(id: string): __Observable<null> {\n    return this.deleteApiOptionGroupIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule OptionGroupService {\n\n  /**\n   * Parameters for putApiOptionGroupId\n   */\n  export interface PutApiOptionGroupIdParams {\n    id: string;\n    body?: OptionGroup;\n  }\n}\n\nexport { OptionGroupService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { OptionGroupProduct } from '../models/option-group-product';\n@Injectable({\n  providedIn: 'root',\n})\nclass OptionGroupProductService extends __BaseService {\n  static readonly getApiOptionGroupProductPath = '/api/OptionGroupProduct';\n  static readonly postApiOptionGroupProductPath = '/api/OptionGroupProduct';\n  static readonly getApiOptionGroupProductIdPath = '/api/OptionGroupProduct/{id}';\n  static readonly putApiOptionGroupProductIdPath = '/api/OptionGroupProduct/{id}';\n  static readonly deleteApiOptionGroupProductIdPath = '/api/OptionGroupProduct/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiOptionGroupProductResponse(): __Observable<__StrictHttpResponse<Array<OptionGroupProduct>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/OptionGroupProduct`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<OptionGroupProduct>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiOptionGroupProduct(): __Observable<Array<OptionGroupProduct>> {\n    return this.getApiOptionGroupProductResponse().pipe(\n      __map(_r => _r.body as Array<OptionGroupProduct>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOptionGroupProductResponse(body?: OptionGroupProduct): __Observable<__StrictHttpResponse<OptionGroupProduct>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/OptionGroupProduct`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<OptionGroupProduct>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOptionGroupProduct(body?: OptionGroupProduct): __Observable<OptionGroupProduct> {\n    return this.postApiOptionGroupProductResponse(body).pipe(\n      __map(_r => _r.body as OptionGroupProduct)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOptionGroupProductIdResponse(id: string): __Observable<__StrictHttpResponse<OptionGroupProduct>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/OptionGroupProduct/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<OptionGroupProduct>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOptionGroupProductId(id: string): __Observable<OptionGroupProduct> {\n    return this.getApiOptionGroupProductIdResponse(id).pipe(\n      __map(_r => _r.body as OptionGroupProduct)\n    );\n  }\n\n  /**\n   * @param params The `OptionGroupProductService.PutApiOptionGroupProductIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiOptionGroupProductIdResponse(params: OptionGroupProductService.PutApiOptionGroupProductIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/OptionGroupProduct/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `OptionGroupProductService.PutApiOptionGroupProductIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiOptionGroupProductId(params: OptionGroupProductService.PutApiOptionGroupProductIdParams): __Observable<null> {\n    return this.putApiOptionGroupProductIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiOptionGroupProductIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/OptionGroupProduct/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiOptionGroupProductId(id: string): __Observable<null> {\n    return this.deleteApiOptionGroupProductIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule OptionGroupProductService {\n\n  /**\n   * Parameters for putApiOptionGroupProductId\n   */\n  export interface PutApiOptionGroupProductIdParams {\n    id: string;\n    body?: OptionGroupProduct;\n  }\n}\n\nexport { OptionGroupProductService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { DtoOrderDetails } from '../models/dto-order-details';\nimport { DtoEvent } from '../models/dto-event';\nimport { DtoTracking } from '../models/dto-tracking';\nimport { Order } from '../models/order';\nimport { DtoOrderResponse } from '../models/dto-order-response';\nimport { DtoCartToSend } from '../models/dto-cart-to-send';\n@Injectable({\n  providedIn: 'root',\n})\nclass OrderService extends __BaseService {\n  static readonly getApiOrderV10IdPath = '/api/Order/v1.0/{id}';\n  static readonly getApiOrderV10EventsPoolingPath = '/api/Order/v1.0/events:pooling';\n  static readonly postApiOrderV10EventsAcknowledgmentPath = '/api/Order/v1.0/events/acknowledgment';\n  static readonly postApiOrder10IdDeliveryCodePath = '/api/Order/1.0/{id}/delivery/{code}';\n  static readonly postApiOrder10IdRequestDriverPath = '/api/Order/1.0/{id}/requestDriver';\n  static readonly getApiOrder10IdTrackingPath = '/api/Order/1.0/{id}/tracking';\n  static readonly postApiOrderV10IdConfirmPath = '/api/Order/v1.0/{id}/confirm';\n  static readonly postApiOrderV10IdStartPreparationPath = '/api/Order/v1.0/{id}/startPreparation';\n  static readonly postApiOrderV10IdReadyToPickupPath = '/api/Order/v1.0/{id}/readyToPickup';\n  static readonly postApiOrderV10IdDispatchPath = '/api/Order/v1.0/{id}/dispatch';\n  static readonly postApiOrderV10IdRequestCancellationPath = '/api/Order/v1.0/{id}/requestCancellation';\n  static readonly postApiOrderV10IdAcceptCancellationPath = '/api/Order/v1.0/{id}/acceptCancellation';\n  static readonly postApiOrderV10IdDenyCancellationPath = '/api/Order/v1.0/{id}/denyCancellation';\n  static readonly postApiOrderV10IdCustomerRequestCancellationPath = '/api/Order/v1.0/{id}/customerRequestCancellation';\n  static readonly postApiOrder10IdCustomerPickupAreaAssignedPath = '/api/Order/1.0/{id}/customerPickupAreaAssigned';\n  static readonly postApiOrderPath = '/api/Order';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOrderV10IdResponse(id: string): __Observable<__StrictHttpResponse<DtoOrderDetails>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<DtoOrderDetails>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOrderV10Id(id: string): __Observable<DtoOrderDetails> {\n    return this.getApiOrderV10IdResponse(id).pipe(\n      __map(_r => _r.body as DtoOrderDetails)\n    );\n  }\n\n  /**\n   * @param params The `OrderService.GetApiOrderV10EventsPoolingParams` containing the following parameters:\n   *\n   * - `Types`:\n   *\n   * - `Groups`:\n   *\n   * @return Success\n   */\n  getApiOrderV10EventsPoolingResponse(params: OrderService.GetApiOrderV10EventsPoolingParams): __Observable<__StrictHttpResponse<Array<DtoEvent>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    if (params.Types != null) __params = __params.set('Types', params.Types.toString());\n    if (params.Groups != null) __params = __params.set('Groups', params.Groups.toString());\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Order/v1.0/events:pooling`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<DtoEvent>>;\n      })\n    );\n  }\n  /**\n   * @param params The `OrderService.GetApiOrderV10EventsPoolingParams` containing the following parameters:\n   *\n   * - `Types`:\n   *\n   * - `Groups`:\n   *\n   * @return Success\n   */\n  getApiOrderV10EventsPooling(params: OrderService.GetApiOrderV10EventsPoolingParams): __Observable<Array<DtoEvent>> {\n    return this.getApiOrderV10EventsPoolingResponse(params).pipe(\n      __map(_r => _r.body as Array<DtoEvent>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOrderV10EventsAcknowledgmentResponse(body?: Array<string>): __Observable<__StrictHttpResponse<Array<DtoEvent>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/events/acknowledgment`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<DtoEvent>>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOrderV10EventsAcknowledgment(body?: Array<string>): __Observable<Array<DtoEvent>> {\n    return this.postApiOrderV10EventsAcknowledgmentResponse(body).pipe(\n      __map(_r => _r.body as Array<DtoEvent>)\n    );\n  }\n\n  /**\n   * @param params The `OrderService.PostApiOrder10IdDeliveryCodeParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `code`:\n   *\n   * - `body`:\n   */\n  postApiOrder10IdDeliveryCodeResponse(params: OrderService.PostApiOrder10IdDeliveryCodeParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/1.0/${encodeURIComponent(String(params.id))}/delivery/${encodeURIComponent(String(params.code))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `OrderService.PostApiOrder10IdDeliveryCodeParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `code`:\n   *\n   * - `body`:\n   */\n  postApiOrder10IdDeliveryCode(params: OrderService.PostApiOrder10IdDeliveryCodeParams): __Observable<null> {\n    return this.postApiOrder10IdDeliveryCodeResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  postApiOrder10IdRequestDriverResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/1.0/${encodeURIComponent(String(id))}/requestDriver`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  postApiOrder10IdRequestDriver(id: string): __Observable<null> {\n    return this.postApiOrder10IdRequestDriverResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOrder10IdTrackingResponse(id: string): __Observable<__StrictHttpResponse<DtoTracking>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Order/1.0/${encodeURIComponent(String(id))}/tracking`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<DtoTracking>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiOrder10IdTracking(id: string): __Observable<DtoTracking> {\n    return this.getApiOrder10IdTrackingResponse(id).pipe(\n      __map(_r => _r.body as DtoTracking)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdConfirmResponse(id: string): __Observable<__StrictHttpResponse<Order>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}/confirm`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Order>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdConfirm(id: string): __Observable<Order> {\n    return this.postApiOrderV10IdConfirmResponse(id).pipe(\n      __map(_r => _r.body as Order)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdStartPreparationResponse(id: string): __Observable<__StrictHttpResponse<Order>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}/startPreparation`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Order>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdStartPreparation(id: string): __Observable<Order> {\n    return this.postApiOrderV10IdStartPreparationResponse(id).pipe(\n      __map(_r => _r.body as Order)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdReadyToPickupResponse(id: string): __Observable<__StrictHttpResponse<Order>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}/readyToPickup`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Order>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdReadyToPickup(id: string): __Observable<Order> {\n    return this.postApiOrderV10IdReadyToPickupResponse(id).pipe(\n      __map(_r => _r.body as Order)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdDispatchResponse(id: string): __Observable<__StrictHttpResponse<Order>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}/dispatch`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Order>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdDispatch(id: string): __Observable<Order> {\n    return this.postApiOrderV10IdDispatchResponse(id).pipe(\n      __map(_r => _r.body as Order)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdRequestCancellationResponse(id: string): __Observable<__StrictHttpResponse<Order>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}/requestCancellation`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Order>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdRequestCancellation(id: string): __Observable<Order> {\n    return this.postApiOrderV10IdRequestCancellationResponse(id).pipe(\n      __map(_r => _r.body as Order)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdAcceptCancellationResponse(id: string): __Observable<__StrictHttpResponse<Order>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}/acceptCancellation`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Order>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdAcceptCancellation(id: string): __Observable<Order> {\n    return this.postApiOrderV10IdAcceptCancellationResponse(id).pipe(\n      __map(_r => _r.body as Order)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdDenyCancellationResponse(id: string): __Observable<__StrictHttpResponse<Order>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}/denyCancellation`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Order>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdDenyCancellation(id: string): __Observable<Order> {\n    return this.postApiOrderV10IdDenyCancellationResponse(id).pipe(\n      __map(_r => _r.body as Order)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdCustomerRequestCancellationResponse(id: string): __Observable<__StrictHttpResponse<Order>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/v1.0/${encodeURIComponent(String(id))}/customerRequestCancellation`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Order>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  postApiOrderV10IdCustomerRequestCancellation(id: string): __Observable<Order> {\n    return this.postApiOrderV10IdCustomerRequestCancellationResponse(id).pipe(\n      __map(_r => _r.body as Order)\n    );\n  }\n\n  /**\n   * @param params The `OrderService.PostApiOrder10IdCustomerPickupAreaAssignedParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  postApiOrder10IdCustomerPickupAreaAssignedResponse(params: OrderService.PostApiOrder10IdCustomerPickupAreaAssignedParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order/1.0/${encodeURIComponent(String(params.id))}/customerPickupAreaAssigned`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `OrderService.PostApiOrder10IdCustomerPickupAreaAssignedParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  postApiOrder10IdCustomerPickupAreaAssigned(params: OrderService.PostApiOrder10IdCustomerPickupAreaAssignedParams): __Observable<null> {\n    return this.postApiOrder10IdCustomerPickupAreaAssignedResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOrderResponse(body?: DtoCartToSend): __Observable<__StrictHttpResponse<DtoOrderResponse>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Order`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<DtoOrderResponse>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiOrder(body?: DtoCartToSend): __Observable<DtoOrderResponse> {\n    return this.postApiOrderResponse(body).pipe(\n      __map(_r => _r.body as DtoOrderResponse)\n    );\n  }\n}\n\nmodule OrderService {\n\n  /**\n   * Parameters for getApiOrderV10EventsPooling\n   */\n  export interface GetApiOrderV10EventsPoolingParams {\n    Types?: string;\n    Groups?: string;\n  }\n\n  /**\n   * Parameters for postApiOrder10IdDeliveryCode\n   */\n  export interface PostApiOrder10IdDeliveryCodeParams {\n    id: string;\n    code: string;\n    body?: any;\n  }\n\n  /**\n   * Parameters for postApiOrder10IdCustomerPickupAreaAssigned\n   */\n  export interface PostApiOrder10IdCustomerPickupAreaAssignedParams {\n    id: string;\n    body?: any;\n  }\n}\n\nexport { OrderService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { PaymentMethod } from '../models/payment-method';\n@Injectable({\n  providedIn: 'root',\n})\nclass PaymentMethodService extends __BaseService {\n  static readonly getApiPaymentMethodPath = '/api/PaymentMethod';\n  static readonly postApiPaymentMethodPath = '/api/PaymentMethod';\n  static readonly getApiPaymentMethodMerchantMerchantIdPath = '/api/PaymentMethod/merchant/{merchantId}';\n  static readonly getApiPaymentMethodIdPath = '/api/PaymentMethod/{id}';\n  static readonly putApiPaymentMethodIdPath = '/api/PaymentMethod/{id}';\n  static readonly deleteApiPaymentMethodIdPath = '/api/PaymentMethod/{id}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiPaymentMethodResponse(): __Observable<__StrictHttpResponse<Array<PaymentMethod>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/PaymentMethod`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<PaymentMethod>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiPaymentMethod(): __Observable<Array<PaymentMethod>> {\n    return this.getApiPaymentMethodResponse().pipe(\n      __map(_r => _r.body as Array<PaymentMethod>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiPaymentMethodResponse(body?: PaymentMethod): __Observable<__StrictHttpResponse<PaymentMethod>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/PaymentMethod`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<PaymentMethod>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiPaymentMethod(body?: PaymentMethod): __Observable<PaymentMethod> {\n    return this.postApiPaymentMethodResponse(body).pipe(\n      __map(_r => _r.body as PaymentMethod)\n    );\n  }\n\n  /**\n   * @param merchantId undefined\n   * @return Success\n   */\n  getApiPaymentMethodMerchantMerchantIdResponse(merchantId: string): __Observable<__StrictHttpResponse<Array<PaymentMethod>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/PaymentMethod/merchant/${encodeURIComponent(String(merchantId))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<PaymentMethod>>;\n      })\n    );\n  }\n  /**\n   * @param merchantId undefined\n   * @return Success\n   */\n  getApiPaymentMethodMerchantMerchantId(merchantId: string): __Observable<Array<PaymentMethod>> {\n    return this.getApiPaymentMethodMerchantMerchantIdResponse(merchantId).pipe(\n      __map(_r => _r.body as Array<PaymentMethod>)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiPaymentMethodIdResponse(id: string): __Observable<__StrictHttpResponse<PaymentMethod>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/PaymentMethod/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<PaymentMethod>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiPaymentMethodId(id: string): __Observable<PaymentMethod> {\n    return this.getApiPaymentMethodIdResponse(id).pipe(\n      __map(_r => _r.body as PaymentMethod)\n    );\n  }\n\n  /**\n   * @param params The `PaymentMethodService.PutApiPaymentMethodIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiPaymentMethodIdResponse(params: PaymentMethodService.PutApiPaymentMethodIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/PaymentMethod/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `PaymentMethodService.PutApiPaymentMethodIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiPaymentMethodId(params: PaymentMethodService.PutApiPaymentMethodIdParams): __Observable<null> {\n    return this.putApiPaymentMethodIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiPaymentMethodIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/PaymentMethod/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiPaymentMethodId(id: string): __Observable<null> {\n    return this.deleteApiPaymentMethodIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule PaymentMethodService {\n\n  /**\n   * Parameters for putApiPaymentMethodId\n   */\n  export interface PutApiPaymentMethodIdParams {\n    id: string;\n    body?: PaymentMethod;\n  }\n}\n\nexport { PaymentMethodService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\nimport { Product } from '../models/product';\nimport { DtoProductSharing } from '../models/dto-product-sharing';\n@Injectable({\n  providedIn: 'root',\n})\nclass ProductService extends __BaseService {\n  static readonly getApiProductPath = '/api/Product';\n  static readonly postApiProductPath = '/api/Product';\n  static readonly getApiProductIdPath = '/api/Product/{id}';\n  static readonly putApiProductIdPath = '/api/Product/{id}';\n  static readonly deleteApiProductIdPath = '/api/Product/{id}';\n  static readonly getApiProductIdSharingCountPath = '/api/Product/{id}/sharingCount';\n  static readonly getApiProductMerchantGroupMerchantGroupIdPath = '/api/Product/merchantGroup/{merchantGroupId}';\n  static readonly putApiProductIdStatusPath = '/api/Product/{id}/status';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiProductResponse(): __Observable<__StrictHttpResponse<Array<Product>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Product`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Product>>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiProduct(): __Observable<Array<Product>> {\n    return this.getApiProductResponse().pipe(\n      __map(_r => _r.body as Array<Product>)\n    );\n  }\n\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiProductResponse(body?: Product): __Observable<__StrictHttpResponse<Product>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    __body = body;\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Product`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Product>;\n      })\n    );\n  }\n  /**\n   * @param body undefined\n   * @return Success\n   */\n  postApiProduct(body?: Product): __Observable<Product> {\n    return this.postApiProductResponse(body).pipe(\n      __map(_r => _r.body as Product)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiProductIdResponse(id: string): __Observable<__StrictHttpResponse<Product>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Product/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Product>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiProductId(id: string): __Observable<Product> {\n    return this.getApiProductIdResponse(id).pipe(\n      __map(_r => _r.body as Product)\n    );\n  }\n\n  /**\n   * @param params The `ProductService.PutApiProductIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiProductIdResponse(params: ProductService.PutApiProductIdParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    __body = params.body;\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Product/${encodeURIComponent(String(params.id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `ProductService.PutApiProductIdParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `body`:\n   */\n  putApiProductId(params: ProductService.PutApiProductIdParams): __Observable<null> {\n    return this.putApiProductIdResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   */\n  deleteApiProductIdResponse(id: string): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'DELETE',\n      this.rootUrl + `/api/Product/${encodeURIComponent(String(id))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   */\n  deleteApiProductId(id: string): __Observable<null> {\n    return this.deleteApiProductIdResponse(id).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiProductIdSharingCountResponse(id: string): __Observable<__StrictHttpResponse<DtoProductSharing>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Product/${encodeURIComponent(String(id))}/sharingCount`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<DtoProductSharing>;\n      })\n    );\n  }\n  /**\n   * @param id undefined\n   * @return Success\n   */\n  getApiProductIdSharingCount(id: string): __Observable<DtoProductSharing> {\n    return this.getApiProductIdSharingCountResponse(id).pipe(\n      __map(_r => _r.body as DtoProductSharing)\n    );\n  }\n\n  /**\n   * @param merchantGroupId undefined\n   * @return Success\n   */\n  getApiProductMerchantGroupMerchantGroupIdResponse(merchantGroupId: string): __Observable<__StrictHttpResponse<Array<Product>>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Product/merchantGroup/${encodeURIComponent(String(merchantGroupId))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<Array<Product>>;\n      })\n    );\n  }\n  /**\n   * @param merchantGroupId undefined\n   * @return Success\n   */\n  getApiProductMerchantGroupMerchantGroupId(merchantGroupId: string): __Observable<Array<Product>> {\n    return this.getApiProductMerchantGroupMerchantGroupIdResponse(merchantGroupId).pipe(\n      __map(_r => _r.body as Array<Product>)\n    );\n  }\n\n  /**\n   * @param params The `ProductService.PutApiProductIdStatusParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `status`:\n   *\n   * - `resources`:\n   */\n  putApiProductIdStatusResponse(params: ProductService.PutApiProductIdStatusParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    if (params.status != null) __params = __params.set('status', params.status.toString());\n    (params.resources || []).forEach(val => {if (val != null) __params = __params.append('resources', val.toString())});\n    let req = new HttpRequest<any>(\n      'PUT',\n      this.rootUrl + `/api/Product/${encodeURIComponent(String(params.id))}/status`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `ProductService.PutApiProductIdStatusParams` containing the following parameters:\n   *\n   * - `id`:\n   *\n   * - `status`:\n   *\n   * - `resources`:\n   */\n  putApiProductIdStatus(params: ProductService.PutApiProductIdStatusParams): __Observable<null> {\n    return this.putApiProductIdStatusResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule ProductService {\n\n  /**\n   * Parameters for putApiProductId\n   */\n  export interface PutApiProductIdParams {\n    id: string;\n    body?: Product;\n  }\n\n  /**\n   * Parameters for putApiProductIdStatus\n   */\n  export interface PutApiProductIdStatusParams {\n    id: string;\n    status?: string;\n    resources?: Array<string>;\n  }\n}\n\nexport { ProductService }\n","/* tslint:disable */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { BaseService as __BaseService } from '../base-service';\nimport { ApiConfiguration as __Configuration } from '../api-configuration';\nimport { StrictHttpResponse as __StrictHttpResponse } from '../strict-http-response';\nimport { Observable as __Observable } from 'rxjs';\nimport { map as __map, filter as __filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nclass SysService extends __BaseService {\n  static readonly getApiSysVerPath = '/api/Sys/ver';\n  static readonly postApiSysUploadPath = '/api/Sys/upload';\n  static readonly getApiSysDownloadMultiHashPath = '/api/Sys/download/{multiHash}';\n\n  constructor(\n    config: __Configuration,\n    http: HttpClient\n  ) {\n    super(config, http);\n  }\n\n  /**\n   * @return Success\n   */\n  getApiSysVerResponse(): __Observable<__StrictHttpResponse<string>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Sys/ver`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<string>;\n      })\n    );\n  }\n  /**\n   * @return Success\n   */\n  getApiSysVer(): __Observable<string> {\n    return this.getApiSysVerResponse().pipe(\n      __map(_r => _r.body as string)\n    );\n  }\n\n  /**\n   * @param params The `SysService.PostApiSysUploadParams` containing the following parameters:\n   *\n   * - `fullpath`:\n   *\n   * - `file`:\n   *\n   * @return Success\n   */\n  postApiSysUploadResponse(params: SysService.PostApiSysUploadParams): __Observable<__StrictHttpResponse<string>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n    let __formData = new FormData();\n    __body = __formData;\n    if (params.fullpath != null) __params = __params.set('fullpath', params.fullpath.toString());\n    if (params.file != null) { __formData.append('file', params.file as string | Blob);}\n    let req = new HttpRequest<any>(\n      'POST',\n      this.rootUrl + `/api/Sys/upload`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'text'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<string>;\n      })\n    );\n  }\n  /**\n   * @param params The `SysService.PostApiSysUploadParams` containing the following parameters:\n   *\n   * - `fullpath`:\n   *\n   * - `file`:\n   *\n   * @return Success\n   */\n  postApiSysUpload(params: SysService.PostApiSysUploadParams): __Observable<string> {\n    return this.postApiSysUploadResponse(params).pipe(\n      __map(_r => _r.body as string)\n    );\n  }\n\n  /**\n   * @param params The `SysService.GetApiSysDownloadMultiHashParams` containing the following parameters:\n   *\n   * - `multiHash`:\n   *\n   * - `inline`:\n   *\n   * - `filename`:\n   */\n  getApiSysDownloadMultiHashResponse(params: SysService.GetApiSysDownloadMultiHashParams): __Observable<__StrictHttpResponse<null>> {\n    let __params = this.newParams();\n    let __headers = new HttpHeaders();\n    let __body: any = null;\n\n    if (params.inline != null) __params = __params.set('inline', params.inline.toString());\n    if (params.filename != null) __params = __params.set('filename', params.filename.toString());\n    let req = new HttpRequest<any>(\n      'GET',\n      this.rootUrl + `/api/Sys/download/${encodeURIComponent(String(params.multiHash))}`,\n      __body,\n      {\n        headers: __headers,\n        params: __params,\n        responseType: 'json'\n      });\n\n    return this.http.request<any>(req).pipe(\n      __filter(_r => _r instanceof HttpResponse),\n      __map((_r) => {\n        return _r as __StrictHttpResponse<null>;\n      })\n    );\n  }\n  /**\n   * @param params The `SysService.GetApiSysDownloadMultiHashParams` containing the following parameters:\n   *\n   * - `multiHash`:\n   *\n   * - `inline`:\n   *\n   * - `filename`:\n   */\n  getApiSysDownloadMultiHash(params: SysService.GetApiSysDownloadMultiHashParams): __Observable<null> {\n    return this.getApiSysDownloadMultiHashResponse(params).pipe(\n      __map(_r => _r.body as null)\n    );\n  }\n}\n\nmodule SysService {\n\n  /**\n   * Parameters for postApiSysUpload\n   */\n  export interface PostApiSysUploadParams {\n    fullpath?: string;\n    file?: Blob;\n  }\n\n  /**\n   * Parameters for getApiSysDownloadMultiHash\n   */\n  export interface GetApiSysDownloadMultiHashParams {\n    multiHash: string;\n    inline?: boolean;\n    filename?: string;\n  }\n}\n\nexport { SysService }\n","import Dexie, {Table} from \"dexie\";\nimport { DtoEvent, DtoOrderDetails, Order } from \"../api/models\";\nimport { DtoStoredEvent } from \"../services/integrator/dto-stored-event\";\nimport { DtoStoredOrder } from \"../services/integrator/dto-stored-order\";\n\nexport class IntegratorDb extends Dexie {\n    tempEvents!: Table<DtoStoredEvent,string>;\n    events!: Table<DtoStoredEvent,string>;\n    orders!: Table<DtoStoredOrder,string>;\n    localorders!: Table<Order,string>;\n\n    constructor(){\n        super('integratordb');\n        this.version(3).stores({\n            events:'id',\n            orders:'id',\n            tempEvents:'id',\n            localorders:'id'\n        })\n    }\n}\nexport const _DB=new IntegratorDb();","import { HttpClient, HttpHandler, HttpRequest, HttpXhrBackend } from \"@angular/common/http\";\nimport { resolve } from \"dns\";\nimport Enumerable from \"linq\";\nimport { Subject } from \"rxjs\";\nimport { ApiConfiguration } from \"src/app/api/api-configuration\";\nimport { DtoEvent, DtoOrderDetails } from \"src/app/api/models\";\nimport { OrderService } from \"src/app/api/services/order.service\";\nimport { IOrderAdapter } from \"../i-order-adapter\";\n\nexport class OAdWebApi implements IOrderAdapter {\n    private static _instance: OAdWebApi;\n\n    constructor(config: DtoAdapterConfig) {\n        this.name = config.name;\n        this.sourceName = config.sourceName;\n        this.endpoint=config.endpoint;\n\n        this.initialize();\n    }\n    public name: string;\n    public sourceName: string;\n    public endpoint:string;\n\n    private _onNewEventsSubject = new Subject<DtoEvent[]>();\n    public onNewEvents = this._onNewEventsSubject.asObservable();\n\n    public promisses: { id: string, resolve: any }[] = [];\n    private orderSvc: OrderService;\n    private async initialize() {\n        var config = new ApiConfiguration();\n        config.rootUrl = this.endpoint;\n        const httpClient = new HttpClient(new HttpXhrBackend({ build: () => new XMLHttpRequest() }));\n        this.orderSvc = new OrderService(config, httpClient);\n    }\n    private async poolingLoopRoutine() {\n        try {\n            let _eventsArray = await this.orderSvc.getApiOrderV10EventsPooling({ Types: \"\", Groups: \"\" }).toPromise();\n            this._onNewEventsSubject.next(_eventsArray);\n        } catch (error) {\n            var a = error;\n        }\n    }\n    public async acknowledge(events: DtoEvent[]) {\n        let _ackList = Enumerable.from(events).select(p => p.id).toArray();\n        if (_ackList.length > 0) {\n            let ackRet = await this.orderSvc.postApiOrderV10EventsAcknowledgment(_ackList).toPromise();\n        }\n    }\n\n    public doPooling(): void {\n        this.poolingLoopRoutine();\n       \n    }\n\n    public async getOrder(id: string): Promise<DtoOrderDetails> {\n        let _orderDetail = await this.orderSvc.getApiOrderV10Id(id).toPromise();\n        return _orderDetail;\n    }\n    public async changeStatus(orderId: string, code: string): Promise<boolean> {\n        let ret = false;\n        try {\n          switch (code) {\n            case \"confirm\":\n              await this.orderSvc.postApiOrderV10IdConfirm(orderId).toPromise();\n              ret = true;\n              break;\n            case \"startPreparation\":\n              await this.orderSvc.postApiOrderV10IdStartPreparation(orderId).toPromise();\n              ret = true;\n              break;\n            case \"readyToPickup\":\n              await this.orderSvc.postApiOrderV10IdReadyToPickup(orderId).toPromise();\n              ret = true;\n              break;\n            case \"dispatch\":\n              await this.orderSvc.postApiOrderV10IdDispatch(orderId).toPromise();\n              ret = true;\n              break;\n            case \"requestCancellation\":\n              await this.orderSvc.postApiOrderV10IdRequestCancellation(orderId).toPromise();\n              ret = true;\n              break;\n            case \"acceptCancellation\":\n              await this.orderSvc.postApiOrderV10IdAcceptCancellation(orderId).toPromise();\n              ret = true;\n              break;\n            case \"denyCancellation\":\n              await this.orderSvc.postApiOrderV10IdDenyCancellation(orderId).toPromise();\n              ret = true;\n              break;\n    \n            default:\n              break;\n          }\n        } catch (error) {\n    \n        }\n        return ret;\n      }\n\n}\n","\n\nimport { HttpHandler, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { DtoOauthRequest } from \"src/app/api/models\";\nimport { CryptoService } from \"src/app/services/crypto.service\";\nimport { SSOrbitdb } from \"./orbitdb\";\n\n\n    export class SSUuid {\n        public static GenerateV4(){\n            return window[\"__uuidv4\"]();\n        }\n    }\n\n","import { HttpClient, HttpHandler, HttpRequest, HttpXhrBackend } from \"@angular/common/http\";\nimport Enumerable from \"linq\";\nimport { Subject } from \"rxjs\";\nimport { ApiConfiguration } from \"src/app/api/api-configuration\";\nimport { DtoEvent, DtoOrderDetails } from \"src/app/api/models\";\nimport { OrderService } from \"src/app/api/services/order.service\";\nimport { IOrderAdapter } from \"../i-order-adapter\";\nimport { SystemService } from '../../../../system.service';\nimport { webSocket } from \"rxjs/webSocket\";\n\n\nexport class OAdWebSocket implements IOrderAdapter {\n\n  constructor(config: DtoAdapterConfig) {\n    this.name = config.name;\n    this.sourceName = config.sourceName;\n    this.endpoint = config.endpoint;\n    this.initialize();\n  }\n  public name: string;\n  public sourceName: string;\n  endpoint: string;\n\n  private _onNewEventsSubject = new Subject<DtoEvent[]>();\n  public onNewEvents = this._onNewEventsSubject.asObservable();\n  private _onReadyAdapterSubject = new Subject<boolean>();\n  public onReadyAdapter = this._onReadyAdapterSubject.asObservable();\n\n  private _swarms = [\n    '/dns4/intense-lake-89842.herokuapp.com/tcp/443/wss/p2p-webrtc-star/'\n  ];\n\n  private _isRunning = false;\n  private orderSvc: OrderService;\n  private systemSvc: SystemService;\n\n  private async initialize() {\n    var config = new ApiConfiguration();\n    config.rootUrl = this.endpoint;\n    const httpClient = new HttpClient(new HttpXhrBackend({ build: () => new XMLHttpRequest() }));\n    this.orderSvc = new OrderService(config, httpClient);\n\n    var scheme = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    var port = document.location.port ? (\":\" + document.location.port) : \"\";\n\n    var ws = config.rootUrl ? webSocket(config.rootUrl.replace(\"https\", \"wss\").replace(\"http\", \"ws\") + \"/ws/client\") : webSocket(scheme + \"://\" + document.location.hostname + port + \"/ws/client\");\n    ws.subscribe(\n      (d) => {\n        try {\n          if (d) {\n            console.log(d);\n            this._onNewEventsSubject.next([d]);\n          }\n        } catch (error) {\n\n        }\n      }\n    )\n  }\n\n\n\n  public async acknowledge(events: DtoEvent[]) {\n    let _ackList = Enumerable.from(events).select(p => p.id).toArray();\n    if (_ackList.length > 0) {\n      let ackRet = await this.orderSvc.postApiOrderV10EventsAcknowledgment(_ackList).toPromise();\n    }\n  }\n\n  public async getOrder(id: string): Promise<DtoOrderDetails> {\n    let _orderDetail = await this.orderSvc.getApiOrderV10Id(id).toPromise();\n    return _orderDetail;\n  }\n  public async changeStatus(orderId: string, code: string): Promise<boolean> {\n    let ret = false;\n    try {\n      switch (code) {\n        case \"confirm\":\n          await this.orderSvc.postApiOrderV10IdConfirm(orderId).toPromise();\n          ret = true;\n          break;\n        case \"startPreparation\":\n          await this.orderSvc.postApiOrderV10IdStartPreparation(orderId).toPromise();\n          ret = true;\n          break;\n        case \"readyToPickup\":\n          await this.orderSvc.postApiOrderV10IdReadyToPickup(orderId).toPromise();\n          ret = true;\n          break;\n        case \"dispatch\":\n          await this.orderSvc.postApiOrderV10IdDispatch(orderId).toPromise();\n          ret = true;\n          break;\n        case \"requestCancellation\":\n          await this.orderSvc.postApiOrderV10IdRequestCancellation(orderId).toPromise();\n          ret = true;\n          break;\n        case \"acceptCancellation\":\n          await this.orderSvc.postApiOrderV10IdAcceptCancellation(orderId).toPromise();\n          ret = true;\n          break;\n        case \"denyCancellation\":\n          await this.orderSvc.postApiOrderV10IdDenyCancellation(orderId).toPromise();\n          ret = true;\n          break;\n\n        default:\n          break;\n      }\n    } catch (error) {\n\n    }\n    return ret;\n  }\n  public doPooling(): void {\n\n  }\n\n}\n","import { HttpHandler, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { DtoOauthRequest } from \"src/app/api/models\";\nimport { CryptoService } from \"src/app/services/crypto.service\";\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport all from \"it-all\"\nimport { IIpfs } from \"./ipfs.interface\";\n\n\n\nexport class SSIpfs {\n  public static active: boolean = false;\n  public static _node: any = null;\n\n  public static getIpfsScriptInstance() {\n    return new Promise<HTMLScriptElement>(\n      (resolve, reject) => {\n        var ipfsScriptElement = <HTMLScriptElement>document.getElementById(\"jsipfslib\");\n        if (ipfsScriptElement == null) {\n          ipfsScriptElement = document.createElement(\"script\");\n          ipfsScriptElement.id = \"jsipfslib\";\n          ipfsScriptElement.src = \"libs/jsipfs.min.js\";\n          ipfsScriptElement.addEventListener(\"load\", () => {\n            this._ipfs=(<any>window)['Ipfs'];\n            resolve(ipfsScriptElement);\n          });\n          document.head.appendChild(ipfsScriptElement);\n        } else {\n          resolve(ipfsScriptElement);\n        }\n      }\n    );\n  }\n\n  public static getIpfsHttpScriptInstance() {\n    return new Promise<HTMLScriptElement>(\n      (resolve, reject) => {\n        var ipfsScriptElement = <HTMLScriptElement>document.getElementById(\"ipfshttplib\");\n        if (ipfsScriptElement == null) {\n          ipfsScriptElement = document.createElement(\"script\");\n          ipfsScriptElement.id = \"ipfshttplib\";\n          ipfsScriptElement.src = \"libs/ipfshttpclient.min.js\";\n          ipfsScriptElement.addEventListener(\"load\", () => {\n            resolve(ipfsScriptElement);\n          });\n          document.head.appendChild(ipfsScriptElement);\n        } else {\n          resolve(ipfsScriptElement);\n        }\n      }\n    );\n  }\n\n\n  public static async Ipfs(){\n    if (!this._ipfs){\n      const scriptElement=await this.getIpfsScriptInstance();\n    }\n    return this._ipfs;\n  }\n\n  private static _ipfs:IIpfs=undefined;\n\n  private static _isListenerLoaded = false;\n  public static getNode(): Promise<any> {\n    return new Promise<any>(\n      async (resolve, reject) => {\n        //var ipfsScriptElement=<HTMLScriptElement>document.getElementById(\"jsipfslib\");\n        var ipfsScriptElement = await this.getIpfsScriptInstance();\n        if (!this._isListenerLoaded) {\n          this._ipfs.create({\n            repo: 'adminclient_ipfs',\n            pubsub: true,\n            EXPERIMENTAL: {\n              pubsub: true\n            }\n            , config: {\n              Addresses: {\n                Swarm: [\n                  // This is a public webrtc-star server\n                  //'/dns4/webrtc-star.discovery.libp2p.io/tcp/443/wss/p2p-webrtc-star/',\n                  '/dns4/intense-lake-89842.herokuapp.com/tcp/443/wss/p2p-webrtc-star/',\n                  //'/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n                  //'/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n\n                  //'/dns4/ws-star.discovery.libp2p.io/tcp/443/wss/p2p-websocket-star',\n                  //'/ip4/127.0.0.1/tcp/9090/wss/p2p-webrtc-star'\n                ]\n              },\n              // If you want to connect to the public bootstrap nodes, remove the next line\n              //Bootstrap: ['/ip4/177.95.228.226/tcp/4001/p2p/QmeSWa6nqZKJBxw4FNs4kQhuLsvRHnjo1eBzvcdYHpZ6Vb']\n            }\n          }).then(\n            (d) => {\n              this._node = d;\n              this.active = true;\n              resolve(this._node);\n            }\n          )\n          this._isListenerLoaded = true;\n        } else {\n          if (this._node != null) {\n            resolve(this._node);\n          } else {\n            setTimeout(() => {\n              if (this._node != null) {\n                resolve(this._node);\n              }\n            }, 500);\n          }\n        }\n      }\n    );\n  }\n\n  public static async getImageBlobFromIpfs(ipfsHash: string) {\n    const ipfs = (await this.getNode());\n    const arrBV = uint8ArrayConcat(await all(ipfs.cat(ipfsHash)));\n    var blob = new Blob([arrBV], { type: 'application/image' });\n    return blob;\n  }\n\n  public static async addFile(blob: Blob | File | ArrayBuffer) {\n    const ipfs = (await this.getNode());\n    return (await ipfs.add(blob, { pin: true }));\n  }\n\n}\n\n\n\n","export class SSLoadLib {\n    private static jsLoadedLibraries:any={};\n    public static loadJSLib(libName,path): Promise<HTMLScriptElement> {\n        return new Promise<HTMLScriptElement>(\n            (resolve, reject) => {\n                var libScriptElement = <HTMLScriptElement>document.getElementById(libName);\n                if (libScriptElement == null) {\n                    libScriptElement = document.createElement(\"script\");\n                    libScriptElement.id = libName;\n                    libScriptElement.src = path;\n                    libScriptElement.addEventListener(\"load\",async () => {\n                        resolve(libScriptElement);\n                    });\n                    libScriptElement.addEventListener(\"error\", (d)=>{\n                        reject(d);\n                    })\n                    document.head.appendChild(libScriptElement);\n                } else {\n                    resolve(libScriptElement);\n                }\n            }\n        );\n    }\n}","import { HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { DtoOauthRequest } from \"src/app/api/models\";\nimport { CryptoService } from \"src/app/services/crypto.service\";\n\n\n    export class SSAuthentication {\n        public static cryptoService:CryptoService;\n        public static async getOauthTokenAsync(dtoOauthRequest:DtoOauthRequest){\n            this.cryptoService.privateKey=await this.cryptoService.importPrivateKey(dtoOauthRequest.clientSecret);\n            this.cryptoService.publicKey=await this.cryptoService.importPublicKey(dtoOauthRequest.clientSecret);\n\n            var _timestamp=(new Date()).toISOString();\n            var _accessToken=await this.cryptoService.encrypt(_timestamp);\n\n            localStorage.setItem(\"oauthrequest\",JSON.stringify(dtoOauthRequest));\n\n            return {\n                \"accessToken\": _accessToken,\n                \"type\": \"keypair\",\n                \"expiresIn\": 0\n            }\n        }\n    }\n\n","import { Injectable } from '@angular/core';\nimport { SSAuthentication } from '../static-stack/authentication';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CryptoService {\n\n  public publicKey: CryptoKey = null;\n  public privateKey: CryptoKey = null;\n  public static Instance:CryptoService;\n\n  constructor() {\n    SSAuthentication.cryptoService=this;\n    CryptoService.Instance=this;\n   }\n\n  \n    /*\n  Convert a string into an ArrayBuffer\n  from https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\n  */\n  private str2ab(str) {\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n  }\n\n    /*\n  Convert  an ArrayBuffer into a string\n  from https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\n  */\n  private ab2str(buf) {\n    return String.fromCharCode.apply(null, new Uint8Array(buf));\n  }\n\n  public async generateNewKeys() {\n    let keyPair = await window.crypto.subtle.generateKey(\n      {\n        name: \"RSA-OAEP\",\n        modulusLength: 4096,\n        publicExponent: new Uint8Array([1, 0, 1]),\n        hash: \"SHA-256\"\n      },\n      true,\n      [\"encrypt\", \"decrypt\"]\n    );\n\n    var pubkStr = \"\";\n    var prikStr = \"\";\n\n    var pubk = await window.crypto.subtle.exportKey(\n      \"spki\", //can be \"jwk\" (public or private), \"spki\" (public only), or \"pkcs8\" (private only)\n      keyPair.publicKey //can be a publicKey or privateKey, as long as extractable was true\n    );\n    pubkStr = `-----BEGIN PUBLIC KEY-----\\n${btoa(this.ab2str(pubk))}\\n-----END PUBLIC KEY-----`;\n\n    var prik = await window.crypto.subtle.exportKey(\n      \"pkcs8\", //can be \"jwk\" (public or private), \"spki\" (public only), or \"pkcs8\" (private only)\n      keyPair.privateKey //can be a publicKey or privateKey, as long as extractable was true\n    );\n    prikStr = `-----BEGIN PRIVATE KEY-----\\n${btoa(this.ab2str(prik))}\\n-----END PRIVATE KEY-----`\n\n    return {\n      privateKey: prikStr,\n      publicKey: pubkStr\n    }\n  }\n\n  public async encrypt(text,publicKey=null) {\n    let encoded = this.str2ab(text);\n    let buffermsg = await window.crypto.subtle.encrypt(\"RSA-OAEP\",\n      (publicKey==null?this.publicKey:publicKey),\n      encoded);\n    let cmsg = btoa(this.ab2str(buffermsg));\n    return cmsg;\n  }\n\n  public async decrypt(text,privateKey=null) {\n    let encoded = this.str2ab(atob(text));\n    let buffermsg = await window.crypto.subtle.decrypt(\"RSA-OAEP\",\n      (privateKey==null?this.privateKey:privateKey),\n      encoded);\n    let msg = (this.ab2str(buffermsg));\n    return msg;\n  }\n\n  public async importPublicKey(keystr: string):Promise<CryptoKey> {\n    const pemContents = keystr.replace('\\r', '').replace('\\r', '').replace('\\r', '').replace('\\r', '').replace('\\r', '').split('\\n')[5].trim();\n    const binaryDerString = atob(pemContents);\n    const binaryDer = this.str2ab(binaryDerString);\n    return await window.crypto.subtle.importKey(\n      \"spki\",\n      binaryDer,\n      {\n        name: \"RSA-OAEP\",\n        hash: \"SHA-256\"\n      },\n      true,\n      [\"encrypt\"]\n    );\n  }\n\n  public async importPrivateKey(keystr: string):Promise<CryptoKey> {\n    const pemContents = keystr.replace('\\r', '').replace('\\r', '').replace('\\r', '').replace('\\r', '').replace('\\r', '').split('\\n')[1].trim();\n    const binaryDerString = atob(pemContents);\n    const binaryDer = this.str2ab(binaryDerString);\n    return await window.crypto.subtle.importKey(\n      \"pkcs8\",\n      binaryDer,\n      <any>{\n        name: \"RSA-OAEP\",\n        modulusLength: 4096,\n        publicExponent: new Uint8Array([1, 0, 1]),\n        hash: \"SHA-256\"\n      },\n      true,\n      [\"decrypt\"]\n    );\n  }\n\n}\n","import { SSIpfs } from 'src/app/static-stack/ipfs';\nimport { IOrbitDb } from 'src/app/static-stack/orbitdb.interface';\nimport { SSLoadLib } from 'src/app/static-stack/loadlib';\nimport { Subject } from 'rxjs';\nimport { DtoDelinetEvent } from \"src/app/services/integrator/adapters/order/delinet/dto-delinet-event\";\nimport { SSUuid } from 'src/app/static-stack/uuid';\nimport { CryptoService } from 'src/app/services/crypto.service';\n\nexport class DelinetClient {\n\n  private _swarms = [\n    '/dns4/intense-lake-89842.herokuapp.com/tcp/443/wss/p2p-webrtc-star/'\n  ];\n\n  private _onEventReceivedSubject = new Subject<DtoDelinetEvent>();\n  public onEventReceived = this._onEventReceivedSubject.asObservable();\n\n  public endpoint: string;\n  public privateKey: string;\n  public publicKey: string;\n\n  constructor(\n    _endpoint?: string,\n    _privateKey?: string,\n    _publicKey?: string,\n  ) {\n    this.endpoint = _endpoint;\n    this.privateKey = _privateKey;\n    this.publicKey = _publicKey;\n    this.initialize();\n  }\n\n  private _isRunning = false;\n  private _isUsingDelinetEndpoint = false;\n  private _isOrbitDbLoaded = false;\n  private _isIpfsLoaded = false;\n\n  private _loadingDb = false;\n\n  private _ipfsNode: any;\n  private _odb: any;\n  private _logEvents: any;\n  private OrbitDb: IOrbitDb;\n\n  private async initialize() {\n    setInterval(\n      async () => {\n        if (!this._isRunning) {\n          await this.mainLoopRoutine();\n        }\n      }, 5000\n    )\n  }\n\n  private async mainLoopRoutine() {\n    this._isRunning = true;\n    try {\n      if (this.endpoint\n        //&& this.publicKey\n        //&& this.privateKey\n      ) {\n        this._isUsingDelinetEndpoint = true;\n        if (!this._isIpfsLoaded) {\n          await this.loadIpfs();\n        }\n        if (!this._isOrbitDbLoaded) {\n          await this.checkOrbitDbLib();\n          await this.loadOrbitDb();\n        } else if (this.endpoint != this._logEvents.id) {\n          console.log(\"ooops. We are changing delinet endpoint???\");\n          await this.loadOrbitDb();\n        }\n      } else {\n        this._isUsingDelinetEndpoint = false;\n      }\n    } catch (error) {\n\n    }\n    this._isRunning = false;\n  }\n\n  private loadOrbitDb() {\n    if (!this._loadingDb) {\n      this._loadingDb = true;\n      console.log(\"loading odb: \" + this.endpoint);\n      return new Promise<any>(\n        (resolve, reject) => {\n          this.OrbitDb.createInstance(this._ipfsNode).then(async (_odb: any) => {\n            try {\n              this._odb = _odb;\n              this._logEvents = await _odb.log(this.endpoint);\n\n              this._logEvents.events.on('load', (dbname) => {\n                console.log(\"dbloaded \" + dbname);\n              })\n              this._logEvents.events.on('peer', (peer) => {\n                console.log('peer ' + peer);\n              })\n\n              this._logEvents.events.on('synced', (res) => {\n                console.log('db synced', res);\n              });\n              this._logEvents.events.on('load.progress', (address, hash, entry, progress, total) => {\n                console.log('db - load.progress', progress, total);\n              });\n\n              this._logEvents.events.on('replicated', (address) => {\n                this.fetchLogEvents();\n              })\n\n              this._logEvents.events.on('ready', (dbname, heads) => {\n                this.fetchLogEvents();\n              })\n\n              await this._logEvents.load();\n\n              this._isOrbitDbLoaded = true;\n              resolve(true);\n            } catch (error) {\n              reject(error);\n            }\n            this._loadingDb = false;\n          },\n            (e) => {\n              reject(e);\n              this._loadingDb = false;\n            }\n          );\n        }\n      )\n    }\n\n  }\n\n  private _lastHashFetched: string = null;\n  private fetchedLogEvents = [];\n  private async fetchLogEvents() {\n    let _evs=this._logEvents.iterator({ limit: -1, gt: this._lastHashFetched })\n    .collect()\n    .map(e=>e);\n    for (let index = 0; index < _evs.length; index++) {\n      const e = _evs[index];\n      if (e.payload?.value?.id) {\n        let _event = e.payload.value;\n\n        if (_event.payload.encryptedChunks && this.privateKey) {\n          let cry = CryptoService.Instance;\n          if (_event.payload.encryptedChunks) {\n            if (!cry.privateKey) cry.privateKey = await cry.importPrivateKey(this.privateKey);\n            let encChunks = _event.payload.encryptedChunks;\n            let chunks: string[] = [];\n            let payloadStr = \"\";\n            try {\n              for (let idx = 0; idx < encChunks.length; idx++) {\n                const encChunk = encChunks[idx];\n                let chunk = await cry.decrypt(encChunk);\n                chunks.push(chunk);\n                payloadStr += chunk;\n              }\n              _event.payload = JSON.parse(payloadStr);  \n            } catch (error) {\n              console.log(error);\n              _event.eventType=\"order_decrypt_error\";\n            }\n            \n          }\n\n        }\n        console.log(\"::>\", _event)\n        if (this.fetchedLogEvents.indexOf(_event.id) < 0) {\n          try {\n            this.processEvent(_event);\n          } catch (error) { console.log(error) };\n          this.fetchedLogEvents.push(_event.id);\n          this._lastHashFetched = e.hash;\n        }\n      }\n    }\n    \n  }\n\n  private processEvent(_event: DtoDelinetEvent) {\n    if (!_event.toPublicKey || _event.toPublicKey == this.publicKey) {\n      this._onEventReceivedSubject.next(_event);\n    }\n  }\n\n  private async loadIpfs() {\n    var ipfsNode = await (await SSIpfs.Ipfs()).create(\n      {\n        repo: 'delinet_client_ipfs',\n        pubsub: true,\n        EXPERIMENTAL: {\n          pubsub: true\n        }\n        , config: {\n          Addresses: {\n            Swarm: this._swarms\n          }\n        }\n      }\n    );\n    this._isIpfsLoaded = true;\n    this._ipfsNode = ipfsNode;\n  }\n\n  private async checkOrbitDbLib() {\n    var orbitdbScriptElement = await SSLoadLib.loadJSLib(\"orbitdblib\", \"libs/orbitdb.min.js\");\n    if (orbitdbScriptElement != null) {\n      this.OrbitDb = (window as any).OrbitDB;\n    }\n  }\n\n  public async sendEvent(evt: DtoDelinetEvent) {\n    if (this._isOrbitDbLoaded) {\n      if (!evt.id) {\n        evt.id = SSUuid.GenerateV4();\n      };\n      if (!evt.createdAt) {\n        evt.createdAt = (new Date()).toISOString();\n      };\n      var hash = await this._logEvents.add(evt);\n      console.log(hash);\n    } else {\n      throw new Error(\"OrbitDb is not loaded\");\n    }\n  };\n\n  public async sendAckToEvent(eventId: string) {\n    if (!this._isOrbitDbLoaded) {\n      console.log(\"DELINET ACK TO: \" + eventId);\n    }\n  };\n}\n","<app-splash *ngIf=\"!(systemSvc.isSystemReadyAsync|async)\"></app-splash>\n<div class=\"appframe\" fxLayout=\"row\" fxFill >\n    <app-left-bar-menu></app-left-bar-menu>\n    <div *ngIf=\"(systemSvc.isSystemReadyAsync|async)\" [@fadeInOutAnimation] [@routeAnimations]=\"route.routerState.snapshot.url.substring(1)\" fxFlex class=\"inscroll\">\n            <router-outlet ></router-outlet>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { SystemService } from './services/system.service';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  query,\n  // ...\n} from '@angular/animations';\nimport { Router, RouterOutlet, RouterStateSnapshot } from '@angular/router';\nimport { animFadeInOutAnimation, animRouteTransition } from './shared/animations';\nimport { IntegratorService } from './services/integrator/integrator.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less'],\n  animations: [\n    animFadeInOutAnimation,\n    animRouteTransition\n  ]\n})\nexport class AppComponent {\n  title = 'AdminApp';\n  public static Instance:AppComponent;\n  constructor(\n    public systemSvc: SystemService,\n    public route: Router,\n    private integratorSvc: IntegratorService,\n    public translate:TranslateService\n  ) {\n    AppComponent.Instance=this;\n    translate.setDefaultLang('en');\n    let currentLanguage=translate.getBrowserLang();\n    if (currentLanguage) translate.use(currentLanguage);\n\n    localStorage.setItem(\"app_loaded\", \"true\");\n    document.getElementById(\"loading_application\")?.remove();\n    systemSvc.isSystemReadyAsync.subscribe(\n      (isReady) => {\n        if (isReady) {\n          this.initialize();\n\n        }\n      }\n    )\n  }\n\n  async initialize() {\n    console.log(\"AdminClientApp initialized\");\n\n\n    this.integratorSvc.startPooling(30);\n  }\n\n  ngOnInit() {\n\n  }\n}\n","<h1 mat-dialog-title>\n    {{title}}\n  </h1>\n  \n  <div mat-dialog-content>\n    <p>{{message}}</p>\n  </div>\n  \n  <div mat-dialog-actions>\n      <div fxFlex>\n\n      </div>\n    <button *ngIf=\"data.showCancel\" mat-button (click)=\"onDismiss()\" i18n=\"@@confirmDialog.cancel\">\n        {{ 'confirmDialog.cancel' | translate }}\n    </button>\n    <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\" i18n=\"@@confirmDialog.ok\">{{ 'confirmDialog.ok' | translate }}</button>\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.less']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  title: string;\n  message: string;\n\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ConfirmDialogModel) {\n    // Update view with given values\n    this.title = data.title;\n    this.message = data.message;\n  }\n \n  onConfirm(): void {\n    // Close the dialog, return true\n    this.dialogRef.close(true);\n  }\n\n  onDismiss(): void {\n    // Close the dialog, return false\n    this.dialogRef.close(false);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n\nexport class ConfirmDialogModel {\n\n  constructor(public title: string, public message: string,public showCancel=true) {\n  }\n}","\n\nexport class MatchMediaUtil {\n    public static prefersColorScheme=\"\";\n    public static setPrefersColorsScheme(){\n        var theme=\"light\";    //default to light\n      \n        //local storage is used to override OS theme settings\n        if(localStorage.getItem(\"theme\")){\n            if(localStorage.getItem(\"theme\") == \"dark\"){\n                var theme = \"dark\";\n            }\n        } else if(!window.matchMedia) {\n            //matchMedia method not supported\n            console.log(\"matchMedia not supported\");\n        } else if(window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n            //OS theme setting detected as dark\n            var theme = \"dark\";\n        }\n        \n        //dark theme preferred, set document with a `data-theme` attribute\n        if (theme==\"dark\") {\n              document.documentElement.setAttribute(\"data-theme\", \"dark\");\n              this.prefersColorScheme=\"dark\";\n        } else {\n            document.documentElement.setAttribute(\"data-theme\", \"light\");\n            this.prefersColorScheme=\"light\";\n        } \n    }\n}","import { IdentityProvider } from \"./identity-provider-interface\"\nimport { ethers } from \"ethers\"\n\n\nexport class EthIdentityProvider extends IdentityProvider {\n    provider;\n    wallet;\n    \n    static _type=<any>\"ethereum\";\n\n  constructor (options:any = {}) {\n    super()\n    this.provider= (window as any).ethereum ? (new ethers.providers.Web3Provider((window as any).ethereum)) : new ethers.providers.JsonRpcProvider(\"https://polygon-rpc.com/\");\n    this.wallet = (window as any).ethereum ? this.provider.getSigner():ethers.Wallet.createRandom();\n    this.wallet = options.wallet\n  }\n\n  // Returns the type of the identity provider\n  static get type () { return this._type }\n\n  // Returns the signer's id\n  async getId (options = {}) {\n    var ssW= (sessionStorage.getItem(\"wallet_getId\"));\n    if (ssW!=null){\n        return ssW;\n    } else {\n        if (!this.wallet) {\n            this.wallet = ((await this._createWallet(options)) as any )\n          }\n          let ret=await (this.wallet.getAddress() as any)\n          sessionStorage.setItem(\"wallet_getId\",ret);\n          return ret\n    }\n  }\n\n  // Returns a signature of pubkeysignature\n  async signIdentity (data, options = {}) {\n    var ssSI=(sessionStorage.getItem(\"wallet_signedid\"));\n    if (ssSI!=null){\n        return ssSI;\n    } else {\n        const wallet = this.wallet\n        if (!wallet) { throw new Error('wallet is required') }\n    \n        let ret=await (wallet.signMessage(data) as any)\n        sessionStorage.setItem(\"wallet_signedid\",ret);\n        return ret;\n    }\n  }\n\n  static async verifyIdentity(identity) {\n    // Verify that identity was signed by the id\n    const provider = new ethers.providers.Web3Provider((window as any).ethereum);\n    const wallet = provider.getSigner();\n    const verifyMessage=ethers.utils.verifyMessage;\n    const signerAddress = verifyMessage(identity.publicKey + identity.signatures.id, identity.signatures.publicKey)\n    return (signerAddress === identity.id)\n  }\n\n  async _createWallet (options:any = {}) {\n    if (options.mnemonicOpts) {\n      if (!options.mnemonicOpts.mnemonic) {\n        throw new Error('mnemonic is required')\n      }\n      const Wallet = ethers.Wallet;\n      return Wallet.fromMnemonic(options.mnemonicOpts.mnemonic, options.mnemonicOpts.path, options.mnemonicOpts.wordlist)\n    }\n    if (options.encryptedJsonOpts) {\n      if (!options.encryptedJsonOpts.json) {\n        throw new Error('encrypted json is required')\n      }\n      if (!options.encryptedJsonOpts.password) {\n        throw new Error('password for encrypted json is required')\n      }\n      const Wallet = ethers.Wallet;\n      return Wallet.fromEncryptedJson(options.encryptedJsonOpts.json, options.encryptedJsonOpts.password, options.encryptedJsonOpts.progressCallback)\n    }\n    const Wallet = ethers.Wallet;\n    return Wallet.createRandom()\n  }\n}\n","export class IdentityProvider {\n    /* Return id of identity (to be signed by orbit-db public key) */\n    async getId (options) {}\n  \n    /* Return signature of OrbitDB public key signature */\n    async signIdentity (data, options) {}\n  \n    /* Verify a signature of OrbitDB public key signature */\n    static async verifyIdentity(identity):Promise<any> {}\n  \n    /* Return the type for this identity provider */\n    static get type () {\n      throw new Error('\\'static get type ()\\' needs to be defined in the inheriting class')\n    }\n  \n    /*\n      Return the type for this identity-procider\n      NOTE! This is the only property of the interface that\n      shouldn't be overridden in the inherited IdentityProvider\n    */\n    get type ():any {\n      return (this.constructor as any).type\n    }\n  }\n  ","import { HttpHandler, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { DtoOauthRequest } from \"src/app/api/models\";\nimport { CryptoService } from \"src/app/services/crypto.service\";\nimport * as JSZip from 'jszip';\n\nimport Dexie from \"dexie\";\nimport { importDB, exportDB, importInto, peakImportFile } from \"dexie-export-import\";\nimport { downloadUtil } from \"../shared/download-util\";\nimport { ethers, providers } from \"ethers\";\nimport { EthIdentityProvider } from \"./eth-identity-provider\";\nimport { resolve } from \"dns\";\nimport { provideRoutes } from \"@angular/router\";\nimport { SSLoadLib } from \"./loadlib\";\nimport { SSAuthentication } from \"./authentication\";\n\n\nexport class SSOrbitdb {\n    public static active: boolean = false;\n    public static _instance: any = null;\n    public static GetOrbitDbInstance(ipfsnode): Promise<any> {\n        return new Promise<any>(\n            async (resolve, reject) => {\n                var orbitdbScriptElement = await SSLoadLib.loadJSLib(\"orbitdblib\", \"libs/orbitdb.min.js\");\n                if (this._instance == null) {\n                    let _identity = await SSOrbitdb.GetEthWalletIdentity();\n                    (window as any).OrbitDB.createInstance(ipfsnode, { identity: _identity }).then((_odb: any) => {\n                        this._instance = _odb;\n                        this.active = true;\n                        resolve(this._instance);\n                    });\n                } else {\n                    resolve(this._instance);\n                }\n            }\n        );\n    }\n    public static docsInstances: any = {};\n    public static docsPoolInstances: any = {};\n    public static logInstances: any = {};\n\n    public static GetDocInstance(dbName: string, preLoad: boolean = true) {\n        return new Promise(\n            async (resolve, reject) => {\n                if (this._instance == null) {\n                    reject(\"Orbitdb instance not found\");\n                } else {\n                    if (this.docsInstances[dbName] == undefined) {\n                        this.docsInstances[dbName] = await this._instance.docs(dbName, { indexBy: 'id' });\n                        if (preLoad) await this.docsInstances[dbName].load();\n                        resolve(this.docsInstances[dbName]);\n                    } else {\n                        resolve(this.docsInstances[dbName]);\n                    }\n                }\n            }\n        )\n    }\n\n    public static GetLogInstancePool(dbName: string, preLoad: boolean = true) {\n        return new Promise(\n            async (resolve, reject) => {\n                if (this._instance == null) {\n                    reject(\"Orbitdb instance not found\");\n                } else {\n                    if (this.docsPoolInstances[dbName] == undefined) {\n                        this.docsPoolInstances[dbName] = await this._instance.log(dbName, {\n                            indexBy: 'id',\n                            accessController: {\n                                write: ['*']\n                            }\n                        });\n                        if (preLoad) await this.docsPoolInstances[dbName].load();\n                        resolve(this.docsPoolInstances[dbName]);\n                    } else {\n                        resolve(this.docsPoolInstances[dbName]);\n                    }\n                }\n            }\n        )\n    }\n\n    public static GetLogInstance(dbName: string, preLoad: boolean = false) {\n        return new Promise(\n            async (resolve, reject) => {\n                if (this._instance == null) {\n                    reject(\"Orbitdb instance not found\");\n                } else {\n                    if (this.logInstances[dbName] == undefined) {\n                        this.logInstances[dbName] = await this._instance.log(dbName);\n                        if (preLoad) await this.logInstances[dbName].load();\n                        resolve(this.logInstances[dbName]);\n                    } else {\n                        resolve(this.logInstances[dbName]);\n                    }\n                }\n            }\n        )\n    }\n\n    public static async ExportDatabases(_identity = null, _odbInstance = null) {\n        const odb = _odbInstance || SSOrbitdb._instance;\n        const identity = _identity || odb.identity\n        if (odb != null) {\n            var _idb = odb.keystore._store.db.db.db;\n            var _dbList = await (indexedDB as any).databases();\n            var zip = new JSZip();\n            var zipdir = zip.folder(\"admin_data\");\n            for (let i = 0; i < _dbList.length; i++) {\n                const _db = _dbList[i];\n                var _indb = await this.GetIDB(_db.name);\n                var dbBlob = new Dexie(_db.name);\n                let { verno, tables } = await dbBlob.open();\n                var dbkp = await exportDB(dbBlob);\n                zipdir.file(_db.name.replaceAll(\"/\", \"___\"), dbkp);\n            }\n            var zipblob = await zipdir.generateAsync({ type: \"blob\" });\n\n            downloadUtil.initiateDownloadDataFromBrowser(zipblob, \"admin_bkp.zip\", zipblob.type);\n        }\n    }\n\n    public static GetIDB(dbName: string) {\n        return new Promise<any>((resolve, reject) => {\n            const _indb: any = indexedDB.open(dbName);\n            _indb.onsuccess = (indb: IDBRequest<IDBDatabase>, ev: Event) => {\n                resolve(_indb.result);\n            }\n\n        });\n    }\n\n\n    public static async GetEthWalletIdentity(_identity = null, _odbInstance = null) {\n\n        try {\n            await SSLoadLib.loadJSLib(\"orbitdblib\", \"libs/orbitdb.min.js\");\n            console.log('ethereum.enable()');\n            try {\n                (await (window as any).ethereum.enable());\n            } catch (err){}\n            \n            (window as any).OrbitDB.Identities.addIdentityProvider(EthIdentityProvider);\n            const provider = (window as any).ethereum ? (new ethers.providers.Web3Provider((window as any).ethereum)) : new ethers.providers.JsonRpcProvider(\"https://polygon-rpc.com/\",);\n            console.log('provider: ');\n            console.log(provider);\n\n            \n            \n            var accounts = await provider.listAccounts();\n            console.log(accounts)\n            var wallet = (window as any).ethereum ? provider.getSigner() :ethers.Wallet.createRandom();\n            //(wallet as any).provider=provider;\n            \n            // You can also use an ENS name for the contract address\nconst daiAddress = \"0xd2aCe07FFD3939abc31bA618909B01Ef2B0a8e23\";\n\n// The ERC-20 Contract ABI, which is a common contract interface\n// for tokens (this is the Human-Readable ABI format)\nconst daiAbi = [\n  // Some details about the token\n  \"function name() view returns (string)\",\n  \"function symbol() view returns (string)\",\n\n  // Get the account balance\n  \"function balanceOf(address) view returns (uint)\",\n\n  // Send some of your tokens to someone else\n  \"function transfer(address to, uint amount)\",\n\n  // An event triggered whenever anyone transfers to someone else\n  \"event Transfer(address indexed from, address indexed to, uint amount)\"\n];\n\n// The Contract object\nconst daiContract = new ethers.Contract(daiAddress, daiAbi, provider);\n// Get the ERC-20 token name\nconsole.log(await daiContract.name());\n// 'Dai Stablecoin'\n\n// Get the ERC-20 token symbol (for tickers and UIs)\nconsole.log(await daiContract.symbol());\n// 'DAI'\n\n// Get the balance of an address\nvar balance = await daiContract.balanceOf(\"0x405D17B98f34F553af2A7B3a773B7d518ec09a50\")\n// { BigNumber: \"8501797437309328201631\" }\nconsole.log(balance);\n\n// Format the DAI for displaying to the user\nethers.utils.formatUnits(balance, 18)\n\n\n            console.log(wallet);\n            const identity = await (window as any).OrbitDB.Identities.createIdentity(\n                {\n                    type: \"ethereum\",\n                    wallet\n                }\n            );\n            sessionStorage.setItem(\"odb_identity\", JSON.stringify(identity));\n            return identity;\n        } catch (error) {\n            console.log(error);\n            return null;\n        }\n\n    }\n\n\n}\n\n","export class downloadUtil {\n    public static initiateDownloadDataFromBrowser(content, filename, contentType=null) {\n        if (!contentType) contentType = 'application/octet-stream';\n        var a = document.createElement('a');\n        var blob = new Blob([content], { 'type': contentType });\n        a.href = window.URL.createObjectURL(blob);\n        a.download = filename;\n        a.click();\n    }\n\n    public static initiateDownloadTextFromBrowser(content, filename) {\n        var contentType = 'application/text';\n        var a = document.createElement('a');\n        var blob = new Blob([content], { 'type': contentType });\n        a.href = window.URL.createObjectURL(blob);\n        a.download = filename;\n        a.click();\n    }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { DtoMerchant, DtoOauthResponse, Merchant, MerchantGroup, PaymentMethod } from '../api/models';\nimport { SysService } from '../api/services';\nimport { AppComponent } from '../app.component';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { MatchMediaUtil } from '../shared/match-media-util';\nimport { SSAuthentication } from '../static-stack/authentication';\nimport { SSIpfs } from '../static-stack/ipfs';\nimport { SSOrbitdb } from '../static-stack/orbitdb';\nimport { SSUuid } from '../static-stack/uuid';\nimport { CryptoService } from './crypto.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SystemService {\n\n  private _baseCurrency:string;\n  get baseCurrency():string{\n    if (!this._baseCurrency){\n      let storedBaseCurrency=localStorage.getItem(\"odp_terminal_base_currency\");\n      if (storedBaseCurrency){\n        this._baseCurrency=storedBaseCurrency;\n      }\n    }\n    return this._baseCurrency;\n  }\n  set baseCurrency(value:string){\n    if (this._baseCurrency!=value){\n      this._baseCurrency=value;\n      localStorage.setItem(\"odp_terminal_base_currency\",this._baseCurrency);\n      if (window['odp_terminal_base_currency']!=this._baseCurrency){\n        window.location.reload();\n      }\n    }\n  }\n\n  private _terminalId:string;\n  get terminalId():string{\n    if (!this._terminalId){\n      let tId=localStorage.getItem(\"odp_terminal_id\");\n      this.terminalId=tId ? tId : \"{{NEWGUID}}\";\n    }\n    return this._terminalId;\n  }\n  set terminalId(value:string){\n    this._terminalId=value;\n    if (value==\"{{NEWGUID}}\"){\n      this.terminalId=\"T__\"+SSUuid.GenerateV4();\n    }\n    localStorage.setItem(\"odp_terminal_id\",this.terminalId);\n  }\n\n  private _localSettings:any;\n  get localSettings():any {\n    if (!this._localSettings){\n      let _tSettings=localStorage.getItem(\"odp_terminal_settings\");\n      if (_tSettings){\n        this.localSettings=JSON.parse(_tSettings);\n      } else {\n        this.localSettings={\n          General: {\n            TerminalId: this.terminalId,\n            OperationMode: this.isStaticAppOnly ? 'static' : 'api',\n            Locale: \"auto\",\n            Timer: 30\n          },\n          Appearence: {\n            ColorTheme: \"auto\",\n            StartMenu: \"closed\",\n            Animations: \"true\"\n          },\n          \"Payment Methods\":{\n            Methods:<PaymentMethod[]>[\n              {\n                id: SSUuid.GenerateV4(),\n                createdAt: (new Date()).toISOString(),\n                status: \"active\",\n                currency: this.baseCurrency,\n                type: \"OFFLINE\",\n                method: \"CASH\",\n                cardBrand: \"CASH\",\n                displayName: \"CASH\",\n                merchantId: this.selectedMerchant.id\n              }\n            ]\n          },\n          \"Orders Endpoints\":{\n            Endpoints:<DtoAdapterConfig[]>[\n              // {\n              //   name: \"My Web Api\",\n              //   type: \"webapi\",\n              //   sourceName: \"odp\",\n              //   endpoint: \"http://localhost:5075\",\n              //   clientId: \"\",\n              //   clientSecret: \"\",\n              //   publicKey: undefined,\n              //   privateKey: undefined\n              // },\n              // {\n              //   name: \"My Websocket Api\",\n              //   type: \"websocket\",\n              //   sourceName: \"odp\",\n              //   endpoint: \"http://localhost:5075\",\n              //   clientId: \"\",\n              //   clientSecret: \"\",\n              //   publicKey: undefined,\n              //   privateKey: undefined\n              // }\n            ]\n          },\n          Debug: {}\n        }\n      }\n      \n    }\n    return this._localSettings;\n  }\n  set localSettings(value:any){\n    this._localSettings=value;\n    localStorage.setItem(\"odp_terminal_settings\",JSON.stringify(value));\n  }\n  public static Instance:SystemService;\n\n  constructor(\n    //Injections\n    public sysSvc: SysService,\n    public cryptoSvc:CryptoService,\n    public router:Router,\n    public dialog:MatDialog\n  ) {\n    SystemService.Instance=this;\n    try {\n      var tId=localStorage.getItem(\"odp_terminal_id\");\n      if (tId){\n        this.terminalId=tId;\n      } else {\n        this.terminalId=\"{{NEWGUID}}\";\n        localStorage.setItem(\"odp_terminal_id\",this.terminalId);\n      }\n    } catch (error) {\n      \n    }\n    //Delayed for subject item ready with 'first next as false'\n    setTimeout(() => {\n      this._isSystemReady.next(false);\n      setTimeout(() => {\n        this._loadSystem();\n      }, environment.production ? 0 : 500); //Delay loadSystem if in production mode to test splash screen\n    }, 1);\n  }\n\n  getTheme(){\n      return MatchMediaUtil.prefersColorScheme;\n    }\n  \n\n  version:string=\"\";\n  private _loadSystem() {\n\n    this.sysSvc.getApiSysVer().subscribe(\n      (d) => {\n        console.log(d);\n        this.version=d;\n        if (d && d.startsWith('static:')) {\n          this.loadStaticStack();\n        } else {\n          this.loadApiStack();\n        }\n        \n      }\n    )\n  }\n\n  private async loadCommonShared(){\n    await this.loadLocalPersistedChooses()\n    if (this.selectedMerchantGroup==null){\n      this.router.navigate(['/choose-merchant-group']);\n    } else {\n      if (this.isStaticAppOnly){\n        try {\n          let ipfsNode=await SSIpfs.getNode();\n          var scriptElm = await SSOrbitdb.GetOrbitDbInstance(ipfsNode);\n          this.logDatahashChannel = await SSOrbitdb.GetLogInstancePool(this.selectedMerchant.id + \"_hashdata\");\n          let datahashChannel = this.logDatahashChannel.id;\n          console.log(\"Started dataHashChannel: \" + datahashChannel);\n          this.logDatahashChannel.load();\n        } catch (error) {\n          console.log(\"ERROR GETTING ORBIT INSTANCE...\");\n          console.log(error);\n        }\n      }\n    }\n  }\n\n\n  private async loadApiStack() {\n    this.isStaticAppOnly = false;\n    var oauthRes=localStorage.getItem(\"oauthresponse\");\n    if (oauthRes!=null){\n      this.OauthToken=JSON.parse(oauthRes);\n      this.isAuthenticated=true;\n      await this.loadCommonShared();\n      this._isSystemReady.next(true);\n    } else {\n      this.router.navigate(['/auth']);\n      this._isSystemReady.next(true);\n    }\n    \n  }\n\n  logDatahashChannel;\n  private async loadStaticStack() {\n    this.isStaticAppOnly = true;\n    let ipfsNode=await SSIpfs.getNode();\n    let sessionIdentity=sessionStorage.getItem(\"wallet_getId\");\n    if (sessionIdentity==null) { \n      this.router.navigate(['/auth']);\n      this._isSystemReady.next(true);\n      return;\n    }\n    let orbitdbInstance=await SSOrbitdb.GetOrbitDbInstance(ipfsNode);\n    this.OauthToken= {\n      \"accessToken\": sessionIdentity,\n      \"type\": \"keypair\",\n      \"expiresIn\": 0\n  };\n    this.isAuthenticated=true;\n\n    await this.loadCommonShared();\n    this._isSystemReady.next(true);\n  }\n\n  public async reload(){\n    this._isSystemReady.next(false);\n    await new Promise(r => setTimeout(r, 64));\n    this._loadSystem();\n  }\n\n\n\n  private _isSystemReady = new Subject<boolean>();\n  public isSystemReadyAsync: Observable<boolean> = this._isSystemReady.asObservable();\n\n\n  public isStaticAppOnly = false;\n  public isAuthenticated = false;\n  public OauthToken:DtoOauthResponse=null;\n\n  private _selectedMerchantGroupChanged = new Subject<MerchantGroup>();\n  public selectedMerchantGroupChanged: Observable<MerchantGroup> = this._selectedMerchantGroupChanged.asObservable();\n\n  private _selectedMerchantGroup:MerchantGroup=null; \n  public set selectedMerchantGroup(newValue:MerchantGroup){\n    this._selectedMerchantGroup=newValue;\n    localStorage.setItem(\"system.selectedMerchantGroup\",JSON.stringify(newValue));\n    this._selectedMerchantGroupChanged.next(newValue);\n  }\n  public get selectedMerchantGroup():MerchantGroup {\n    return this._selectedMerchantGroup;\n  }\n\n  private _selectedMerchantChanged = new Subject<Merchant>();\n  public selectedMerchantChanged: Observable<Merchant> = this._selectedMerchantChanged.asObservable();\n\n  private _selectedMerchant:Merchant=null;\n  public get selectedMerchant():Merchant {\n    return this._selectedMerchant;\n  }\n  public set selectedMerchant(newValue:Merchant){\n    this._selectedMerchant=newValue;\n    localStorage.setItem(\"system.selectedMerchant\",JSON.stringify(newValue));\n    if (newValue.baseCurrency!=this.baseCurrency){\n      setTimeout(() => {\n        this.baseCurrency=newValue.baseCurrency;  \n      }, 2000);\n      \n    }\n    this._selectedMerchantChanged.next(newValue);\n  }\n\n  loadLocalPersistedChooses() { \n    return new Promise<void>(\n      async (resolve,reject)=>{\n        [\n          \"system.selectedMerchantGroup\",\n          \"system.selectedMerchant\"\n        ].forEach((field)=>{\n          let _fieldValue=(localStorage.getItem(field));\n          if (_fieldValue!=null){\n            this[\"_\"+field.split('.')[1]]=JSON.parse(_fieldValue);\n          }\n        });\n\n        var __selectedMerchant= (localStorage.getItem(\"system.selectedMerchant\"));\n        resolve();\n      }\n    )\n  }\n\n  public async logout(){\n    let translate=AppComponent.Instance.translate;\n    let title=await translate.get(\"system.logout\").toPromise();\n    let msg=await translate.get(\"system.msg\").toPromise();\n    \n    var dialogData:ConfirmDialogModel ={\n      title:title,\n      message:msg,\n      showCancel:true\n    }\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"80vw\",\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(\n      (ok) => {\n        if (ok) {\n          this.selectedMerchant=null;\n          this.selectedMerchantGroup=null;\n          this.isAuthenticated=false;\n          this.OauthToken=null;\n          sessionStorage.clear();\n          this.router.navigate(['/auth']);\n        }\n      }\n    )\n\n    return;\n\n  }\n\n}\n","import { HttpClient, HttpHandler, HttpRequest, HttpXhrBackend } from \"@angular/common/http\";\nimport Enumerable from \"linq\";\nimport { Subject } from \"rxjs\";\nimport { ApiConfiguration } from \"src/app/api/api-configuration\";\nimport { DtoEvent, DtoOrderDetails } from \"src/app/api/models\";\nimport { OrderService } from \"src/app/api/services/order.service\";\nimport { IOrderAdapter } from \"../i-order-adapter\";\nimport { DtoDelinetEvent } from './dto-delinet-event';\nimport { DelinetClient } from \"src/app/services/integrator/adapters/order/delinet/delinet-client\";\nimport { SystemService } from '../../../../system.service';\nimport { resolve } from \"dns\";\nimport { _DB } from \"src/app/shared/integrator-db\";\nimport { SSUuid } from \"src/app/static-stack/uuid\";\nimport { CryptoService } from \"src/app/services/crypto.service\";\n\n\nexport class OAdDelinetChannel implements IOrderAdapter {\n    private static _instance: OAdDelinetChannel;\n\n    constructor(config: DtoAdapterConfig) {\n        this.name = config.name;\n        this.sourceName = config.sourceName;\n        this.delinetEndpoint=config.endpoint;\n        this.publicKey=config.publicKey;\n        this.privateKey=config.privateKey;\n        this.initialize();\n    }\n    public name: string;\n    public sourceName: string;\n    public delinetEndpoint:string;\n    public publicKey:string;\n    public privateKey:string;\n\n    private _onNewEventsSubject = new Subject<DtoEvent[]>();\n    public onNewEvents = this._onNewEventsSubject.asObservable();\n    private _onReadyAdapterSubject = new Subject<boolean>();\n    public onReadyAdapter = this._onReadyAdapterSubject.asObservable();\n\n    private _swarms = [\n        '/dns4/intense-lake-89842.herokuapp.com/tcp/443/wss/p2p-webrtc-star/'\n    ];\n\n    private _isRunning = false;\n    private delinetClient: DelinetClient\n    private orderSvc: OrderService;\n    private systemSvc:SystemService;\n\n    private async initialize() {\n        this.systemSvc=SystemService.Instance;\n        \n        var config = new ApiConfiguration();\n        config.rootUrl = '';\n        const httpClient = new HttpClient(new HttpXhrBackend({ build: () => new XMLHttpRequest() }));\n        this.orderSvc = new OrderService(config, httpClient);\n\n        this.delinetClient = new DelinetClient();\n        this.delinetClient.onEventReceived.subscribe(\n            (evt) => {\n                if (evt && evt.payload){\n                    if (evt.eventType==\"order\"){\n                        _DB.localorders.put(evt.payload,evt.payload.id);\n                    } else {\n                        this._onNewEventsSubject.next([evt.payload]);\n                    }\n                }\n            }\n        )\n        setInterval(\n            async () => {\n                if (!this._isRunning) {\n                    await this.mainLoopRoutine();\n                }\n            }, 5000\n        )\n    }\n\n    async mainLoopRoutine() {\n        this._isRunning = true;\n        try {\n          if (this.systemSvc.selectedMerchant\n            && this.delinetEndpoint\n            //&&false\n            //&& this.systemSvc.selectedMerchant.delinetPublicKey\n            //&& this.systemSvc.selectedMerchant.delinetPrivateKey\n          ) {\n            if (this.systemSvc.selectedMerchant.delinetEndpoint != this.delinetClient.endpoint) {\n              this.delinetClient.endpoint=this.delinetEndpoint;\n              this.delinetClient.publicKey=this.publicKey;\n              this.delinetClient.privateKey=this.privateKey;\n            }\n          } else {\n            //TODO: Stop client\n          }\n        } catch (error) {\n    \n        }\n        this._isRunning = false;\n      }\n\n    public async acknowledge(events: DtoEvent[]) {\n        events.forEach(_event => {\n            this.delinetClient.sendAckToEvent(_event.id);    \n        });\n    }\n\n    public start() {\n\n    }\n    public stop() {\n\n    }\n\n    public async getOrder(id: string): Promise<DtoOrderDetails> {\n        let _orderDetail = await _DB.localorders.get(id);\n        return _orderDetail as any;\n    }\n    public async changeStatus(orderId: string, code: string): Promise<boolean>  {\n        let ret = false;\n        try {\n          switch (code) {\n            case \"confirm\":\n              //await this.orderSvc.postApiOrderV10IdConfirm(orderId).toPromise();\n              var newsuid=SSUuid.GenerateV4();\n              var newEvt=<DtoDelinetEvent>{\n                eventType:\"event\",\n                payload:{\n                  code: \"CFM\",\n                  createdAt: (new Date()).toISOString(),\n                  fullCode: \"CONFIRMED\",\n                  id: newsuid,\n                  metadata: null,\n                  orderId: orderId\n                },\n                id:newsuid\n            };\n\n            await this.delinetClient.sendEvent(newEvt);\n              setTimeout(() => {\n                 //newEvt.id=this.name+\"_\"+newEvt.id;\n                this._onNewEventsSubject.next([newEvt.payload]);\n                \n              }, 500);\n              \n              ret = true;\n              break;\n            case \"startPreparation\":\n              //await this.orderSvc.postApiOrderV10IdStartPreparation(orderId).toPromise();\n              ret = true;\n              break;\n            case \"readyToPickup\":\n              //await this.orderSvc.postApiOrderV10IdReadyToPickup(orderId).toPromise();\n              ret = true;\n              break;\n            case \"dispatch\":\n              //await this.orderSvc.postApiOrderV10IdDispatch(orderId).toPromise();\n              ret = true;\n              break;\n            case \"requestCancellation\":\n              //await this.orderSvc.postApiOrderV10IdRequestCancellation(orderId).toPromise();\n              ret = true;\n              break;\n            case \"acceptCancellation\":\n              //await this.orderSvc.postApiOrderV10IdAcceptCancellation(orderId).toPromise();\n              ret = true;\n              break;\n            case \"denyCancellation\":\n              //await this.orderSvc.postApiOrderV10IdDenyCancellation(orderId).toPromise();\n              ret = true;\n              break;\n    \n            default:\n              break;\n          }\n        } catch (error) {\n    \n        }\n\n        return ret;\n    }\n\n    doPooling(): void {\n    }\n    \n}\n","import { DtoOrderStatusGroup } from '../../shared/order/dto-order-status-group';\nimport { DtoEvent } from '../../api/models/dto-event';\nimport { ItemService, OrderService } from 'src/app/api/services';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as Enumerable from 'linq';\nimport { _DB } from '../../shared/integrator-db';\nimport { DtoStoredOrder } from './dto-stored-order';\nimport { IOrderAdapter } from './adapters/order/i-order-adapter';\nimport { OAdWebApi } from './adapters/order/webapi/o-ad-web-api';\nimport { DtoStoredEvent } from './dto-stored-event';\nimport { SSUuid } from 'src/app/static-stack/uuid';\nimport { OAdWebSocket } from './adapters/order/websocket/o-ad-web-socket';\nimport { SystemService } from '../system.service';\nimport { OAdDelinetChannel } from './adapters/order/delinet/o-ad-delinet';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntegratorService {\n  private _processedEvents: any = {};\n\n  listPooling: DtoEvent[] = [];\n  listOrder: DtoStoredOrder[] = [];\n\n  initialized=false;\n  private _onInitialized = new Subject<boolean>();\n  public onInitialized = this._onInitialized.asObservable();\n\n  private _onOrdersListUpdatedSubject = new Subject<DtoStoredOrder[]>();\n  public onOrdersListUpdated = this._onOrdersListUpdatedSubject.asObservable();\n\n  private _onOrdersListLoadedSubject = new Subject<DtoStoredOrder[]>();\n  public onOrdersListLoaded = this._onOrdersListLoadedSubject.asObservable();\n\n  private _onAddedOrderSubject = new Subject<DtoStoredOrder>();\n  public onAddedOrder = this._onAddedOrderSubject.asObservable();\n\n  private _onUpdatedOrderSubject = new Subject<DtoStoredOrder>();\n  public onUpdatedOrder = this._onUpdatedOrderSubject.asObservable();\n\n  private _onDeletedOrderSubject = new Subject<DtoStoredOrder>();\n  public onDeletedOrder = this._onDeletedOrderSubject.asObservable();\n\n  private _onEventFromPoolSubject = new Subject<DtoStoredEvent>();\n  public onEventFromPool = this._onEventFromPoolSubject.asObservable();\n\n  private _countDownPooling = new Subject<number>();\n  public countDownPoolingAsync = this._countDownPooling.asObservable();\n\n  private _progressToNextPooling = new Subject<number>();\n  public progressToNextPooling = this._progressToNextPooling.asObservable();\n\n  private _OnErrorSubject = new Subject<any>();\n  public OnError = this._OnErrorSubject.asObservable();\n\n  public listOrderStatusGroup: DtoOrderStatusGroup[] = [];\n\n  public isRunningPooling = false;\n  public isRunningProcessEvent = false;\n  public isWaitingToProcessEvent = false;\n  public isPoolingLoopRoutineActive = false;\n  public poolingDelaySeconds = 30;\n  public secondsElapsedFromLastPooling = 999999;\n  public promisses: { storedOrderid: string, resolve: any }[] = [];\n  public activeAdapters: IOrderAdapter[] = [];\n  selectedMerchantPost=false;\n  constructor(private orderSvc: OrderService, private systemSvc: SystemService, public itemSvc: ItemService) {\n    systemSvc.isSystemReadyAsync.subscribe(d => {\n      if (this.systemSvc.selectedMerchant) {\n        this.initialize();\n      } else {\n        systemSvc.selectedMerchantChanged.subscribe(d2 => {\n          if (d2 && !this.selectedMerchantPost) {\n            this.selectedMerchantPost=true;\n            this.initialize();\n          }\n        })\n      }\n\n    });\n\n  }\n\n  private async initialize() {\n\n    await _DB.open();\n    this.listOrder = await _DB.orders.toArray();\n    this._onOrdersListLoadedSubject.next(this.listOrder);\n    if (this.listOrder.length > 0) {\n      this._onOrdersListUpdatedSubject.next(this.listOrder);\n    }\n\n    var config: DtoAdapterConfig[] = this.systemSvc.localSettings[\"Orders Endpoints\"].Endpoints;\n    for (let i = 0; i < config.length; i++) {\n      const element = config[i];\n      console.log(\"Init adapter: \" + element.name);\n      var adapter: IOrderAdapter;\n      switch (config[i].type) {\n        case \"webapi\":\n          adapter = new OAdWebApi(config[i]);\n          this.activeAdapters.push(adapter);\n          break;\n        case \"websocket\":\n          adapter = new OAdWebSocket(config[i]);\n          this.activeAdapters.push(adapter);\n          break;\n        case \"delinet\":\n          adapter = new OAdDelinetChannel(config[i]);\n          this.activeAdapters.push(adapter);\n          break;\n\n        default:\n          break;\n      }\n      adapter.onNewEvents.subscribe(\n        async (_events) => {\n          for (let index = 0; index < _events.length; index++) {\n            try {\n              var newGuid = adapter.name + \"_\" + _events[index].id;\n              var dto: DtoStoredEvent = {\n                adapter: adapter.name, event: _events[index], id: newGuid,\n                source: adapter.sourceName\n              };\n\n              await _DB.tempEvents.add(dto, dto.id);\n            } catch (e) {\n              var a = e;\n            }\n          }\n          await adapter.acknowledge(_events);\n          await this.processEvent();\n        }\n      );\n    }\n\n    setInterval(async () => {\n      if (\n        this.isPoolingLoopRoutineActive\n        && this.secondsElapsedFromLastPooling > this.poolingDelaySeconds\n        && !this.isRunningPooling\n      ) {\n        (await this.doPooling());\n      }\n      if (this.isPoolingLoopRoutineActive) {\n        (this.secondsElapsedFromLastPooling += 0.2);\n        let countDown = this.poolingDelaySeconds - this.secondsElapsedFromLastPooling;\n        if (countDown < 0) countDown = 0;\n        this._countDownPooling.next(Math.floor(countDown));\n        var percent = ((this.poolingDelaySeconds - countDown) / this.poolingDelaySeconds) * 100;\n        this._progressToNextPooling.next(percent);\n      }\n\n    }, 200);\n\n    this.initialized=true;\n    this._onInitialized.next(true);\n  }\n  public async doPooling() {\n    this.secondsElapsedFromLastPooling = 0;\n    for (let i = 0; i < this.activeAdapters.length; i++) {\n      await this.activeAdapters[i].doPooling();\n    }\n  }\n\n  public startPooling(poolingDelaySeconds: number = 0) {\n    if (this.poolingDelaySeconds > 0) {\n      this.poolingDelaySeconds = this.poolingDelaySeconds;\n    }\n    this.isPoolingLoopRoutineActive = true;\n  }\n\n  public stopPooling() {\n    this.isPoolingLoopRoutineActive = false;\n  }\n\n  async processEvent() {\n    if (!this.isRunningProcessEvent) {\n      this.isRunningProcessEvent = true\n      try {\n        var _storedEvents = await _DB.tempEvents.toArray();\n        for (let i = 0; i < _storedEvents.length; i++) {\n          const _storedEvent: DtoStoredEvent = _storedEvents[i];\n          var adapter = this.getAdapter(_storedEvent.adapter);\n          if (adapter != null) {\n            this._onEventFromPoolSubject.next(_storedEvent);\n            var dbpEvent = await _DB.events.get(_storedEvent.id);\n            if (!dbpEvent) {\n              await _DB.events.put(_storedEvent, _storedEvent.id);\n              var _localStoredOrder = Enumerable.from(this.listOrder).where(o => o.order.id == _storedEvent.event.orderId && o.source == adapter.sourceName).defaultIfEmpty(null).firstOrDefault();\n              var idx = this.listOrder.indexOf(_localStoredOrder);\n\n              if (_storedEvent.event.code) {\n                try {\n                  switch (_storedEvent.event.code) {\n                    case \"PLC\":\n                    case \"RPS\":\n                      let _orderDetail = await adapter.getOrder(_storedEvent.event.orderId);\n                      var newUuid = SSUuid.GenerateV4();\n                      var dto = <DtoStoredOrder>{ order: _orderDetail, status: _storedEvent.event.code, modifiedAt: new Date(), events: [_storedEvent.event], id: newUuid, source: adapter.sourceName, adapter: adapter.name };\n                      if (_localStoredOrder == null) {\n                        this.listOrder.push(dto);\n                        this._onAddedOrderSubject.next(dto);\n                      } else {\n                        _localStoredOrder.status = _storedEvent.event.code;\n                        this.updateOrderEvent(_localStoredOrder, _storedEvent.event);\n                        this._onUpdatedOrderSubject.next(_localStoredOrder);\n                      }\n                      await _DB.orders.put(dto, dto.id);\n                      this._onOrdersListUpdatedSubject.next(this.listOrder);\n                      break;\n                    case \"CFM\":\n                    case \"RTP\":\n                    case \"DSP\":\n                    case \"CON\":\n                      if (_localStoredOrder != null) {\n                        _localStoredOrder.status = _storedEvent.event.code;\n                        this.updateOrderEvent(_localStoredOrder, _storedEvent.event);\n                        await this.persistEventChanges(_localStoredOrder);\n                      }\n                      break;\n                    case \"ADR\":\n                      if (_localStoredOrder != null) {\n                        this.updateOrderEvent(_localStoredOrder, _storedEvent.event);\n                        try {\n                          if (_storedEvent.event.metadata != null) {\n                            var obj = JSON.parse(_storedEvent.event.metadata);\n                            try {\n                              if (typeof obj == 'string') {\n                                obj = JSON.parse(obj);\n                              }\n                            } catch (error) {\n\n                            }\n                            _localStoredOrder.driver = {\n                              workerExternalUuid: obj.workerExternalUuid,\n                              workerName: obj.workerName,\n                              workerPhone: obj.workerPhone,\n                              workerPhotoUrl: obj.workerPhotoUrl,\n                              workerVehicleType: obj.workerVehicleType,\n                              status: \"accepted the request\"\n                            }\n                          }\n                        } catch (error) {\n\n                        }\n                        await this.persistEventChanges(_localStoredOrder);\n                      }\n                      break;\n                    case \"GTO\":\n                    case \"AAO\":\n                    case \"CLT\":\n                    case \"AAD\":\n                      if (_localStoredOrder != null) {\n                        this.updateOrderEvent(_localStoredOrder, _storedEvent.event);\n                        var dicDriver = { GTO: \"going to store\", AAO: \"arrived at store\", CLT: \"collected order\", AAD: \"arrived at destination\" };\n                        try {\n                          _localStoredOrder.driver.status = dicDriver[_storedEvent.event.code];\n                        } catch (error) {\n\n                        }\n                        await this.persistEventChanges(_localStoredOrder);\n                      }\n                      break;\n                    case \"CCR\":\n                      if (_localStoredOrder != null) {\n                        _localStoredOrder.consumerRequestCancellation = true;\n                        this.updateOrderEvent(_localStoredOrder, _storedEvent.event);\n                        await this.persistEventChanges(_localStoredOrder);\n                      }\n                      break;\n                    case \"CCA\":\n                    case \"CCD\":\n                      if (_localStoredOrder != null) {\n                        _localStoredOrder.consumerRequestCancellation = false;\n                        this.updateOrderEvent(_localStoredOrder, _storedEvent.event);\n                        await this.persistEventChanges(_localStoredOrder);\n                      }\n                      break;\n                    default:\n                      break;\n                  }\n                  await _DB.tempEvents.delete(_storedEvent.id);\n                } catch (error) {\n                  this._OnErrorSubject.next(error);\n                  console.log(\"Error processing \" + _storedEvent.event.code + \" Event\");\n                  console.log(error);\n                }\n              }\n\n            }\n          }\n        }\n      } catch (error) {\n\n      }\n      this.isRunningProcessEvent = false;\n      if (this.isWaitingToProcessEvent) {\n        this.isWaitingToProcessEvent = false;\n        setTimeout(() => {\n          this.processEvent();\n        }, 1);\n      }\n    } else {\n      this.isWaitingToProcessEvent = true;\n    }\n  }\n  updateOrderEvent(_localStoredOrder: DtoStoredOrder, _event: DtoEvent) {\n    _localStoredOrder.modifiedAt = new Date();\n    _localStoredOrder.processingStatus = undefined;\n    _localStoredOrder.processingStatusAt = undefined;\n    if (_localStoredOrder.events.length > 0) {\n      _localStoredOrder.events.push(_event);\n    }\n  }\n  private async persistEventChanges(_localStoredOrder: DtoStoredOrder) {\n    this._onUpdatedOrderSubject.next(_localStoredOrder);\n    await _DB.orders.put(_localStoredOrder, _localStoredOrder.id);\n    this._onOrdersListUpdatedSubject.next(this.listOrder);\n    try {\n      var p = Enumerable.from(this.promisses).where(x => x.storedOrderid == _localStoredOrder.id).firstOrDefault();\n      if (p != null) {\n        p.resolve();\n      }\n    } catch (error) {\n    }\n  }\n\n  changeStatus(storedOrderId: string, status: string) {\n    var p = new Promise<any>(\n      async (resolve, reject) => {\n        var _localOrderDetail = Enumerable.from(this.listOrder).where(o => o.id == storedOrderId).defaultIfEmpty(null).firstOrDefault();\n        _localOrderDetail.processingStatus = status;\n        _localOrderDetail.processingStatusAt = new Date();\n        var adapter = this.getAdapter(_localOrderDetail.adapter);\n        if (adapter != null) {\n          let changedStatus = await adapter.changeStatus(_localOrderDetail.order.id, status);\n          if (changedStatus) {\n            this.promisses.push({ storedOrderid: storedOrderId, resolve: resolve });\n\n            this._onUpdatedOrderSubject.next(_localOrderDetail);\n            await _DB.orders.put(_localOrderDetail, storedOrderId);\n            this._onOrdersListUpdatedSubject.next(this.listOrder);\n          }\n          else {\n            reject();\n          }\n        }\n        else {\n          reject();\n        }\n      }\n    );\n    return p;\n  }\n  getAdapter(name: string) {\n    var adapter = Enumerable.from(this.activeAdapters).where(x => x.name == name).firstOrDefault();\n    if (adapter == null) {\n\n    }\n    return adapter;\n  }\n}\n","<div class=\"divContent\" fxLayout=\"row\" [ngClass]=\"{'dark':systemSvc.getTheme()=='dark'}\">\n    <div class=\"barSelected\" [ngClass]=\"{'selected': selected==true}\"></div>\n    <div fxLayout=\"column\" class=\"content\">\n        <div fxLayout=\"row\">\n            <div fxFlex=\"80\" fxLayout=\"row\">\n                <div class=\"displayId\"> #{{orderStatus.storedOrder.order.displayId}} </div>\n                <div class=\"custumerName\">&nbsp; {{orderStatus.storedOrder.order.customer.name}}</div>\n            </div>\n            <div class=\"iconStatus\" fxFlex=\"20\" fxLayoutAlign=\"end end\">\n                <div class=\"divFaIcon\"\n                    [ngStyle]=\"{'background-color': osd[orderStatus.storedOrder.status].backgroundColor,'color':osd[orderStatus.storedOrder.status].color}\">\n                    <fa-icon *ngIf=\"orderStatus.storedOrder.status\"\n                        icon=\"{{osd[orderStatus.storedOrder.status].instruction?.icon}}\"></fa-icon>\n                </div>\n            </div>\n        </div>\n        <div class=\"instructions\">\n            <span i18n=\"@@orderStatus.instruction\">\n                {{('orderStatus.instructionLabels.'+osd[orderStatus.storedOrder.status].instruction.label)|translate}}\n            </span>\n            <span class=\"bold\" *ngIf=\"orderStatus.storedOrder.status=='CFM'\">\n                {{orderStatus?.storedOrder.order?.delivery?.deliveryDateTime|date:\"HH:mm\"}} </span>\n        </div>\n        <div class=\"driver\" *ngIf=\"orderStatus.storedOrder.driver\">\n            <fa-icon icon=\"motorcycle\" class=\"cssFaIcon\"></fa-icon>\n            <span class=\"name\" matTooltip=\"Info about the action\" matTooltipPosition=\"below\"\n                matTooltipHideDelay=\"100000\">{{orderStatus.storedOrder.driver.workerName}}</span>\n            <span i18n=\"@@orderStatus.driverStatus\">\n                {{('orderStatus.driverStatus.'+orderStatus.storedOrder.driver.status)|translate}}\n            </span>\n        </div>\n        <div class=\"customerArrived\" *ngIf=\"orderStatus.storedOrder.pickupAreaAssigned\">\n            <fa-icon icon=\"car\" class=\"cssFaIcon\"></fa-icon>\n            <span  i18n=\"@@orderStatus.customerArrived\">{{ 'orderStatus.customerArrived' | translate }} </span>\n            <span class=\"bold\" >\n                {{orderStatus.storedOrder.pickupAreaAssigned.PICKUP_AREA_TYPE}} : \n                {{orderStatus.storedOrder.pickupAreaAssigned.PICKUP_AREA_CODE}}\n            </span>\n        </div>\n        <div class=\"cancelModal\" [@fadeInOutAnimation] *ngIf=\"orderStatus.storedOrder.consumerRequestCancellation\" fxLayout=\"column\">\n            <span i18n=\"@@orderStatus.custumerRequestCancellation\"> {{ 'orderStatus.customerRequestCancellation' | translate }} </span>\n            <div>\n                <button fxFlex class=\"GreenButtton\" mat-raised-button (click)=\"acceptCancellation()\">\n                    <!-- <fa-icon icon=\"{{b.icon}}\" class=\"cssFaIcon\"></fa-icon> -->\n                    <span i18n=\"@@orderStatus.buttonCancel\">\n                        {{ 'orderStatus.buttonAccept' | translate }}\n                    </span>\n                </button>\n                <button fxFlex class=\"RedButtton\" mat-raised-button (click)=\"denyCancellation()\">\n                    <!-- <fa-icon icon=\"{{b.icon}}\" class=\"cssFaIcon\"></fa-icon> -->\n                    <span i18n=\"@@orderStatus.buttonCancel\">\n                        {{ 'orderStatus.buttonDeny' | translate }}\n                    </span>\n                </button>\n            </div>\n        </div>\n        <div class=\"iconOrderType\">\n            <div *ngIf=\"orderStatus.storedOrder.order.orderType=='DELIVERY'\" class=\"deliveryLabelIcon\">\n                <fa-icon icon=\"motorcycle\" class=\"cssFaIcon\"></fa-icon>\n                <span i18n=\"@@orderStatus.todeliver\">\n                    {{ 'orderStatus.todeliver' | translate }}\n                </span>\n\n            </div>\n            <div *ngIf=\"orderStatus.storedOrder.order.orderType!='DELIVERY'\" class=\"takeoutLabelIcon\">\n                <fa-icon icon=\"shopping-bag\" class=\"cssFaIcon\"></fa-icon>\n                <span i18n=\"@@orderStatus.takeaway\">\n                    {{ 'orderStatus.takeaway' | translate }}\n                </span>\n\n            </div>\n            <mat-progress-bar mode=\"indeterminate\" *ngIf=\"orderStatus.storedOrder.processingStatus!=null\">\n            </mat-progress-bar>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { SystemService } from 'src/app/services/system.service';\nimport { OrderStyleDefinition } from 'src/app/shared/order/order-style-definition';\nimport { DtoOrderStatus } from '../../shared/order/dto-order-status';\n\n@Component({\n  selector: 'app-order-status',\n  templateUrl: './order-status.component.html',\n  styleUrls: ['./order-status.component.less']\n})\nexport class OrderStatusComponent implements OnInit {\n  @Input() orderStatus: DtoOrderStatus;\n  @Input() selected: boolean;\n  @Output() changeStatusEvent = new EventEmitter();\n\n  public readonly osd = OrderStyleDefinition.osd;\n  constructor(public systemSvc: SystemService) { }\n\n  ngOnInit(): void {\n  }\n  acceptCancellation() {\n    this.changeStatusEvent.emit({ idStoredOrder: this.orderStatus.storedOrder.id, status: \"acceptCancellation\" });\n  }\n  denyCancellation() {\n    this.changeStatusEvent.emit({ idStoredOrder: this.orderStatus.storedOrder.id, status: \"denyCancellation\" });\n\n  }\n}\n","<div class=\"divContent\" fxFlex fxLayout=\"column\" fxLayoutAlign=\"start stretch\"\n    [ngClass]=\"{'dark':systemSvc.getTheme()=='dark'}\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <button mat-icon-button *ngIf=\"_isHandset\" (click)=\"close()\">\n            <mat-icon>\n                arrow_back\n            </mat-icon>\n        </button>\n        <div class=\"orderTitle\">{{storedOrder.order.customer.name}}</div>\n    </div>\n\n    <div class=\"orderSubTitle\">\n        <span i18n=\"@@orderDetail.orderSubTitle\">{{ 'orderDetail.prderSubtitle' | translate }} #{{storedOrder.order?.displayId}} * {{ 'orderDetail.placedAt' | translate }} 14:01</span>\n        <!-- <span class=\"\">* Localizador do pedido 6454876795</span> -->\n    </div>\n    <div class=\"divButton\" fxLayout=\"row wrap\">\n        <div class=\"labelBox\">\n            <fa-icon icon=\"clock\" class=\"cssFaIcon\"></fa-icon>\n            <span i18n=\"@@orderDetail.labelBox\">{{ 'orderDetail.estimatedDelivery' | translate }}\n                <b>{{storedOrder.order?.delivery?.deliveryDateTime|date:\"HH:mm\"}}</b> </span>\n        </div>\n        <div class=\"firstOrder\">\n            <fa-icon icon=\"plus\" class=\"cssFaIcon\"></fa-icon>\n            <span *ngIf=\"storedOrder.order.customer.ordersCountOnMerchant==1\" i18n=\"@@orderDetail.firstOrder\">{{ 'orderDetail.firstOrder' | translate }}</span>\n            <span *ngIf=\"storedOrder.order.customer.ordersCountOnMerchant>1\" i18n=\"@@orderDetail.numOrders\">\n                {{storedOrder.order.customer.ordersCountOnMerchant}} {{ 'orderDetail.ordersInYourStore' | translate }}</span>\n        </div>\n        <div class=\"divBtn\">\n            <button class=\"colorRed\" mat-raised-button>\n                <fa-icon icon=\"comments\" class=\"cssFaIcon\"></fa-icon>\n                <span i18n=\"@@orderDetail.getintouch\">\n                    {{ 'orderDetail.getintouch' | translate }}\n                </span>\n            </button>\n        </div>\n    </div>\n\n    <div>\n\n    </div>\n\n    <div fxLayout=\"row wrap\" class=\"address\" *ngIf=\"storedOrder.order.orderType =='DELIVERY'\">\n        <div fxFlex=\"20\">\n            <fa-icon icon=\"motorcycle\" class=\"cssFaIcon\"></fa-icon>\n        </div>\n        <div fxFlex>\n            {{storedOrder.order?.delivery?.deliveryAddress?.streetName}},\n            {{storedOrder.order?.delivery?.deliveryAddress?.streetNumber}} -\n            {{storedOrder.order?.delivery?.deliveryAddress?.neighborhood}}\n            {{storedOrder.order?.delivery?.deliveryAddress?.city}} -\n            {{storedOrder.order?.delivery?.deliveryAddress?.state}}\n            <span i18n=\"@@orderDetail.zipcode\">* {{ 'orderDetail.zipcode' | translate }}</span>\n            {{storedOrder.order?.delivery?.deliveryAddress?.postalCode}}\n            {{storedOrder.order.delivery?.deliveryAddress?.complement}}\n            {{storedOrder.order.delivery?.deliveryAddress?.reference}}\n        </div>\n    </div>\n    <div fxLayout=\"row wrap\" class=\"address\" *ngIf=\"storedOrder.order.orderType !='DELIVERY'\">\n        <div fxFlex=\"20\">\n            <fa-icon icon=\"people-carry\" class=\"cssFaIcon\"></fa-icon>\n        </div>\n        <div fxFlex=\"80\" i18n=\"@@orderDetail.takeoutmsg\">\n            {{ 'orderDetail.takeoutmsg' | translate }}\n        </div>\n    </div>\n\n    <div class=\"list\" fxLayout=\"column\">\n        <div class=\"itemHeader\"\n            [ngStyle]=\"{'background-color': osd[storedOrder.status].backgroundColor,'color':osd[storedOrder.status].color}\">\n            <div class=\"\">{{osd[storedOrder.status].statusGroup}}</div>\n            <div class=\"\"> {{getTime()}}</div>\n\n        </div>\n        <div class=\"listItem\" *ngFor=\"let item of storedOrder.order.items\">\n            <div fxFlex=\"10\">\n                {{item.quantity}}x\n            </div>\n            <div fxFlex=\"70\">\n                <div>\n                    <div>{{item.name}}</div>\n                    <div class=\"grey-color\" *ngFor=\"let op of item.options\">\n                        <span class=\"quantity white-60-background-color\">{{op.quantity}}</span> <span> {{op.name}}</span>\n                    </div>\n                </div>\n            </div>\n            <div fxFlex=\"20\">\n                {{(item.quantity * item.unitPrice)|currency:getCurrencySymbol()}}\n            </div>\n        </div>\n        <div class=\"listItem itemDeliveryFee\">\n            <div fxFlex=\"10\">\n                <fa-icon icon=\"motorcycle\" class=\"cssFaIcon\"></fa-icon>\n            </div>\n            <div fxFlex=\"70\" class=\"itemDeliveryFeeText\" i18n=\"@@orderDetail.deliveryfee\">\n                {{ 'orderDetail.deliveryFee' | translate }}\n            </div>\n            <div fxFlex=\"20\">{{storedOrder.order.total.deliveryFee |currency:getCurrencySymbol()}}</div>\n        </div>\n        <div class=\"listItem itemDeliveryFee\">\n            <div fxFlex=\"10\">\n\n            </div>\n            <div fxFlex=\"70\" class=\"ItemTotal\" i18n=\"@@orderDetail.totalordervalue\">\n                {{ 'orderDetail.total' | translate }}\n            </div>\n            <div fxFlex=\"20\">{{storedOrder.order.total.subTotal|currency:getCurrencySymbol()}}</div>\n        </div>\n    </div>\n    <div class=\"divBottom\">\n        <mat-divider></mat-divider>\n        <div fxLayout=\"row wrap\">\n\n            <button>\n                <fa-icon icon=\"print\" class=\"cssFaIcon\"></fa-icon>\n            </button>\n\n            <div fxFlex>\n            </div>\n\n            <div *ngFor=\"let b of osd[storedOrder.status].buttons\">\n                <button fxFlex [ngClass]=\"{'GreenButtton': b.value!='CAN', 'RedButtton' : b.value=='CAN' }\"\n                    mat-raised-button (click)=\"changeStatus(storedOrder.id,b.value)\"\n                    *ngIf=\"(storedOrder.order.orderType !='DELIVERY' &&  b.value!='DSP') || (storedOrder.order.orderType =='DELIVERY' && b.value!='RTP') \"\n                    [disabled]=\"storedOrder.processingStatus\">\n                    <fa-icon icon=\"{{b.icon}}\" class=\"cssFaIcon\"></fa-icon>\n                    <span i18n=\"@@orderDetail.buttonslabel\">\n                        { b.label, select, Cancel {Cancel} Confirm {Confirm} }\n                    </span>\n                </button>\n            </div>\n\n        </div>\n    </div>\n</div>","import { Order } from '../../api/models/order';\nimport { Component, EventEmitter, Inject, Input, LOCALE_ID, OnInit, Output } from '@angular/core';\nimport { OrderService } from 'src/app/api/services';\nimport { OrderStyleDefinition } from 'src/app/shared/order/order-style-definition';\nimport { DtoOrderDetails } from 'src/app/api/models';\nimport { getCurrencySymbol, getLocaleCurrencySymbol } from '@angular/common';\nimport { SystemService } from 'src/app/services/system.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { DtoStoredOrder } from 'src/app/services/integrator/dto-stored-order';\n\n\n@Component({\n  selector: 'app-order-detail',  \n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.scss']\n})\nexport class OrdersDetailComponent implements OnInit {\n  @Input() storedOrder: DtoStoredOrder;\n  @Output() changeStatusEvent = new EventEmitter();\n  @Output() closeEvent = new EventEmitter();\n\n  changing: boolean = false;\n  public readonly osd = OrderStyleDefinition.osd;\n  constructor(private orderSvc: OrderService, public systemSvc: SystemService,\n    public breakpointObserver: BreakpointObserver,\n    @Inject(LOCALE_ID) public locale: string) {\n    this.isHandset$.subscribe(d => {\n      this._isHandset = d;\n    });\n  }\n\n  close() {\n    this.closeEvent.next(true);\n  }\n\n  _isHandset = false;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  ngOnInit() {\n    console.log(\"PIZZA\");\n    console.log(this.storedOrder);\n    var i = this.storedOrder;\n  }\n\n  getCurrencySymbol() {\n    return getLocaleCurrencySymbol(this.locale);\n  }\n\n  changeStatus(idStoredOrder: string, status: string) {\n    var _self = this;\n    _self.changeStatusEvent.emit({ idStoredOrder: idStoredOrder, status: status });\n  }\n\n  getTime() {\n    //return this.timeDiffCalc(new Date(), new Date(this.order.modifiedAt));\n  }\n  timeDiffCalc(dateFuture, dateNow) {\n    let diffInMilliSeconds = Math.abs(dateFuture - dateNow) / 1000;\n\n    // calculate days\n    const days = Math.floor(diffInMilliSeconds / 86400);\n    diffInMilliSeconds -= days * 86400;\n    //console.log('calculated days', days);\n\n    // calculate hours\n    const hours = Math.floor(diffInMilliSeconds / 3600) % 24;\n    diffInMilliSeconds -= hours * 3600;\n    //console.log('calculated hours', hours);\n\n    // calculate minutes\n    const minutes = Math.floor(diffInMilliSeconds / 60) % 60;\n    diffInMilliSeconds -= minutes * 60;\n    //console.log('minutes', minutes);\n\n    let difference = '';\n    if (days > 0) {\n      difference += (days === 1) ? `${days} d, ` : `${days} d, `;\n    }\n\n    if (hours > 0)\n      difference += (hours === 0 || hours === 1) ? `${hours} hr, ` : `${hours} hr, `;\n\n    difference += (minutes === 0 || hours === 1) ? `${minutes} min` : `${minutes} min`;\n\n    return difference;\n  }\n}\n","\n<as-split [direction]=\"_isHandset? 'vertical':'horizontal'\" >\n    <as-split-area [size]=\"_isHandset ? 100 :30\" [visible]=\"(!_isHandset||selectedStoredOrder==null)\" order=\"0\">\n        <div class=\"divList\" fxFill [class.mat-elevation-z1]=\"true\" [ngStyle]=\"{'width':(_isHandset ? '87vw':'')}\" >\n            <mat-progress-bar class=\"bar\" mode=\"determinate\" [value]=\"(integratorSvc.progressToNextPooling|async)\"></mat-progress-bar>\n\n            <mat-tab-group>\n                <mat-tab i18n-label=\"@@orders.now\" label=\"{{ 'orders.now' | translate }}\" fxLayout=\"column\" fxFlex=\"100\" (click)=\"orderTimingSelected='IMMEDIATE'\"></mat-tab>\n                <mat-tab i18n-label=\"@@orders.scheduled\" label=\"{{ 'orders.scheduled' | translate }}\"  (click)=\"orderTimingSelected='SCHEDULED'\"></mat-tab>\n            </mat-tab-group>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                <mat-form-field fxFlex=\"50\" class=\"\" appearance=\"fill\">\n                    <input matInput i18n-placeholder=\"@@orders.search\" placeholder=\"{{ 'orders.search' | translate }}\" (click)=\"mountList()\">\n                </mat-form-field>\n                <mat-form-field fxFlex=\"50\" appearance=\"fill\">\n                    <mat-label i18n=\"@@orders.filters\">{{ 'orders.filters' | translate }}</mat-label>\n                    <mat-select [formControl]=\"ComboFilters\" multiple>\n                        <mat-optgroup *ngFor=\"let filter of filters\" [label]=\"filter.tipo\">\n                            <mat-option *ngFor=\"let f of filter.lst\" [value]=\"f.value\">{{('orders.filtersValues.'+f.label)|translate}}</mat-option>\n                        </mat-optgroup>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div *ngFor=\"let osg of listOrderStatusGroup\" [ngClass]=\"{'dark':systemSvc.getTheme()=='dark'}\">\n                <div class=\"statusBar\" fxLayout=\"row\" *ngIf=\"osg.dtoOrderStatus.length>0\">\n                    <div class=\"statusText\" fxFlex=\"90\" i18n=\"@@orders.statusText\">\n                        {{ 'orders.statusTextValues.'+osd[osg.status].statusGroup|translate}}\n                    </div>\n                    <div class=\"statusQtd\" fxFlex=\"10\"> {{osg.qtd}}</div>\n    \n                </div>\n                <div class=\"divOrderStatus\" *ngFor=\"let o of osg.dtoOrderStatus\" (click)=\"selectOrder(o)\"\n                    [ngClass]=\"{'selectedOrder': selectedOrderStatus?.storedOrder.order.id==o.storedOrder.order.id, '' : selectedOrderStatus?.storedOrder?.order.id!=o.storedOrder.order.id }\">\n                    <app-order-status [orderStatus]=\"o\" [selected]=\"selectedOrderStatus?.storedOrder?.order.id==o.storedOrder.order.id\" (changeStatusEvent)=\"changeStatus($event)\"></app-order-status>\n                </div>\n            </div>\n            <div>\n            </div>\n        </div>\n    </as-split-area>\n    <as-split-area [size]=\"_isHandset ? 100 : 70\" order=\"1\" [visible]=\"(!_isHandset||selectedStoredOrder!=null)\">\n        <div [@slideInOutAnimation] *ngIf=\"selectedStoredOrder!=null\" fxFill [class.mat-elevation-z8]=\"selectedStoredOrder!=null\">\n                <app-order-detail (closeEvent)=\"selectOrder(null)\" [storedOrder]=\"selectedStoredOrder\" fxFill (changeStatusEvent)=\"changeStatus($event)\"></app-order-detail>\n        </div>\n    </as-split-area>\n</as-split>\n","import { element } from 'protractor';\nimport { DtoStoredOrder } from '../../services/integrator/dto-stored-order';\nimport { DtoOrderDetails } from './../../api/models/dto-order-details';\nimport { DtoOrderStatus } from 'src/app/shared/order/dto-order-status';\nimport { DtoOrderStatusGroup } from '../../shared/order/dto-order-status-group';\nimport { DtoEvent } from './../../api/models/dto-event';\nimport { FormControl, NG_ASYNC_VALIDATORS } from '@angular/forms';\nimport { OrderService } from 'src/app/api/services';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { OrderStyleDefinition } from 'src/app/shared/order/order-style-definition';\nimport { IntegratorService } from 'src/app/services/integrator/integrator.service';\nimport * as Enumerable from 'linq';\nimport { animSlideInOutAnimation } from 'src/app/shared/animations';\nimport { SystemService } from 'src/app/services/system.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss'],\n  animations: [\n    animSlideInOutAnimation\n  ]\n})\nexport class OrdersComponent implements OnInit, OnDestroy {\n\n  public static readonly IMMEDIATE: string = \"IMMEDIATE\";\n  public static readonly SCHEDULED: string = \"SCHEDULED\";\n  public readonly osd = OrderStyleDefinition.osd;\n  ComboFilters = new FormControl();\n  filters: any = [{\n    tipo: \"Order status\",\n    lst: [{ label: \"Pending\", value: \"PLC\" },\n    { label: \"On Delivery\", value: \"DSP\" }\n    ]\n  }];\n\n  selectedOrderStatus: DtoOrderStatus = null;\n  selectedStoredOrder: DtoStoredOrder = null;\n  listOrderStatusGroup: DtoOrderStatusGroup[] = [];\n  orderTimingSelected: string = OrdersComponent.IMMEDIATE;\n  first: boolean = false;\n  starting: boolean = false;\n  modalCancelled: boolean = false;\n  currentId: string = \"\";\n  constructor(private orderSvc: OrderService, public integratorSvc: IntegratorService, public systemSvc: SystemService,\n    public route: ActivatedRoute,\n    public router: Router,\n    public breakpointObserver: BreakpointObserver) {\n\n    this.isHandset$.subscribe(d => {\n      this._isHandset = d;\n    });\n\n    this.route.params.subscribe(\n      (params) => {\n        if (params.id) {\n          this.currentId = params.id;\n          this.selectOrderById(params.id);\n        } else {\n          this.selectOrder(null);\n        }\n      }\n    )\n  }\n\n\n  _isHandset = false;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n\n  ngOnDestroy(): void {\n    this.integratorSvc.stopPooling();\n  }\n\n  ngOnInit(){\n    if (this.integratorSvc.initialized){\n      this.initialize();\n    } else {\n      this.integratorSvc.onInitialized.subscribe(d=>{\n        if (d){\n          this.initialize();\n        }\n      })\n    }\n  }\n\n  initialize() {\n    try {\n      var _self = this;\n      this.starting = true;\n      this.mountList(this.integratorSvc.listOrder);\n      if (this.starting) {\n        if (this.listOrderStatusGroup.length > 0 && this.listOrderStatusGroup[0].dtoOrderStatus.length > 0) {\n          this.starting = false;\n          setTimeout(() => {\n            if (this.currentId) {\n              this.selectOrderById(this.currentId);\n            } else {\n              this.selectOrder(this.listOrderStatusGroup[0].dtoOrderStatus[0]);\n            }\n\n\n          }, 100);\n        }\n      }\n      this.integratorSvc.onAddedOrder.subscribe(\n        (sO) => {\n          var group = Enumerable.from(this.listOrderStatusGroup).where(x => x.status == sO.status).firstOrDefault();\n          if (group == null) {\n            var group = <DtoOrderStatusGroup>{\n              qtd: 1,\n              status: sO.status,\n              dtoOrderStatus: []\n            };\n            this.listOrderStatusGroup.push(group);\n          }\n          group.dtoOrderStatus.push(<DtoOrderStatus>{\n            storedOrder: sO,\n            alert: null\n          });\n        },\n        (error) => {\n\n        });\n      this.integratorSvc.onUpdatedOrder.subscribe(\n        (sO) => {\n\n          var OldGroup = Enumerable.from(this.listOrderStatusGroup).where(\n            x => Enumerable.from(x.dtoOrderStatus).where(y => y.storedOrder.order.id == sO.order.id).any()\n          ).select(s => s).firstOrDefault();\n          if (OldGroup != null) {\n            var os = Enumerable.from(OldGroup.dtoOrderStatus).where(x => x.storedOrder.order.id == sO.order.id).firstOrDefault();\n            OldGroup.dtoOrderStatus.splice(OldGroup.dtoOrderStatus.indexOf(os), 1);\n            if (OldGroup.dtoOrderStatus.length == 0) {\n              this.listOrderStatusGroup.splice(this.listOrderStatusGroup.indexOf(OldGroup), 1);\n            }\n          }\n\n          var newGroup = Enumerable.from(this.listOrderStatusGroup).where(x => x.status == sO.status).firstOrDefault();\n\n          if (newGroup == null) {\n            newGroup = <DtoOrderStatusGroup>{\n              qtd: 1,\n              status: sO.status,\n              dtoOrderStatus: [<DtoOrderStatus>{\n                storedOrder: sO,\n                alert: null\n              }]\n            };\n            this.listOrderStatusGroup.push(newGroup);\n          } else {\n            var os = Enumerable.from(newGroup.dtoOrderStatus).where(x => x.storedOrder.order.id == sO.order.id).firstOrDefault();\n            if (os == null) {\n              newGroup.dtoOrderStatus.push(<DtoOrderStatus>{ storedOrder: sO });\n            } else {\n              newGroup.dtoOrderStatus[newGroup.dtoOrderStatus.indexOf(os)] = <DtoOrderStatus>{ storedOrder: sO };\n            }\n          }\n        },\n        (error) => {\n\n        });\n      this.integratorSvc.onDeletedOrder.subscribe(\n        (sO) => {\n          var OldGroup = Enumerable.from(this.listOrderStatusGroup).where(\n            x => Enumerable.from(x.dtoOrderStatus).where(y => y.storedOrder.order.id == sO.order.id).any()\n          ).select(s => s).firstOrDefault();\n          if (OldGroup != null) {\n            var element = Enumerable.from(OldGroup.dtoOrderStatus).where(x => x.storedOrder.order.id == sO.order.id).firstOrDefault();\n            OldGroup.dtoOrderStatus.splice(OldGroup.dtoOrderStatus.indexOf(element), 1);\n            if (OldGroup.dtoOrderStatus.length == 0) {\n              this.listOrderStatusGroup.splice(this.listOrderStatusGroup.indexOf(OldGroup), 1);\n            }\n          }\n        },\n        (error) => {\n\n        });\n\n    } catch (error) {\n    }\n  }\n\n  selectOrderById(currentId: string) {\n    var storedOrder = Enumerable.from(this.listOrderStatusGroup)\n      .select(\n        losgp => Enumerable.from(losgp.dtoOrderStatus)\n          .where(os => os.storedOrder.id == currentId)\n          .select(p => p).defaultIfEmpty(null).firstOrDefault()\n      )\n      .where(p => p != null)\n      .defaultIfEmpty(null)\n      .firstOrDefault();\n\n    if (storedOrder?.storedOrder && this.selectedStoredOrder != storedOrder.storedOrder) {\n      this.selectOrder(storedOrder)\n    }\n  }\n\n  async changeStatus(osc) {\n    try {\n      await this.integratorSvc.changeStatus(osc.idStoredOrder, osc.status);\n      this.selectOrder(null);\n    } catch (error) {\n      console.dir(error);\n    }\n  }\n  selectOrder(os: DtoOrderStatus) {\n    if (os != null && this.selectedStoredOrder != os.storedOrder) {\n      this.selectedOrderStatus = null;\n      this.selectedStoredOrder = null;\n      setTimeout(() => {\n        this.selectedOrderStatus = os;\n        this.selectedStoredOrder = os.storedOrder;\n        this.router.navigateByUrl(\"/orders/\" + os.storedOrder.id);\n      }, 100);\n\n    } else {\n      this.selectedStoredOrder = null;\n      this.selectedOrderStatus = null;\n      this.router.navigateByUrl(\"/orders/\");\n    }\n\n  }\n  mountList(storedOrders: DtoStoredOrder[] | undefined = undefined) {\n    var lstIndex = {};\n\n    if (storedOrders == undefined) {\n      storedOrders = this.integratorSvc.listOrder;\n    }\n    var lstDtoOrderStatusGroup: DtoOrderStatusGroup[] = [\n      <DtoOrderStatusGroup>{ qtd: 0, status: \"OWO\", dtoOrderStatus: [] },\n      <DtoOrderStatusGroup>{ qtd: 0, status: \"PLC\", dtoOrderStatus: [] },\n      <DtoOrderStatusGroup>{ qtd: 0, status: \"DSP\", dtoOrderStatus: [] },\n      <DtoOrderStatusGroup>{ qtd: 0, status: \"RTP\", dtoOrderStatus: [] },\n      <DtoOrderStatusGroup>{ qtd: 0, status: \"CAN\", dtoOrderStatus: [] },\n      <DtoOrderStatusGroup>{ qtd: 0, status: \"CON\", dtoOrderStatus: [] },\n    ];\n    for (let i = 0; i < lstDtoOrderStatusGroup.length; i++) {\n      lstIndex[lstDtoOrderStatusGroup[i].status] = i;\n    }\n\n    for (let i = 0; i < storedOrders.length; i++) {\n      const element = storedOrders[i];\n      if (lstIndex[storedOrders[i].status] != null) {\n        lstDtoOrderStatusGroup[lstIndex[storedOrders[i].status]].qtd++;\n        lstDtoOrderStatusGroup[lstIndex[storedOrders[i].status]].dtoOrderStatus.push(<DtoOrderStatus>{ storedOrder: storedOrders[i] });\n      } else {\n        var dtoOg = <DtoOrderStatusGroup>{\n          qtd: 1,\n          status: storedOrders[i].status,\n          dtoOrderStatus: [<DtoOrderStatus>{ storedOrder: storedOrders[i] }]\n        };\n        lstIndex[storedOrders[i].status] = lstDtoOrderStatusGroup.length;\n        lstDtoOrderStatusGroup.push(dtoOg);\n      }\n    }\n    this.listOrderStatusGroup = lstDtoOrderStatusGroup;\n  }\n  addGroup() {\n\n  }\n  checkCancelleds() {\n\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.component.html',\n  styleUrls: ['./splash.component.scss']\n})\nexport class SplashComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class='page' fxFill fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <h1 i18n=\"@@splash.title\" >\n        {{ 'splash.title' | translate }}\n    </h1>\n    <mat-spinner></mat-spinner>\n</div>\n","\n\nexport class SSWeb3 {\n\n    public static checkChainNetwork(onChange=null, onNotChange=null,onError=null) {\n      if (onError==null) onError=(error)=>{\n        console.log(error);\n      }\n\n      if (onChange==null) onChange=()=>{\n        console.log('change');\n      }\n\n      if (onNotChange==null) onNotChange=()=>{\n        console.log('onNotChange');\n      }\n\n        if (window[\"ethereum\"].chainId!='0x89'){\n          var netparams = [{\n            chainId: '0x89',\n            chainName: 'Polygon Mainnet',\n            nativeCurrency: {\n                name: 'MATIC',\n                symbol: 'MATIC',\n                decimals: 18\n            },\n            rpcUrls: ['https://polygon-rpc.com/'],\n            blockExplorerUrls: ['https://polygonscan.com/']\n        }];\n    \n        window['web3'].currentProvider.request({ method: 'wallet_addEthereumChain', params:netparams })\n                        .then((d) => {\n                          setTimeout(() => {\n                            if ((window[\"ethereum\"].chainId=='0x89')){\n                              onChange();\n                            } else {\n                              onNotChange();\n                            }\n                        }, 1000);\n                        })\n                        .catch((error) => onError(error));\n        }\n      }\n}","<div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\" style=\"padding-top: 100px;\">\n\n    <div [class.mat-elevation-z10]=\"true\" class=\"mat-white-bg loginform\" fxLayout=\"column\">\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"loginboxtop\">\n            <div class=\"logo\">\n                <img class=\"logo-icon\" src=\"assets/svgs/logo.svg\" style=\"width:150px;\">\n            </div>\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" style=\"padding: 10px\" class=\"titledeg\" *ngIf=\"!systemSvc.isStaticAppOnly\">\n            <span style=\"font-size: 24px\" i18n=\"@@auth.title\" >\n                {{ 'auth.title' | translate }}\n            </span>\n        </div>\n        <div fxLayout=\"column\" class=\"loginboxfields\">\n            <mat-form-field appearance=\"outline\" [ngStyle]=\"{display: systemSvc.isStaticAppOnly ? 'none':'block'}\">\n                <mat-label i18n=\"@@auth.username\">{{ 'auth.username' | translate }}</mat-label>\n                <input matInput [(ngModel)]=\"_usr\" (ngModelChange)=\"_msg=''\">\n                <mat-icon matSuffix>perm_identity</mat-icon>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" [ngStyle]=\"{display: systemSvc.isStaticAppOnly ? 'none':'block'}\">\n                <mat-label i18n=\"@@auth.password\">{{ 'auth.pasword' | translate }}</mat-label>\n                <input matInput type=\"password\" [(ngModel)]=\"_pwd\" (ngModelChange)=\"_msg=''\"\n                    (keydown)=\"keydownListener($event)\">\n                <mat-icon matSuffix>vpn_key</mat-icon>\n            </mat-form-field>\n\n            <span class=\"alertlogin\">\n                {{_msg}}\n            </span>\n    \n            <button mat-raised-button [color]=\"'primary'\" (click)=\"doLogin()\" *ngIf=\"!systemSvc.isStaticAppOnly\" i18n=\"@@auth.enter\">\n                {{ 'auth.enter' | translate }}\n            </button>\n\n            <button mat-raised-button [color]=\"'primary'\" (click)=\"doLoginWithWallet()\" *ngIf=\"systemSvc.isStaticAppOnly\" i18n=\"@@auth.loginwithwallet\">\n                {{ 'auth.loginwithwallet' | translate }}\n            </button>\n\n            <div class=\"ordiv\" fxLayout=\"column\" fxLayoutAlign=\"center center\" i18n=\"@@auth.or\">\n                {{ 'auth.or' | translate }}\n            </div>\n            <div class=\"ordiv\" fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"systemSvc.isStaticAppOnly\" i18n=\"@@auth.ordownload_server\">\n                <small>\n                    {{ 'auth.ordownload_server' | translate }}\n                </small>\n                \n            </div>\n            <div class=\"ordiv\" fxLayout=\"column\" fxLayoutAlign=\"center center\" *ngIf=\"systemSvc.version\" >\n                <small>\n                    <b>Ver.:</b>{{systemSvc.version}}\n                </small>\n                \n            </div>\n\n            <button mat-raised-button *ngIf=\"!systemSvc.isStaticAppOnly\" i18n=\"@@auth.create\">\n                {{ 'auth.create' | translate }}\n            </button>\n\n        </div>\n\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SystemService } from 'src/app/services/system.service';\nimport { AuthenticationService } from 'src/app/api/services';\nimport { DtoOauthRequest } from 'src/app/api/models';\nimport { CryptoService } from 'src/app/services/crypto.service';\nimport { downloadUtil } from 'src/app/shared/download-util';\nimport { SSOrbitdb } from 'src/app/static-stack/orbitdb';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from 'src/app/components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { SSWeb3 } from 'src/app/static-stack/web3';\nimport { AppComponent } from 'src/app/app.component';\n\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.less']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor(\n    //Injections\n    public _http: HttpClient,\n    public _router: Router,\n    public dialog: MatDialog,\n    public systemSvc: SystemService,\n    public authSvc: AuthenticationService,\n    public cryptoSvc: CryptoService\n  ) { }\n\n  ngOnInit(): void {\n    this.systemSvc.OauthToken = null;\n    this.systemSvc.isAuthenticated = false;\n    localStorage.removeItem(\"oauthrequest\");\n\n    if (this.systemSvc.isStaticAppOnly) {\n      this.checkMetamask();\n    }\n  }\n\n  checkMetamask() {\n    setTimeout(async () => {\n      if (!(window[\"web3\"] && window[\"web3\"][\"__isMetaMaskShim__\"])) {\n        let translate = AppComponent.Instance.translate;\n        let title = await translate.get(\"auth.nometamasktitle\").toPromise();\n        let msg = await translate.get(\"auth.nometamaskmsg\").toPromise();\n        var dialogData: ConfirmDialogModel = {\n          title: title,\n          message: msg,\n          showCancel: false\n        }\n        var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n          maxWidth: \"80vw\",\n          data: dialogData\n        });\n        dialogRef.afterClosed().subscribe(\n          (ok) => {\n            if (ok) {\n              window.open(\"https://metamask.io/\", \"_blank\");\n              window.location.reload();\n            }\n          }\n        )\n      } else {\n        SSWeb3.checkChainNetwork();\n      }\n    }, 1000);\n  }\n\n\n\n  _usr: string = \"\";\n  _pwd: string = \"\";\n  _msg: string = \"\";\n\n  public keydownListener(evt: any) {\n    if (evt.code == \"Enter\") {\n      this.doLogin();\n    }\n  }\n\n  public async doLoginWithWallet() {\n    var identity = await SSOrbitdb.GetEthWalletIdentity();\n    this._router.navigate(['/orders']);\n    setTimeout(() => {\n      window.location.reload();\n    }, 100);\n    console.log(identity);\n  }\n\n  public doLogin() {\n    this.authSvc.postApiAuthenticationOauthToken({\n      clientId: this._usr,\n      clientSecret: this._pwd\n    }).subscribe(\n      (d) => {\n        this.systemSvc.OauthToken = d;\n        this.systemSvc.isAuthenticated = true;\n        if (this.systemSvc.selectedMerchantGroup == null) {\n          this._router.navigate(['/choose-merchant-group']);\n        } else {\n          this._router.navigate(['/orders']);\n        }\n\n        localStorage.setItem(\"oauthresponse\", JSON.stringify(d));\n      },\n      (e) => {\n        console.log(e);\n      }\n    )\n  }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MerchantGroupService } from 'src/app/api/services';\nimport { DtoDelinetEvent } from 'src/app/services/integrator/adapters/order/delinet/dto-delinet-event';\nimport { SystemService } from 'src/app/services/system.service';\nimport { SSIpfs } from 'src/app/static-stack/ipfs';\nimport { SSOrbitdb } from 'src/app/static-stack/orbitdb';\nimport { SSUuid } from 'src/app/static-stack/uuid';\nimport { ethers } from 'ethers';\nimport { Buffer } from 'buffer'\nimport * as IDBExportImport from \"indexeddb-export-import\";\n\n\n@Component({\n  selector: 'app-debug',\n  templateUrl: './debug.component.html',\n  styleUrls: ['./debug.component.less']\n})\nexport class DebugComponent implements OnInit {\n\n  public txttest: string = \"{\\\"id\\\":\\\"123\\\"}\";\n  public delinetchannel: string = \"delinet1\";\n  public response: string = \"\";\n  constructor(\n    public merchantGroupSvc: MerchantGroupService,\n    public systemSvc: SystemService,\n    public http: HttpClient\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  logChannel;\n  async createDelinetChannel(channelName: string = \"delinet\") {\n    var _ipfsNode = await SSIpfs.getNode();\n    var scriptElm = await SSOrbitdb.GetOrbitDbInstance(_ipfsNode);\n    var newLogChannel: any = await SSOrbitdb.GetLogInstancePool(channelName);\n    this.systemSvc.selectedMerchant.delinetEndpoint = newLogChannel.id;\n    this.logChannel = newLogChannel;\n    console.log(newLogChannel);\n  }\n\n  async testPublishPackage() {\n    const ipfsScript = (await SSIpfs.getIpfsHttpScriptInstance());\n    const Ipfs = window[\"IpfsHttpClient\"];\n\n    const pair = ethers.Wallet.createRandom();\n    const sig = await pair.signMessage(pair.address);\n    const authHeaderRaw = `eth-${pair.address}:${sig}`;\n    const authHeader = Buffer.from(authHeaderRaw).toString('base64');\n    const ipfsW3GW = 'https://crustipfs.xyz';\n\n    const ipfs = Ipfs.create({\n      url: `${ipfsW3GW}/api/v0`,\n      headers: {\n        authorization: `Basic ${authHeader}`\n      }\n    });\n\n    const urlPrefix = \"https://crustwebsites.net/ipfs/QmTGk8VymrmEKVdbwqGndQJvVaxUhX1GBxyc4F3LoU4bN6\";\n    const files = [\n      {\n        path: '/data/cbdeeabe-f931-11eb-b388-000d3a8abda5.json',\n        content: await (await fetch(urlPrefix + \"/cbdeeabe-f931-11eb-b388-000d3a8abda5.json\", { mode: \"cors\", method: \"get\" })).text()\n      },\n      {\n        path: '/data/product-list.json',\n        content: await (await fetch(urlPrefix + \"/product-list.json\", { mode: \"cors\", method: \"get\" })).text()\n      },\n      {\n        path: '/data/product/6f509e78-c5ba-4c3b-8b4f-bd4bca89b106.json',\n        content: await (await fetch(urlPrefix + \"/product/6f509e78-c5ba-4c3b-8b4f-bd4bca89b106.json\", { mode: \"cors\", method: \"get\" })).text()\n      },\n      {\n        path: '/data/product/9ef17d07-04ab-4e31-ba68-f7003bf68d12.json',\n        content: await (await fetch(urlPrefix + \"/product/9ef17d07-04ab-4e31-ba68-f7003bf68d12.json\", { mode: \"cors\", method: \"get\" })).text()\n      }\n\n    ]\n\n    var lastResult = null;\n    for await (const result of ipfs.addAll(files)) {\n      console.log(result)\n      lastResult = result;\n    };\n    console.log(\"PUBLISHED HASH: \" + lastResult.cid.toString());\n    alert(\"PUBLISHED HASH: \" + lastResult.cid.toString())\n  }\n\n  async sendDelinetEvent() {\n    try {\n      var hash = await this.logChannel.add(JSON.parse(this.txttest));\n      console.log(hash);\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  testGetList() {\n    this.merchantGroupSvc.getApiMerchantGroup({}).subscribe(\n      (d) => {\n        console.log(d);\n        this.response = JSON.stringify(d);\n      },\n      (e) => {\n        console.log(e);\n      }\n    )\n  }\n\n  exportToJsonString(idbDatabase, cb) {\n    const exportObject:any= {};\n    const objectStoreNamesSet = new Set(idbDatabase.objectStoreNames);\n    const size = objectStoreNamesSet.size;\n    if (size === 0) {\n      cb(null, JSON.stringify(exportObject));\n    } else {\n      const objectStoreNames = Array.from(objectStoreNamesSet);\n      const transaction = idbDatabase.transaction(\n          objectStoreNames,\n          'readonly'\n      );\n      transaction.onerror = (event) => cb(event, null);\n  \n      objectStoreNames.forEach((storeName:any) => {\n        const allObjects = [];\n        transaction.objectStore(storeName).openCursor().onsuccess = (event) => {\n          const cursor = event.target.result;\n          if (cursor) {\n            allObjects.push(cursor.value);\n            cursor.continue();\n          } else {\n            exportObject[storeName] = allObjects;\n            if (\n              objectStoreNames.length ===\n              Object.keys(exportObject).length\n            ) {\n              cb(null, JSON.stringify(exportObject));\n            }\n          }\n        };\n      });\n    }\n  }\n\n  async testBackup() {\n    let dbs = await indexedDB.databases();\n    for (let index = 0; index < dbs.length; index++) {\n      const db = dbs[index];\n      if (db.name.indexOf(\"nochunk\") <0) {\n        console.log(db);\n        let idbReq = indexedDB.open(db.name, db.version);\n        idbReq.onsuccess = (evt) => {\n          let idbDatabase = idbReq.result;\n          console.log(idbDatabase);\n          this.exportToJsonString(idbDatabase, function (err, jsonString) {\n            if (err) {\n              console.error(err);\n            } else {\n              console.log('Exported as JSON: ' + jsonString);\n              // IDBExportImport.clearDatabase(idbDatabase, function (err) {\n              //   if (!err) { // cleared data successfully\n              //     IDBExportImport.importFromJsonString(idbDatabase, jsonString, function (err) {\n              //       if (!err) {\n              //         console.log('Imported data successfully');\n              //       }\n              //     });\n              //   }\n              // });\n            }\n          });\n\n        }\n      }\n\n    };\n\n  }\n\n\n  async testGetOne() {\n\n    this.merchantGroupSvc.getApiMerchantGroupId(\"cbdeeabe-f931-11eb-b388-000d3a8abda5\").subscribe(\n      (d) => {\n        console.log(d);\n        this.response = JSON.stringify(d);\n      },\n      (e) => {\n        console.log(e);\n      }\n    )\n  }\n\n  async deleteTest() {\n    this.merchantGroupSvc.deleteApiMerchantGroupId(\"cbdeeabe-f931-11eb-b388-000d3a8abda5\").subscribe(\n      (d) => {\n        console.log(d);\n        this.response = JSON.stringify(d);\n      },\n      (e) => {\n        console.log(e);\n      }\n    )\n  }\n\n  capFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  generateName() {\n    var name1 = [\"abandoned\", \"able\", \"absolute\", \"adorable\", \"adventurous\", \"academic\", \"acceptable\", \"acclaimed\", \"accomplished\", \"accurate\", \"aching\", \"acidic\", \"acrobatic\", \"active\", \"actual\", \"adept\", \"admirable\", \"admired\", \"adolescent\", \"adorable\", \"adored\", \"advanced\", \"afraid\", \"affectionate\", \"aged\", \"aggravating\", \"aggressive\", \"agile\", \"agitated\", \"agonizing\", \"agreeable\", \"ajar\", \"alarmed\", \"alarming\", \"alert\", \"alienated\", \"alive\", \"all\", \"altruistic\", \"amazing\", \"ambitious\", \"ample\", \"amused\", \"amusing\", \"anchored\", \"ancient\", \"angelic\", \"angry\", \"anguished\", \"animated\", \"annual\", \"another\", \"antique\", \"anxious\", \"any\", \"apprehensive\", \"appropriate\", \"apt\", \"arctic\", \"arid\", \"aromatic\", \"artistic\", \"ashamed\", \"assured\", \"astonishing\", \"athletic\", \"attached\", \"attentive\", \"attractive\", \"austere\", \"authentic\", \"authorized\", \"automatic\", \"avaricious\", \"average\", \"aware\", \"awesome\", \"awful\", \"awkward\", \"babyish\", \"bad\", \"back\", \"baggy\", \"bare\", \"barren\", \"basic\", \"beautiful\", \"belated\", \"beloved\", \"beneficial\", \"better\", \"best\", \"bewitched\", \"big\", \"big-hearted\", \"biodegradable\", \"bite-sized\", \"bitter\", \"black\", \"black-and-white\", \"bland\", \"blank\", \"blaring\", \"bleak\", \"blind\", \"blissful\", \"blond\", \"blue\", \"blushing\", \"bogus\", \"boiling\", \"bold\", \"bony\", \"boring\", \"bossy\", \"both\", \"bouncy\", \"bountiful\", \"bowed\", \"brave\", \"breakable\", \"brief\", \"bright\", \"brilliant\", \"brisk\", \"broken\", \"bronze\", \"brown\", \"bruised\", \"bubbly\", \"bulky\", \"bumpy\", \"buoyant\", \"burdensome\", \"burly\", \"bustling\", \"busy\", \"buttery\", \"buzzing\", \"calculating\", \"calm\", \"candid\", \"canine\", \"capital\", \"carefree\", \"careful\", \"careless\", \"caring\", \"cautious\", \"cavernous\", \"celebrated\", \"charming\", \"cheap\", \"cheerful\", \"cheery\", \"chief\", \"chilly\", \"chubby\", \"circular\", \"classic\", \"clean\", \"clear\", \"clear-cut\", \"clever\", \"close\", \"closed\", \"cloudy\", \"clueless\", \"clumsy\", \"cluttered\", \"coarse\", \"cold\", \"colorful\", \"colorless\", \"colossal\", \"comfortable\", \"common\", \"compassionate\", \"competent\", \"complete\", \"complex\", \"complicated\", \"composed\", \"concerned\", \"concrete\", \"confused\", \"conscious\", \"considerate\", \"constant\", \"content\", \"conventional\", \"cooked\", \"cool\", \"cooperative\", \"coordinated\", \"corny\", \"corrupt\", \"costly\", \"courageous\", \"courteous\", \"crafty\", \"crazy\", \"creamy\", \"creative\", \"creepy\", \"criminal\", \"crisp\", \"critical\", \"crooked\", \"crowded\", \"cruel\", \"crushing\", \"cuddly\", \"cultivated\", \"cultured\", \"cumbersome\", \"curly\", \"curvy\", \"cute\", \"cylindrical\", \"damaged\", \"damp\", \"dangerous\", \"dapper\", \"daring\", \"darling\", \"dark\", \"dazzling\", \"dead\", \"deadly\", \"deafening\", \"dear\", \"dearest\", \"decent\", \"decimal\", \"decisive\", \"deep\", \"defenseless\", \"defensive\", \"defiant\", \"deficient\", \"definite\", \"definitive\", \"delayed\", \"delectable\", \"delicious\", \"delightful\", \"delirious\", \"demanding\", \"dense\", \"dental\", \"dependable\", \"dependent\", \"descriptive\", \"deserted\", \"detailed\", \"determined\", \"devoted\", \"different\", \"difficult\", \"digital\", \"diligent\", \"dim\", \"dimpled\", \"dimwitted\", \"direct\", \"disastrous\", \"discrete\", \"disfigured\", \"disgusting\", \"disloyal\", \"dismal\", \"distant\", \"downright\", \"dreary\", \"dirty\", \"disguised\", \"dishonest\", \"dismal\", \"distant\", \"distinct\", \"distorted\", \"dizzy\", \"dopey\", \"doting\", \"double\", \"downright\", \"drab\", \"drafty\", \"dramatic\", \"dreary\", \"droopy\", \"dry\", \"dual\", \"dull\", \"dutiful\", \"each\", \"eager\", \"earnest\", \"early\", \"easy\", \"easy-going\", \"ecstatic\", \"edible\", \"educated\", \"elaborate\", \"elastic\", \"elated\", \"elderly\", \"electric\", \"elegant\", \"elementary\", \"elliptical\", \"embarrassed\", \"embellished\", \"eminent\", \"emotional\", \"empty\", \"enchanted\", \"enchanting\", \"energetic\", \"enlightened\", \"enormous\", \"enraged\", \"entire\", \"envious\", \"equal\", \"equatorial\", \"essential\", \"esteemed\", \"ethical\", \"euphoric\", \"even\", \"evergreen\", \"everlasting\", \"every\", \"evil\", \"exalted\", \"excellent\", \"exemplary\", \"exhausted\", \"excitable\", \"excited\", \"exciting\", \"exotic\", \"expensive\", \"experienced\", \"expert\", \"extraneous\", \"extroverted\", \"extra-large\", \"extra-small\", \"fabulous\", \"failing\", \"faint\", \"fair\", \"faithful\", \"fake\", \"false\", \"familiar\", \"famous\", \"fancy\", \"fantastic\", \"far\", \"faraway\", \"far-flung\", \"far-off\", \"fast\", \"fat\", \"fatal\", \"fatherly\", \"favorable\", \"favorite\", \"fearful\", \"fearless\", \"feisty\", \"feline\", \"female\", \"feminine\", \"few\", \"fickle\", \"filthy\", \"fine\", \"finished\", \"firm\", \"first\", \"firsthand\", \"fitting\", \"fixed\", \"flaky\", \"flamboyant\", \"flashy\", \"flat\", \"flawed\", \"flawless\", \"flickering\", \"flimsy\", \"flippant\", \"flowery\", \"fluffy\", \"fluid\", \"flustered\", \"focused\", \"fond\", \"foolhardy\", \"foolish\", \"forceful\", \"forked\", \"formal\", \"forsaken\", \"forthright\", \"fortunate\", \"fragrant\", \"frail\", \"frank\", \"frayed\", \"free\", \"French\", \"fresh\", \"frequent\", \"friendly\", \"frightened\", \"frightening\", \"frigid\", \"frilly\", \"frizzy\", \"frivolous\", \"front\", \"frosty\", \"frozen\", \"frugal\", \"fruitful\", \"full\", \"fumbling\", \"functional\", \"funny\", \"fussy\", \"fuzzy\", \"gargantuan\", \"gaseous\", \"general\", \"generous\", \"gentle\", \"genuine\", \"giant\", \"giddy\", \"gigantic\", \"gifted\", \"giving\", \"glamorous\", \"glaring\", \"glass\", \"gleaming\", \"gleeful\", \"glistening\", \"glittering\", \"gloomy\", \"glorious\", \"glossy\", \"glum\", \"golden\", \"good\", \"good-natured\", \"gorgeous\", \"graceful\", \"gracious\", \"grand\", \"grandiose\", \"granular\", \"grateful\", \"grave\", \"gray\", \"great\", \"greedy\", \"green\", \"gregarious\", \"grim\", \"grimy\", \"gripping\", \"grizzled\", \"gross\", \"grotesque\", \"grouchy\", \"grounded\", \"growing\", \"growling\", \"grown\", \"grubby\", \"gruesome\", \"grumpy\", \"guilty\", \"gullible\", \"gummy\", \"hairy\", \"half\", \"handmade\", \"handsome\", \"handy\", \"happy\", \"happy-go-lucky\", \"hard\", \"hard-to-find\", \"harmful\", \"harmless\", \"harmonious\", \"harsh\", \"hasty\", \"hateful\", \"haunting\", \"healthy\", \"heartfelt\", \"hearty\", \"heavenly\", \"heavy\", \"hefty\", \"helpful\", \"helpless\", \"hidden\", \"hideous\", \"high\", \"high-level\", \"hilarious\", \"hoarse\", \"hollow\", \"homely\", \"honest\", \"honorable\", \"honored\", \"hopeful\", \"horrible\", \"hospitable\", \"hot\", \"huge\", \"humble\", \"humiliating\", \"humming\", \"humongous\", \"hungry\", \"hurtful\", \"husky\", \"icky\", \"icy\", \"ideal\", \"idealistic\", \"identical\", \"idle\", \"idiotic\", \"idolized\", \"ignorant\", \"ill\", \"illegal\", \"ill-fated\", \"ill-informed\", \"illiterate\", \"illustrious\", \"imaginary\", \"imaginative\", \"immaculate\", \"immaterial\", \"immediate\", \"immense\", \"impassioned\", \"impeccable\", \"impartial\", \"imperfect\", \"imperturbable\", \"impish\", \"impolite\", \"important\", \"impossible\", \"impractical\", \"impressionable\", \"impressive\", \"improbable\", \"impure\", \"inborn\", \"incomparable\", \"incompatible\", \"incomplete\", \"inconsequential\", \"incredible\", \"indelible\", \"inexperienced\", \"indolent\", \"infamous\", \"infantile\", \"infatuated\", \"inferior\", \"infinite\", \"informal\", \"innocent\", \"insecure\", \"insidious\", \"insignificant\", \"insistent\", \"instructive\", \"insubstantial\", \"intelligent\", \"intent\", \"intentional\", \"interesting\", \"internal\", \"international\", \"intrepid\", \"ironclad\", \"irresponsible\", \"irritating\", \"itchy\", \"jaded\", \"jagged\", \"jam-packed\", \"jaunty\", \"jealous\", \"jittery\", \"joint\", \"jolly\", \"jovial\", \"joyful\", \"joyous\", \"jubilant\", \"judicious\", \"juicy\", \"jumbo\", \"junior\", \"jumpy\", \"juvenile\", \"kaleidoscopic\", \"keen\", \"key\", \"kind\", \"kindhearted\", \"kindly\", \"klutzy\", \"knobby\", \"knotty\", \"knowledgeable\", \"knowing\", \"known\", \"kooky\", \"kosher\", \"lame\", \"lanky\", \"large\", \"last\", \"lasting\", \"late\", \"lavish\", \"lawful\", \"lazy\", \"leading\", \"lean\", \"leafy\", \"left\", \"legal\", \"legitimate\", \"light\", \"lighthearted\", \"likable\", \"likely\", \"limited\", \"limp\", \"limping\", \"linear\", \"lined\", \"liquid\", \"little\", \"live\", \"lively\", \"livid\", \"loathsome\", \"lone\", \"lonely\", \"long\", \"long-term\", \"loose\", \"lopsided\", \"lost\", \"loud\", \"lovable\", \"lovely\", \"loving\", \"low\", \"loyal\", \"lucky\", \"lumbering\", \"luminous\", \"lumpy\", \"lustrous\", \"luxurious\", \"mad\", \"made-up\", \"magnificent\", \"majestic\", \"major\", \"male\", \"mammoth\", \"married\", \"marvelous\", \"masculine\", \"massive\", \"mature\", \"meager\", \"mealy\", \"mean\", \"measly\", \"meaty\", \"medical\", \"mediocre\", \"medium\", \"meek\", \"mellow\", \"melodic\", \"memorable\", \"menacing\", \"merry\", \"messy\", \"metallic\", \"mild\", \"milky\", \"mindless\", \"miniature\", \"minor\", \"minty\", \"miserable\", \"miserly\", \"misguided\", \"misty\", \"mixed\", \"modern\", \"modest\", \"moist\", \"monstrous\", \"monthly\", \"monumental\", \"moral\", \"mortified\", \"motherly\", \"motionless\", \"mountainous\", \"muddy\", \"muffled\", \"multicolored\", \"mundane\", \"murky\", \"mushy\", \"musty\", \"muted\", \"mysterious\", \"naive\", \"narrow\", \"nasty\", \"natural\", \"naughty\", \"nautical\", \"near\", \"neat\", \"necessary\", \"needy\", \"negative\", \"neglected\", \"negligible\", \"neighboring\", \"nervous\", \"new\", \"next\", \"nice\", \"nifty\", \"nimble\", \"nippy\", \"nocturnal\", \"noisy\", \"nonstop\", \"normal\", \"notable\", \"noted\", \"noteworthy\", \"novel\", \"noxious\", \"numb\", \"nutritious\", \"nutty\", \"obedient\", \"obese\", \"oblong\", \"oily\", \"oblong\", \"obvious\", \"occasional\", \"odd\", \"oddball\", \"offbeat\", \"offensive\", \"official\", \"old\", \"old-fashioned\", \"only\", \"open\", \"optimal\", \"optimistic\", \"opulent\", \"orange\", \"orderly\", \"organic\", \"ornate\", \"ornery\", \"ordinary\", \"original\", \"other\", \"our\", \"outlying\", \"outgoing\", \"outlandish\", \"outrageous\", \"outstanding\", \"oval\", \"overcooked\", \"overdue\", \"overjoyed\", \"overlooked\", \"palatable\", \"pale\", \"paltry\", \"parallel\", \"parched\", \"partial\", \"passionate\", \"past\", \"pastel\", \"peaceful\", \"peppery\", \"perfect\", \"perfumed\", \"periodic\", \"perky\", \"personal\", \"pertinent\", \"pesky\", \"pessimistic\", \"petty\", \"phony\", \"physical\", \"piercing\", \"pink\", \"pitiful\", \"plain\", \"plaintive\", \"plastic\", \"playful\", \"pleasant\", \"pleased\", \"pleasing\", \"plump\", \"plush\", \"polished\", \"polite\", \"political\", \"pointed\", \"pointless\", \"poised\", \"poor\", \"popular\", \"portly\", \"posh\", \"positive\", \"possible\", \"potable\", \"powerful\", \"powerless\", \"practical\", \"precious\", \"present\", \"prestigious\", \"pretty\", \"precious\", \"previous\", \"pricey\", \"prickly\", \"primary\", \"prime\", \"pristine\", \"private\", \"prize\", \"probable\", \"productive\", \"profitable\", \"profuse\", \"proper\", \"proud\", \"prudent\", \"punctual\", \"pungent\", \"puny\", \"pure\", \"purple\", \"pushy\", \"putrid\", \"puzzled\", \"puzzling\", \"quaint\", \"qualified\", \"quarrelsome\", \"quarterly\", \"queasy\", \"querulous\", \"questionable\", \"quick\", \"quick-witted\", \"quiet\", \"quintessential\", \"quirky\", \"quixotic\", \"quizzical\", \"radiant\", \"ragged\", \"rapid\", \"rare\", \"rash\", \"raw\", \"recent\", \"reckless\", \"rectangular\", \"ready\", \"real\", \"realistic\", \"reasonable\", \"red\", \"reflecting\", \"regal\", \"regular\", \"reliable\", \"relieved\", \"remarkable\", \"remorseful\", \"remote\", \"repentant\", \"required\", \"respectful\", \"responsible\", \"repulsive\", \"revolving\", \"rewarding\", \"rich\", \"rigid\", \"right\", \"ringed\", \"ripe\", \"roasted\", \"robust\", \"rosy\", \"rotating\", \"rotten\", \"rough\", \"round\", \"rowdy\", \"royal\", \"rubbery\", \"rundown\", \"ruddy\", \"rude\", \"runny\", \"rural\", \"rusty\", \"sad\", \"safe\", \"salty\", \"same\", \"sandy\", \"sane\", \"sarcastic\", \"sardonic\", \"satisfied\", \"scaly\", \"scarce\", \"scared\", \"scary\", \"scented\", \"scholarly\", \"scientific\", \"scornful\", \"scratchy\", \"scrawny\", \"second\", \"secondary\", \"second-hand\", \"secret\", \"self-assured\", \"self-reliant\", \"selfish\", \"sentimental\", \"separate\", \"serene\", \"serious\", \"serpentine\", \"several\", \"severe\", \"shabby\", \"shadowy\", \"shady\", \"shallow\", \"shameful\", \"shameless\", \"sharp\", \"shimmering\", \"shiny\", \"shocked\", \"shocking\", \"shoddy\", \"short\", \"short-term\", \"showy\", \"shrill\", \"shy\", \"sick\", \"silent\", \"silky\", \"silly\", \"silver\", \"similar\", \"simple\", \"simplistic\", \"sinful\", \"single\", \"sizzling\", \"skeletal\", \"skinny\", \"sleepy\", \"slight\", \"slim\", \"slimy\", \"slippery\", \"slow\", \"slushy\", \"small\", \"smart\", \"smoggy\", \"smooth\", \"smug\", \"snappy\", \"snarling\", \"sneaky\", \"sniveling\", \"snoopy\", \"sociable\", \"soft\", \"soggy\", \"solid\", \"somber\", \"some\", \"spherical\", \"sophisticated\", \"sore\", \"sorrowful\", \"soulful\", \"soupy\", \"sour\", \"Spanish\", \"sparkling\", \"sparse\", \"specific\", \"spectacular\", \"speedy\", \"spicy\", \"spiffy\", \"spirited\", \"spiteful\", \"splendid\", \"spotless\", \"spotted\", \"spry\", \"square\", \"squeaky\", \"squiggly\", \"stable\", \"staid\", \"stained\", \"stale\", \"standard\", \"starchy\", \"stark\", \"starry\", \"steep\", \"sticky\", \"stiff\", \"stimulating\", \"stingy\", \"stormy\", \"straight\", \"strange\", \"steel\", \"strict\", \"strident\", \"striking\", \"striped\", \"strong\", \"studious\", \"stunning\", \"stupendous\", \"stupid\", \"sturdy\", \"stylish\", \"subdued\", \"submissive\", \"substantial\", \"subtle\", \"suburban\", \"sudden\", \"sugary\", \"sunny\", \"super\", \"superb\", \"superficial\", \"superior\", \"supportive\", \"sure-footed\", \"surprised\", \"suspicious\", \"svelte\", \"sweaty\", \"sweet\", \"sweltering\", \"swift\", \"sympathetic\", \"tall\", \"talkative\", \"tame\", \"tan\", \"tangible\", \"tart\", \"tasty\", \"tattered\", \"taut\", \"tedious\", \"teeming\", \"tempting\", \"tender\", \"tense\", \"tepid\", \"terrible\", \"terrific\", \"testy\", \"thankful\", \"that\", \"these\", \"thick\", \"thin\", \"third\", \"thirsty\", \"this\", \"thorough\", \"thorny\", \"those\", \"thoughtful\", \"threadbare\", \"thrifty\", \"thunderous\", \"tidy\", \"tight\", \"timely\", \"tinted\", \"tiny\", \"tired\", \"torn\", \"total\", \"tough\", \"traumatic\", \"treasured\", \"tremendous\", \"tragic\", \"trained\", \"tremendous\", \"triangular\", \"tricky\", \"trifling\", \"trim\", \"trivial\", \"troubled\", \"true\", \"trusting\", \"trustworthy\", \"trusty\", \"truthful\", \"tubby\", \"turbulent\", \"twin\", \"ugly\", \"ultimate\", \"unacceptable\", \"unaware\", \"uncomfortable\", \"uncommon\", \"unconscious\", \"understated\", \"unequaled\", \"uneven\", \"unfinished\", \"unfit\", \"unfolded\", \"unfortunate\", \"unhappy\", \"unhealthy\", \"uniform\", \"unimportant\", \"unique\", \"united\", \"unkempt\", \"unknown\", \"unlawful\", \"unlined\", \"unlucky\", \"unnatural\", \"unpleasant\", \"unrealistic\", \"unripe\", \"unruly\", \"unselfish\", \"unsightly\", \"unsteady\", \"unsung\", \"untidy\", \"untimely\", \"untried\", \"untrue\", \"unused\", \"unusual\", \"unwelcome\", \"unwieldy\", \"unwilling\", \"unwitting\", \"unwritten\", \"upbeat\", \"upright\", \"upset\", \"urban\", \"usable\", \"used\", \"useful\", \"useless\", \"utilized\", \"utter\", \"vacant\", \"vague\", \"vain\", \"valid\", \"valuable\", \"vapid\", \"variable\", \"vast\", \"velvety\", \"venerated\", \"vengeful\", \"verifiable\", \"vibrant\", \"vicious\", \"victorious\", \"vigilant\", \"vigorous\", \"villainous\", \"violet\", \"violent\", \"virtual\", \"virtuous\", \"visible\", \"vital\", \"vivacious\", \"vivid\", \"voluminous\", \"wan\", \"warlike\", \"warm\", \"warmhearted\", \"warped\", \"wary\", \"wasteful\", \"watchful\", \"waterlogged\", \"watery\", \"wavy\", \"wealthy\", \"weak\", \"weary\", \"webbed\", \"wee\", \"weekly\", \"weepy\", \"weighty\", \"weird\", \"welcome\", \"well-documented\", \"well-groomed\", \"well-informed\", \"well-lit\", \"well-made\", \"well-off\", \"well-to-do\", \"well-worn\", \"wet\", \"which\", \"whimsical\", \"whirlwind\", \"whispered\", \"white\", \"whole\", \"whopping\", \"wicked\", \"wide\", \"wide-eyed\", \"wiggly\", \"wild\", \"willing\", \"wilted\", \"winding\", \"windy\", \"winged\", \"wiry\", \"wise\", \"witty\", \"wobbly\", \"woeful\", \"wonderful\", \"wooden\", \"woozy\", \"wordy\", \"worldly\", \"worn\", \"worried\", \"worrisome\", \"worse\", \"worst\", \"worthless\", \"worthwhile\", \"worthy\", \"wrathful\", \"wretched\", \"writhing\", \"wrong\", \"wry\", \"yawning\", \"yearly\", \"yellow\", \"yellowish\", \"young\", \"youthful\", \"yummy\", \"zany\", \"zealous\", \"zesty\", \"zigzag\", \"rocky\"];\n\n    var name2 = [\"people\", \"history\", \"way\", \"art\", \"world\", \"information\", \"map\", \"family\", \"government\", \"health\", \"system\", \"computer\", \"meat\", \"year\", \"thanks\", \"music\", \"person\", \"reading\", \"method\", \"data\", \"food\", \"understanding\", \"theory\", \"law\", \"bird\", \"literature\", \"problem\", \"software\", \"control\", \"knowledge\", \"power\", \"ability\", \"economics\", \"love\", \"internet\", \"television\", \"science\", \"library\", \"nature\", \"fact\", \"product\", \"idea\", \"temperature\", \"investment\", \"area\", \"society\", \"activity\", \"story\", \"industry\", \"media\", \"thing\", \"oven\", \"community\", \"definition\", \"safety\", \"quality\", \"development\", \"language\", \"management\", \"player\", \"variety\", \"video\", \"week\", \"security\", \"country\", \"exam\", \"movie\", \"organization\", \"equipment\", \"physics\", \"analysis\", \"policy\", \"series\", \"thought\", \"basis\", \"boyfriend\", \"direction\", \"strategy\", \"technology\", \"army\", \"camera\", \"freedom\", \"paper\", \"environment\", \"child\", \"instance\", \"month\", \"truth\", \"marketing\", \"university\", \"writing\", \"article\", \"department\", \"difference\", \"goal\", \"news\", \"audience\", \"fishing\", \"growth\", \"income\", \"marriage\", \"user\", \"combination\", \"failure\", \"meaning\", \"medicine\", \"philosophy\", \"teacher\", \"communication\", \"night\", \"chemistry\", \"disease\", \"disk\", \"energy\", \"nation\", \"road\", \"role\", \"soup\", \"advertising\", \"location\", \"success\", \"addition\", \"apartment\", \"education\", \"math\", \"moment\", \"painting\", \"politics\", \"attention\", \"decision\", \"event\", \"property\", \"shopping\", \"student\", \"wood\", \"competition\", \"distribution\", \"entertainment\", \"office\", \"population\", \"president\", \"unit\", \"category\", \"cigarette\", \"context\", \"introduction\", \"opportunity\", \"performance\", \"driver\", \"flight\", \"length\", \"magazine\", \"newspaper\", \"relationship\", \"teaching\", \"cell\", \"dealer\", \"debate\", \"finding\", \"lake\", \"member\", \"message\", \"phone\", \"scene\", \"appearance\", \"association\", \"concept\", \"customer\", \"death\", \"discussion\", \"housing\", \"inflation\", \"insurance\", \"mood\", \"woman\", \"advice\", \"blood\", \"effort\", \"expression\", \"importance\", \"opinion\", \"payment\", \"reality\", \"responsibility\", \"situation\", \"skill\", \"statement\", \"wealth\", \"application\", \"city\", \"county\", \"depth\", \"estate\", \"foundation\", \"grandmother\", \"heart\", \"perspective\", \"photo\", \"recipe\", \"studio\", \"topic\", \"collection\", \"depression\", \"imagination\", \"passion\", \"percentage\", \"resource\", \"setting\", \"ad\", \"agency\", \"college\", \"connection\", \"criticism\", \"debt\", \"description\", \"memory\", \"patience\", \"secretary\", \"solution\", \"administration\", \"aspect\", \"attitude\", \"director\", \"personality\", \"psychology\", \"recommendation\", \"response\", \"selection\", \"storage\", \"version\", \"alcohol\", \"argument\", \"complaint\", \"contract\", \"emphasis\", \"highway\", \"loss\", \"membership\", \"possession\", \"preparation\", \"steak\", \"union\", \"agreement\", \"cancer\", \"currency\", \"employment\", \"engineering\", \"entry\", \"interaction\", \"limit\", \"mixture\", \"preference\", \"region\", \"republic\", \"seat\", \"tradition\", \"virus\", \"actor\", \"classroom\", \"delivery\", \"device\", \"difficulty\", \"drama\", \"election\", \"engine\", \"football\", \"guidance\", \"hotel\", \"match\", \"owner\", \"priority\", \"protection\", \"suggestion\", \"tension\", \"variation\", \"anxiety\", \"atmosphere\", \"awareness\", \"bread\", \"climate\", \"comparison\", \"confusion\", \"construction\", \"elevator\", \"emotion\", \"employee\", \"employer\", \"guest\", \"height\", \"leadership\", \"mall\", \"manager\", \"operation\", \"recording\", \"respect\", \"sample\", \"transportation\", \"boring\", \"charity\", \"cousin\", \"disaster\", \"editor\", \"efficiency\", \"excitement\", \"extent\", \"feedback\", \"guitar\", \"homework\", \"leader\", \"mom\", \"outcome\", \"permission\", \"presentation\", \"promotion\", \"reflection\", \"refrigerator\", \"resolution\", \"revenue\", \"session\", \"singer\", \"tennis\", \"basket\", \"bonus\", \"cabinet\", \"childhood\", \"church\", \"clothes\", \"coffee\", \"dinner\", \"drawing\", \"hair\", \"hearing\", \"initiative\", \"judgment\", \"lab\", \"measurement\", \"mode\", \"mud\", \"orange\", \"poetry\", \"police\", \"possibility\", \"procedure\", \"queen\", \"ratio\", \"relation\", \"restaurant\", \"satisfaction\", \"sector\", \"signature\", \"significance\", \"song\", \"tooth\", \"town\", \"vehicle\", \"volume\", \"wife\", \"accident\", \"airport\", \"appointment\", \"arrival\", \"assumption\", \"baseball\", \"chapter\", \"committee\", \"conversation\", \"database\", \"enthusiasm\", \"error\", \"explanation\", \"farmer\", \"gate\", \"girl\", \"hall\", \"historian\", \"hospital\", \"injury\", \"instruction\", \"maintenance\", \"manufacturer\", \"meal\", \"perception\", \"pie\", \"poem\", \"presence\", \"proposal\", \"reception\", \"replacement\", \"revolution\", \"river\", \"son\", \"speech\", \"tea\", \"village\", \"warning\", \"winner\", \"worker\", \"writer\", \"assistance\", \"breath\", \"buyer\", \"chest\", \"chocolate\", \"conclusion\", \"contribution\", \"cookie\", \"courage\", \"desk\", \"drawer\", \"establishment\", \"examination\", \"garbage\", \"grocery\", \"honey\", \"impression\", \"improvement\", \"independence\", \"insect\", \"inspection\", \"inspector\", \"king\", \"ladder\", \"menu\", \"penalty\", \"piano\", \"potato\", \"profession\", \"professor\", \"quantity\", \"reaction\", \"requirement\", \"salad\", \"sister\", \"supermarket\", \"tongue\", \"weakness\", \"wedding\", \"affair\", \"ambition\", \"analyst\", \"apple\", \"assignment\", \"assistant\", \"bathroom\", \"bedroom\", \"beer\", \"birthday\", \"celebration\", \"championship\", \"cheek\", \"client\", \"consequence\", \"departure\", \"diamond\", \"dirt\", \"ear\", \"fortune\", \"friendship\", \"funeral\", \"gene\", \"girlfriend\", \"hat\", \"indication\", \"intention\", \"lady\", \"midnight\", \"negotiation\", \"obligation\", \"passenger\", \"pizza\", \"platform\", \"poet\", \"pollution\", \"recognition\", \"reputation\", \"shirt\", \"speaker\", \"stranger\", \"surgery\", \"sympathy\", \"tale\", \"throat\", \"trainer\", \"uncle\", \"youth\", \"time\", \"work\", \"film\", \"water\", \"money\", \"example\", \"while\", \"business\", \"study\", \"game\", \"life\", \"form\", \"air\", \"day\", \"place\", \"number\", \"part\", \"field\", \"fish\", \"back\", \"process\", \"heat\", \"hand\", \"experience\", \"job\", \"book\", \"end\", \"point\", \"type\", \"home\", \"economy\", \"value\", \"body\", \"market\", \"guide\", \"interest\", \"state\", \"radio\", \"course\", \"company\", \"price\", \"size\", \"card\", \"list\", \"mind\", \"trade\", \"line\", \"care\", \"group\", \"risk\", \"word\", \"fat\", \"force\", \"key\", \"light\", \"training\", \"name\", \"school\", \"top\", \"amount\", \"level\", \"order\", \"practice\", \"research\", \"sense\", \"service\", \"piece\", \"web\", \"boss\", \"sport\", \"fun\", \"house\", \"page\", \"term\", \"test\", \"answer\", \"sound\", \"focus\", \"matter\", \"kind\", \"soil\", \"board\", \"oil\", \"picture\", \"access\", \"garden\", \"range\", \"rate\", \"reason\", \"future\", \"site\", \"demand\", \"exercise\", \"image\", \"case\", \"cause\", \"coast\", \"action\", \"age\", \"bad\", \"boat\", \"record\", \"result\", \"section\", \"building\", \"mouse\", \"cash\", \"class\", \"period\", \"plan\", \"store\", \"tax\", \"side\", \"subject\", \"space\", \"rule\", \"stock\", \"weather\", \"chance\", \"figure\", \"man\", \"model\", \"source\", \"beginning\", \"earth\", \"program\", \"chicken\", \"design\", \"feature\", \"head\", \"material\", \"purpose\", \"question\", \"rock\", \"salt\", \"act\", \"birth\", \"car\", \"dog\", \"object\", \"scale\", \"sun\", \"note\", \"profit\", \"rent\", \"speed\", \"style\", \"war\", \"bank\", \"craft\", \"half\", \"inside\", \"outside\", \"standard\", \"bus\", \"exchange\", \"eye\", \"fire\", \"position\", \"pressure\", \"stress\", \"advantage\", \"benefit\", \"box\", \"frame\", \"issue\", \"step\", \"cycle\", \"face\", \"item\", \"metal\", \"paint\", \"review\", \"room\", \"screen\", \"structure\", \"view\", \"account\", \"ball\", \"discipline\", \"medium\", \"share\", \"balance\", \"bit\", \"black\", \"bottom\", \"choice\", \"gift\", \"impact\", \"machine\", \"shape\", \"tool\", \"wind\", \"address\", \"average\", \"career\", \"culture\", \"morning\", \"pot\", \"sign\", \"table\", \"task\", \"condition\", \"contact\", \"credit\", \"egg\", \"hope\", \"ice\", \"network\", \"north\", \"square\", \"attempt\", \"date\", \"effect\", \"link\", \"post\", \"star\", \"voice\", \"capital\", \"challenge\", \"friend\", \"self\", \"shot\", \"brush\", \"couple\", \"exit\", \"front\", \"function\", \"lack\", \"living\", \"plant\", \"plastic\", \"spot\", \"summer\", \"taste\", \"theme\", \"track\", \"wing\", \"brain\", \"button\", \"click\", \"desire\", \"foot\", \"gas\", \"influence\", \"notice\", \"rain\", \"wall\", \"base\", \"damage\", \"distance\", \"feeling\", \"pair\", \"savings\", \"staff\", \"sugar\", \"target\", \"text\", \"animal\", \"author\", \"budget\", \"discount\", \"file\", \"ground\", \"lesson\", \"minute\", \"officer\", \"phase\", \"reference\", \"register\", \"sky\", \"stage\", \"stick\", \"title\", \"trouble\", \"bowl\", \"bridge\", \"campaign\", \"character\", \"club\", \"edge\", \"evidence\", \"fan\", \"letter\", \"lock\", \"maximum\", \"novel\", \"option\", \"pack\", \"park\", \"quarter\", \"skin\", \"sort\", \"weight\", \"baby\", \"background\", \"carry\", \"dish\", \"factor\", \"fruit\", \"glass\", \"joint\", \"master\", \"muscle\", \"red\", \"strength\", \"traffic\", \"trip\", \"vegetable\", \"appeal\", \"chart\", \"gear\", \"ideal\", \"kitchen\", \"land\", \"log\", \"mother\", \"net\", \"party\", \"principle\", \"relative\", \"sale\", \"season\", \"signal\", \"spirit\", \"street\", \"tree\", \"wave\", \"belt\", \"bench\", \"commission\", \"copy\", \"drop\", \"minimum\", \"path\", \"progress\", \"project\", \"sea\", \"south\", \"status\", \"stuff\", \"ticket\", \"tour\", \"angle\", \"blue\", \"breakfast\", \"confidence\", \"daughter\", \"degree\", \"doctor\", \"dot\", \"dream\", \"duty\", \"essay\", \"father\", \"fee\", \"finance\", \"hour\", \"juice\", \"luck\", \"milk\", \"mouth\", \"peace\", \"pipe\", \"stable\", \"storm\", \"substance\", \"team\", \"trick\", \"afternoon\", \"bat\", \"beach\", \"blank\", \"catch\", \"chain\", \"consideration\", \"cream\", \"crew\", \"detail\", \"gold\", \"interview\", \"kid\", \"mark\", \"mission\", \"pain\", \"pleasure\", \"score\", \"screw\", \"sex\", \"shop\", \"shower\", \"suit\", \"tone\", \"window\", \"agent\", \"band\", \"bath\", \"block\", \"bone\", \"calendar\", \"candidate\", \"cap\", \"coat\", \"contest\", \"corner\", \"court\", \"cup\", \"district\", \"door\", \"east\", \"finger\", \"garage\", \"guarantee\", \"hole\", \"hook\", \"implement\", \"layer\", \"lecture\", \"lie\", \"manner\", \"meeting\", \"nose\", \"parking\", \"partner\", \"profile\", \"rice\", \"routine\", \"schedule\", \"swimming\", \"telephone\", \"tip\", \"winter\", \"airline\", \"bag\", \"battle\", \"bed\", \"bill\", \"bother\", \"cake\", \"code\", \"curve\", \"designer\", \"dimension\", \"dress\", \"ease\", \"emergency\", \"evening\", \"extension\", \"farm\", \"fight\", \"gap\", \"grade\", \"holiday\", \"horror\", \"horse\", \"host\", \"husband\", \"loan\", \"mistake\", \"mountain\", \"nail\", \"noise\", \"occasion\", \"package\", \"patient\", \"pause\", \"phrase\", \"proof\", \"race\", \"relief\", \"sand\", \"sentence\", \"shoulder\", \"smoke\", \"stomach\", \"string\", \"tourist\", \"towel\", \"vacation\", \"west\", \"wheel\", \"wine\", \"arm\", \"aside\", \"associate\", \"bet\", \"blow\", \"border\", \"branch\", \"breast\", \"brother\", \"buddy\", \"bunch\", \"chip\", \"coach\", \"cross\", \"document\", \"draft\", \"dust\", \"expert\", \"floor\", \"god\", \"golf\", \"habit\", \"iron\", \"judge\", \"knife\", \"landscape\", \"league\", \"mail\", \"mess\", \"native\", \"opening\", \"parent\", \"pattern\", \"pin\", \"pool\", \"pound\", \"request\", \"salary\", \"shame\", \"shelter\", \"shoe\", \"silver\", \"tackle\", \"tank\", \"trust\", \"assist\", \"bake\", \"bar\", \"bell\", \"bike\", \"blame\", \"boy\", \"brick\", \"chair\", \"closet\", \"clue\", \"collar\", \"comment\", \"conference\", \"devil\", \"diet\", \"fear\", \"fuel\", \"glove\", \"jacket\", \"lunch\", \"monitor\", \"mortgage\", \"nurse\", \"pace\", \"panic\", \"peak\", \"plane\", \"reward\", \"row\", \"sandwich\", \"shock\", \"spite\", \"spray\", \"surprise\", \"till\", \"transition\", \"weekend\", \"welcome\", \"yard\", \"alarm\", \"bend\", \"bicycle\", \"bite\", \"blind\", \"bottle\", \"cable\", \"candle\", \"clerk\", \"cloud\", \"concert\", \"counter\", \"flower\", \"grandfather\", \"harm\", \"knee\", \"lawyer\", \"leather\", \"load\", \"mirror\", \"neck\", \"pension\", \"plate\", \"purple\", \"ruin\", \"ship\", \"skirt\", \"slice\", \"snow\", \"specialist\", \"stroke\", \"switch\", \"trash\", \"tune\", \"zone\", \"anger\", \"award\", \"bid\", \"bitter\", \"boot\", \"bug\", \"camp\", \"candy\", \"carpet\", \"cat\", \"champion\", \"channel\", \"clock\", \"comfort\", \"cow\", \"crack\", \"engineer\", \"entrance\", \"fault\", \"grass\", \"guy\", \"hell\", \"highlight\", \"incident\", \"island\", \"joke\", \"jury\", \"leg\", \"lip\", \"mate\", \"motor\", \"nerve\", \"passage\", \"pen\", \"pride\", \"priest\", \"prize\", \"promise\", \"resident\", \"resort\", \"ring\", \"roof\", \"rope\", \"sail\", \"scheme\", \"script\", \"sock\", \"station\", \"toe\", \"tower\", \"truck\", \"witness\", \"can\", \"will\", \"other\", \"use\", \"make\", \"good\", \"look\", \"help\", \"go\", \"great\", \"being\", \"still\", \"public\", \"read\", \"keep\", \"start\", \"give\", \"human\", \"local\", \"general\", \"specific\", \"long\", \"play\", \"feel\", \"high\", \"put\", \"common\", \"set\", \"change\", \"simple\", \"past\", \"big\", \"possible\", \"particular\", \"major\", \"personal\", \"current\", \"national\", \"cut\", \"natural\", \"physical\", \"show\", \"try\", \"check\", \"second\", \"call\", \"move\", \"pay\", \"let\", \"increase\", \"single\", \"individual\", \"turn\", \"ask\", \"buy\", \"guard\", \"hold\", \"main\", \"offer\", \"potential\", \"professional\", \"international\", \"travel\", \"cook\", \"alternative\", \"special\", \"working\", \"whole\", \"dance\", \"excuse\", \"cold\", \"commercial\", \"low\", \"purchase\", \"deal\", \"primary\", \"worth\", \"fall\", \"necessary\", \"positive\", \"produce\", \"search\", \"present\", \"spend\", \"talk\", \"creative\", \"tell\", \"cost\", \"drive\", \"green\", \"support\", \"glad\", \"remove\", \"return\", \"run\", \"complex\", \"due\", \"effective\", \"middle\", \"regular\", \"reserve\", \"independent\", \"leave\", \"original\", \"reach\", \"rest\", \"serve\", \"watch\", \"beautiful\", \"charge\", \"active\", \"break\", \"negative\", \"safe\", \"stay\", \"visit\", \"visual\", \"affect\", \"cover\", \"report\", \"rise\", \"walk\", \"white\", \"junior\", \"pick\", \"unique\", \"classic\", \"final\", \"lift\", \"mix\", \"private\", \"stop\", \"teach\", \"western\", \"concern\", \"familiar\", \"fly\", \"official\", \"broad\", \"comfortable\", \"gain\", \"rich\", \"save\", \"stand\", \"young\", \"heavy\", \"lead\", \"listen\", \"valuable\", \"worry\", \"handle\", \"leading\", \"meet\", \"release\", \"sell\", \"finish\", \"normal\", \"press\", \"ride\", \"secret\", \"spread\", \"spring\", \"tough\", \"wait\", \"brown\", \"deep\", \"display\", \"flow\", \"hit\", \"objective\", \"shoot\", \"touch\", \"cancel\", \"chemical\", \"cry\", \"dump\", \"extreme\", \"push\", \"conflict\", \"eat\", \"fill\", \"formal\", \"jump\", \"kick\", \"opposite\", \"pass\", \"pitch\", \"remote\", \"total\", \"treat\", \"vast\", \"abuse\", \"beat\", \"burn\", \"deposit\", \"print\", \"raise\", \"sleep\", \"somewhere\", \"advance\", \"consist\", \"dark\", \"double\", \"draw\", \"equal\", \"fix\", \"hire\", \"internal\", \"join\", \"kill\", \"sensitive\", \"tap\", \"win\", \"attack\", \"claim\", \"constant\", \"drag\", \"drink\", \"guess\", \"minor\", \"pull\", \"raw\", \"soft\", \"solid\", \"wear\", \"weird\", \"wonder\", \"annual\", \"count\", \"dead\", \"doubt\", \"feed\", \"forever\", \"impress\", \"repeat\", \"round\", \"sing\", \"slide\", \"strip\", \"wish\", \"combine\", \"command\", \"dig\", \"divide\", \"equivalent\", \"hang\", \"hunt\", \"initial\", \"march\", \"mention\", \"spiritual\", \"survey\", \"tie\", \"adult\", \"brief\", \"crazy\", \"escape\", \"gather\", \"hate\", \"prior\", \"repair\", \"rough\", \"sad\", \"scratch\", \"sick\", \"strike\", \"employ\", \"external\", \"hurt\", \"illegal\", \"laugh\", \"lay\", \"mobile\", \"nasty\", \"ordinary\", \"respond\", \"royal\", \"senior\", \"split\", \"strain\", \"struggle\", \"swim\", \"train\", \"upper\", \"wash\", \"yellow\", \"convert\", \"crash\", \"dependent\", \"fold\", \"funny\", \"grab\", \"hide\", \"miss\", \"permit\", \"quote\", \"recover\", \"resolve\", \"roll\", \"sink\", \"slip\", \"spare\", \"suspect\", \"sweet\", \"swing\", \"twist\", \"upstairs\", \"usual\", \"abroad\", \"brave\", \"calm\", \"concentrate\", \"estimate\", \"grand\", \"male\", \"mine\", \"prompt\", \"quiet\", \"refuse\", \"regret\", \"reveal\", \"rush\", \"shake\", \"shift\", \"shine\", \"steal\", \"suck\", \"surround\", \"bear\", \"brilliant\", \"dare\", \"dear\", \"delay\", \"drunk\", \"female\", \"hurry\", \"inevitable\", \"invite\", \"kiss\", \"neat\", \"pop\", \"punch\", \"quit\", \"reply\", \"representative\", \"resist\", \"rip\", \"rub\", \"silly\", \"smile\", \"spell\", \"stretch\", \"stupid\", \"tear\", \"temporary\", \"tomorrow\", \"wake\", \"wrap\", \"yesterday\", \"Thomas\", \"Tom\", \"Lieuwe\"];\n\n    var name = this.capFirst(name1[this.getRandomInt(0, name1.length + 1)]) + ' ' + this.capFirst(name2[this.getRandomInt(0, name2.length + 1)]);\n    return name;\n\n  }\n\n  async testPLCEvent() {\n    var newuid = SSUuid.GenerateV4();\n    var order = {\n      \"id\": newuid,\n      \"displayId\": (Math.floor(Math.random() * 9999)).toString(),\n      \"orderType\": \"DELIVERY\",\n      \"orderTiming\": \"IMMEDIATE\",\n      \"salesChannel\": \"UAAU\",\n      \"createdAt\": (new Date()).toISOString(),\n      \"preparationStartDateTime\": (new Date()).toString(),\n      \"isTest\": null,\n      \"extraInfo\": null,\n      \"merchant\": {\n        \"id\": null,\n        \"name\": null\n      },\n      \"customer\": {\n        \"id\": \"0d023c94-56b9-11ec-b388-000d3a8abda5\",\n        \"name\": this.generateName(),\n        \"documentNumber\": \"411.014.278-41\",\n        \"phone\": {\n          \"number\": \"234234324\",\n          \"localizer\": null,\n          \"localizerExpiration\": null\n        },\n        \"ordersCountOnMerchant\": 4\n      },\n      \"items\": [\n        {\n          \"index\": 0,\n          \"id\": null,\n          \"name\": this.generateName() + \" \" + this.generateName(),\n          \"imageUrl\": null,\n          \"externalCode\": null,\n          \"ean\": null,\n          \"unit\": null,\n          \"quantity\": 1,\n          \"unitPrice\": this.getRandomInt(5, 888),\n          \"addition\": null,\n          \"price\": 0,\n          \"scalePrices\": null,\n          \"optionsPrice\": null,\n          \"totalPrice\": 0,\n          \"observations\": null,\n          \"options\": null\n        }\n      ],\n      \"delivery\": {\n        \"mode\": null,\n        \"deliveredBy\": null,\n        \"deliveryDateTime\": null,\n        \"observations\": null,\n        \"deliveryAddress\": {\n          \"streetName\": \"Rua \" + this.generateName() + \" \" + this.generateName(),\n          \"streetNumber\": \"222\",\n          \"formattedAddress\": \"Rua Maria Quitéria de Jesus Medeiros 222\",\n          \"neighborhood\": \"Jardim Ponte Alta I\",\n          \"complement\": null,\n          \"reference\": null,\n          \"postalCode\": \"07.179-120\",\n          \"city\": this.generateName(),\n          \"state\": \"SP\",\n          \"country\": \"Brasil\",\n          \"coordinates\": {\n            \"latitude\": null,\n            \"longitude\": null\n          }\n        }\n      },\n      \"benefits\": [],\n      \"additionalFees\": [],\n      \"total\": {\n        \"subTotal\": null,\n        \"deliveryFee\": null,\n        \"additionalFees\": null,\n        \"benefits\": null,\n        \"orderAmount\": null\n      },\n      \"payments\": {\n        \"prepaid\": null,\n        \"pending\": null,\n        \"methods\": null\n      },\n      \"picking\": {\n        \"picker\": null,\n        \"replacementOptions\": null\n      },\n      \"additionalInfo\": {\n        \"metadata\": null\n      },\n      \"schedule\": {\n        \"deliveryDateTimeStart\": null,\n        \"deliveryDateTimeEnd\": null\n      },\n      \"takeout\": {\n        \"mode\": null,\n        \"takeoutDateTime\": null,\n        \"observations\": null\n      },\n      \"indoor\": {\n        \"mode\": null,\n        \"table\": null,\n        \"deliveryDateTime\": null,\n        \"observations\": null\n      }\n    };\n    try {\n      var evt = <DtoDelinetEvent>{\n        id: SSUuid.GenerateV4(),\n        eventType: \"order\",\n        createdAt: (new Date()).toISOString(),\n        payload: order\n      };\n      var hash = await this.logChannel.add(evt);\n      console.log(hash);\n    } catch (error) {\n      console.log(error);\n    }\n\n\n    var jsonstr = {\n      adapter: \"delinet\",\n      event: \"\",\n      code: \"PLC\",\n      createdAt: (new Date()).toISOString(),\n      fullCode: \"PLACED\",\n      metadata: null,\n      orderId: newuid,\n      id: newuid,\n      source: \"odp\"\n    };\n\n    try {\n      var evt = <DtoDelinetEvent>{\n        id: SSUuid.GenerateV4(),\n        createdAt: (new Date()).toISOString(),\n        payload: jsonstr,\n        eventType: \"event\"\n      };\n      var hash = await this.logChannel.add(evt);\n      console.log(hash);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async test(isNew = false) {\n\n    var objtst = {\n      \"id\": isNew ? SSUuid.GenerateV4() : \"cbdeeabe-f931-11eb-b388-000d3a8abda5\",\n      \"name\": \"Pet do João\",\n      \"status\": \"Ativo\",\n      \"createdAt\": \"2021-08-09T16:49:43\",\n      \"ordersEndpoint\": null,\n      \"adminMode\": null,\n      \"pwaManifest\": null,\n      \"merchant\": [],\n      \"product\": [],\n      \"customer\": []\n    };\n\n    this.merchantGroupSvc.postApiMerchantGroup(objtst).subscribe(\n      (d) => {\n        console.log(d);\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n    return;\n\n\n  }\n\n}\nfunction IDBTransactioMode(storeName: string, IDBTransactioMode: any) {\n  throw new Error('Function not implemented.');\n}\n\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill >\n\n    <p>Debug and tests tool</p>\n    <BR>\n\n        <span>\n            {{response}}\n        </span>\n\n    <br>\n    <textarea [(ngModel)]=\"txttest\">\n    \n    </textarea>\n    <br>\n    \n    <button (click)=\"testGetList()\">\n        Test Get List\n    </button>\n\n    <button (click)=\"testGetOne()\">\n        Test Get One\n    </button>\n\n    <button (click)=\"test()\">\n        Test Add Exist\n    </button>\n\n    <button (click)=\"test(true)\">\n        Test Add New One\n    </button>\n\n    <button (click)=\"deleteTest()\">\n        Test Delete exist\n    </button>\n\n    <button (click)=\"systemSvc.logout()\">\n        logout\n    </button>\n\n    <button [routerLink]=\"['/choose-merchant-group']\">\n        choose-merchant-group\n    </button>\n    <button [routerLink]=\"['/choose-merchant']\">\n        choose-merchant\n    </button>\n    <button [routerLink]=\"['/orders']\">\n        orders\n    </button>\n\n    <br>\n\n    <input type=\"text\" [(ngModel)]=\"delinetchannel\" />\n    <button (click)=\"createDelinetChannel(delinetchannel)\">\n        Create Delinet Channel\n    </button>\n    <br>\n\n    <button (click)=\"sendDelinetEvent()\">\n        Send to Delinet Channel\n    </button>\n<BR>\n    <button (click)=\"testPLCEvent()\">\n        Add PLC Event\n    </button>\n\n    <BR>\n        <button (click)=\"testPublishPackage()\">\n            TEST PACKAGE GENERATION\n        </button>\n\n        <button (click)=\"testBackup()\">\n            TEST Backup\n        </button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { SSIpfs } from '../static-stack/ipfs';\nimport { SystemService } from './system.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImgService {\n\n  constructor(\n    public domSanitizer:DomSanitizer,\n    public httpClient:HttpClient,\n    public systemSvc:SystemService\n  ) { }\n\n  public getBlobUrlFromImageBlob(blob){\n    return this.domSanitizer.bypassSecurityTrustUrl(URL.createObjectURL(blob));\n  }\n\n  public getBlobUrlFromHashAsync(hash){\n    return new Promise<any>(\n      async (resolve,reject)=>{\n        if (this.systemSvc.isStaticAppOnly){\n          try {\n            var blob=await SSIpfs.getImageBlobFromIpfs(hash);\n            resolve(this.getBlobUrlFromImageBlob(blob));  \n          } catch (error) {\n            reject(error);\n          }\n          \n        } else {\n          this.httpClient.get(\"api/Sys/download/\"+hash,{responseType:'arraybuffer'}).subscribe(\n            (d)=>{\n              try {\n                let blob=new Blob([d],{type:'application/image'});\n                resolve(this.getBlobUrlFromImageBlob(blob));  \n              } catch (error) {\n                reject(error);\n              }\n            },\n            (e)=>{\n              reject(e);\n            }\n          )\n        }\n\n      }\n    );\n  }\n\n\n  public resizeImage(settings: IResizeImageOptions){\n    const file = settings.file;\n    const maxSize = settings.maxSize;\n    const reader = new FileReader();\n    const image = new Image();\n    const canvas = document.createElement('canvas');\n    const dataURItoBlob = (dataURI: string) => {\n      const bytes = dataURI.split(',')[0].indexOf('base64') >= 0 ?\n          atob(dataURI.split(',')[1]) :\n          unescape(dataURI.split(',')[1]);\n      const mime = dataURI.split(',')[0].split(':')[1].split(';')[0];\n      const max = bytes.length;\n      const ia = new Uint8Array(max);\n      for (var i = 0; i < max; i++) ia[i] = bytes.charCodeAt(i);\n      return new Blob([ia], {type:mime});\n    };\n    const resize = () => {\n      let width = image.width;\n      let height = image.height;\n  \n      if (settings.height && settings.width){\n        height =settings.height ;\n        width = settings.width;\n      } else {\n        if (width > height) {\n          if (width > maxSize) {\n              height *= maxSize / width;\n              width = maxSize;\n          }\n      } else {\n          if (height > maxSize) {\n              width *= maxSize / height;\n              height = maxSize;\n          }\n      }\n      }\n\n  \n      canvas.width = width;\n      canvas.height = height;\n      canvas.getContext('2d').drawImage(image, 0, 0, width, height);\n      let dataUrl = canvas.toDataURL('image/jpeg');\n      return dataURItoBlob(dataUrl);\n    };\n  \n    return new Promise((ok, no) => {\n        if (!file.type.match(/image.*/)) {\n          no(new Error(\"Not an image\"));\n          return;\n        }\n  \n        reader.onload = (readerEvent: any) => {\n          image.onload = () => ok(resize());\n          image.src = readerEvent.target.result;\n        };\n        reader.readAsDataURL(file);\n    })    \n  };\n\n}\n\ninterface IResizeImageOptions {\n  maxSize: number;\n  width?:number;\n  height?:number;\n  file: File;\n}","<div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill >\n    <div class=\"logo-sticker\" [class.mat-elevation-z10]=\"true\">\n        <img class=\"icoapp\" *ngIf=\"!imgLogo\" src=\"assets/imgs/logo.png\" >\n        <img class=\"icoapp\" *ngIf=\"imgLogo\" [src]=\"imgLogo\">\n    </div>\n    <h1 i18n=\"@@chooseMerchant.title\">{{ 'chooseMerchant.title' | translate }}</h1>\n    <div>\n        <div class=\"optionbox\" *ngFor=\"let m of MerchantList\">\n            <button fxFlex=\"100\" mat-raised-button (click)=\"selectMerchant(m)\">\n                {{m.name}}\n            </button>\n            \n        </div>\n        <div class=\"optionbox\">\n            <button fxFlex=\"100\" mat-raised-button color=\"primary\" (click)=\"createNewMerchant()\" i18n=\"@@chooseMerchant.create\">\n                {{ 'chooseMerchant.create' | translate }}\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Merchant, MerchantGroup } from 'src/app/api/models';\nimport { MerchantGroupService, MerchantService } from 'src/app/api/services';\nimport { ImgService } from 'src/app/services/img.service';\nimport { SystemService } from 'src/app/services/system.service';\n\n@Component({\n  selector: 'app-choose-merchant',\n  templateUrl: './choose-merchant.component.html',\n  styleUrls: ['./choose-merchant.component.less']\n})\nexport class ChooseMerchantComponent implements OnInit {\n\n  public MerchantList:MerchantGroup[]=[];\n\n  constructor(\n    //Injections\n    public systemSvc:SystemService,\n    public merchantSvc:MerchantService,\n    public router:Router,\n    public imgSvc:ImgService\n  ) { }\n\n  imgLogo = null;\n\n\n  ngOnInit(): void {\n    this.initialize();\n    if (this.systemSvc.selectedMerchantGroup?.pwaManifest) {\n      var pwaman = JSON.parse(this.systemSvc.selectedMerchantGroup.pwaManifest);\n      if (pwaman && pwaman.app_icon_ipfs) {\n        this.imgSvc.getBlobUrlFromHashAsync(pwaman.app_icon_ipfs).then(\n          (d) => {\n            this.imgLogo = d\n          }\n        )\n      }\n    }\n  }\n\n  initialize() {\n    if (this.systemSvc.selectedMerchantGroup==null){\n      this.router.navigate([\"/choose-merchant-group\"]);\n      return;\n    }\n    this.merchantSvc.getApiMerchant().subscribe(\n      (d)=>{\n        this.MerchantList=d;\n        if (d.length==0){\n          this.createNewMerchant();\n        }\n      },\n      (e)=>{\n        console.log(e);\n      }\n    )\n  }\n\n  createNewMerchant(){\n    this.router.navigate([\"/wizard-new-merchant\"]);\n  }\n\n  selectMerchant(m:Merchant){\n    this.systemSvc.selectedMerchant=m;\n    this.router.navigate([\"/orders\"]);\n  }\n\n}\n","export class UploadUtil {\n    public static ChooseFileDialog(){\n        return new Promise<FileList>(\n            (resolve,reject)=>{\n                let inputElm=document.createElement(\"input\");\n                inputElm.type=\"file\";\n                inputElm.onchange=(evt)=>{\n                    var elm = <HTMLInputElement>evt.srcElement;\n                    resolve(elm.files);\n                }\n                inputElm.click();\n            }\n        )\n    }\n}","\n    <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n        <mat-label>{{label}}</mat-label>\n        <input [value]=\"text\" matInput readonly (click)=\"uploadFile()\">\n        <mat-icon class=\"icoinput\" matSuffix (click)=\"uploadFile()\">link</mat-icon>    \n        <mat-progress-bar *ngIf=\"progress>0\" mode=\"determinate\" [value]=\"(progress)\"></mat-progress-bar>\n    </mat-form-field>\n","import { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { map, timeout } from 'rxjs/operators';\nimport { UploadUtil } from 'src/app/shared/upload-util';\n\n@Component({\n  selector: 'app-mff-upload-file',\n  templateUrl: './mff-upload-file.component.html',\n  styleUrls: ['./mff-upload-file.component.less']\n})\nexport class MffUploadFileComponent implements OnInit {\n  \n\n  constructor(\n    public httpClient:HttpClient\n  ) { }\n\n  @Input() label: string;\n  \n  @Output() onComplete = new EventEmitter<any>();\n\n  ngOnInit(): void {\n  }\n\n  public text=\"\";\n  public progress=0;\n  public meta=null;\n  public file:Blob=null;\n\n  async uploadFile(){\n    var files=await UploadUtil.ChooseFileDialog();\n    if (files.length>0){\n      var _file=files[0];\n      var _formData=new FormData();\n      _formData.append(\"file\",_file);\n      this.progress=0;\n      this.text=\"\";\n      this.httpClient.post<any>(\"./api/Sys/upload\",_formData,{\n        reportProgress:true,\n        observe:'events'\n      }).pipe(timeout(5 * 60 * 1000))\n      .pipe(map((event) => {\n\n        switch (event.type) {\n\n          case HttpEventType.UploadProgress:\n            const progress = Math.round(100 * event.loaded / event.total!);\n            return { status: 'progress', message: progress };\n\n          case HttpEventType.Response:\n            return event.body;\n          default:\n            return `Unhandled event: ${event.type} ${JSON.stringify(event)}`;\n        }\n      })\n      )\n      .subscribe(\n        (res) => {\n          console.log(res);\n          if (res.status) {\n            this.progress=res.message-1;\n          } else if (res.ipfsHash) {\n            console.log(res.ipfsHash);\n            this.text=res.ipfsHash;\n            this.progress=0;\n            res.file=_file;\n            this.onComplete.next(res);\n          }\n\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    }\n    console.log(files);\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill >\n    <div class=\"wizard-logo-sticker\" [class.mat-elevation-z10]=\"true\">\n        <img class=\"icoapp\" *ngIf=\"!uploadedIcon\" src=\"assets/imgs/logo.png\" >\n        <img class=\"icoapp\" *ngIf=\"uploadedIcon\" [src]=\"uploadedIcon|async\">\n    </div>\n    <div class=\"wizard-card\" [class.mat-elevation-z6]=\"true\">\n        <h1>{{ 'wizardNewMerchantGroup.title' | translate }}</h1>\n        <div fxLayout=\"row wrap\">\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardNewMerchantGroup.name' | translate }}</mat-label>\n                <input matInput placeholder=\"{{ 'wizardNewMerchantGroup.namePlaceholder' | translate }}\" [(ngModel)]=\"formMerchantGroup.name\" >\n            </mat-form-field>\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardNewMerchantGroup.appname' | translate }}</mat-label>\n                <input matInput placeholder=\"Ex. Pet Toys Delivery App\" [(ngModel)]=\"formMerchantGroup.appName\">\n            </mat-form-field>\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardNewMerchantGroup.shortname' | translate }}</mat-label>\n                <input matInput placeholder=\"Ex. PetToys\" [(ngModel)]=\"formMerchantGroup.appShortName\">\n            </mat-form-field>\n            <app-mff-upload-file fxFlex=\"100\" label=\"App Icon\" (onComplete)=\"onUploadIcon($event)\"></app-mff-upload-file>\n            \n            <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"end center\">\n                <button mat-raised-button color=\"primary\" (click)=\"register()\">\n                    {{ 'wizardNewMerchantGroup.register' | translate }}\n                </button>\n\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { map, timeout } from 'rxjs/operators';\nimport { UploadUtil } from 'src/app/shared/upload-util';\nimport { MffUploadFileComponent } from \"src/app/components/mat-form-field/mff-upload-file/mff-upload-file.component\";\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ImgService } from 'src/app/services/img.service';\nimport { MerchantGroupService } from 'src/app/api/services';\nimport { MerchantGroup } from 'src/app/api/models';\nimport { SSUuid } from 'src/app/static-stack/uuid';\nimport { SystemService } from 'src/app/services/system.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-wizard-new-merchant-group',\n  templateUrl: './wizard-new-merchant-group.component.html',\n  styleUrls: ['./wizard-new-merchant-group.component.less']\n})\nexport class WizardNewMerchantGroupComponent implements OnInit {\n\n  constructor(\n    public httpClient:HttpClient,\n    public domSanitizer:DomSanitizer,\n    public imgSvc:ImgService,\n    public merchantGroupSvc:MerchantGroupService,\n    public systemSvc:SystemService,\n    public router:Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public formMerchantGroup={\n    name:\"\",\n    appName:\"\",\n    appShortName:\"\",\n    appIcon:\"\"\n  };\n  \n\n  public uploadedIcon:any=null;\n\n  async onUploadIcon(metadata){\n    this.uploadedIcon=this.imgSvc.getBlobUrlFromHashAsync(metadata.ipfsHash);\n    this.formMerchantGroup.appIcon=metadata.ipfsHash;\n  }\n\n  async register(){\n    var jsonpwa=JSON.stringify({\n      name:this.formMerchantGroup.appName,\n      short_name:this.formMerchantGroup.appShortName,\n      app_icon_ipfs:this.formMerchantGroup.appIcon\n    });\n    var newRegister=<MerchantGroup>{\n      name:this.formMerchantGroup.name,\n      pwaManifest:jsonpwa,\n      id:SSUuid.GenerateV4(),\n      adminMode:'static',\n      createdAt:(new Date()).toISOString()\n    };\n    this.merchantGroupSvc.postApiMerchantGroup(newRegister).subscribe(\n      (d)=>{\n        console.log(d);\n        if (d){\n          this.systemSvc.selectedMerchantGroup=d;\n          if (this.systemSvc.selectedMerchant==null){\n            this.router.navigate([\"/wizard-new-merchant\"]);\n          }\n        }\n      },\n      (e)=>{\n        alert(e);\n      }\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport Enumerable from 'linq';\nimport { Subject } from 'rxjs';\nimport { Catalog, Category, Item, OptionGroup, OptionGroupProduct, Product } from 'src/app/api/models';\nimport { OptionGroupProductService, OptionGroupService, OptionService, ProductService } from 'src/app/api/services';\nimport { CatalogService } from 'src/app/api/services/catalog.service';\nimport { ConfirmDialogComponent } from 'src/app/components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CategoryService } from 'src/app/api/services/category.service';\nimport { ItemService } from 'src/app/api/services/item.service';\nimport { SSUuid } from 'src/app/static-stack/uuid';\nimport { ConfirmDialogModel } from 'src/app/components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { SystemService } from '../system.service';\nimport { SSOrbitdb } from 'src/app/static-stack/orbitdb';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogDataService {\n\n  public catalogs: Catalog[] = [];\n  private _onLoadCatalogsSubject = new Subject<any>();\n  public onLoadCatalogs = this._onLoadCatalogsSubject.asObservable();\n  public categoriesDb: Category[] = [];\n  private _onLoadCategoriesSubject = new Subject<any>();\n  public onLoadCategories = this._onLoadCategoriesSubject.asObservable();\n  categories: Category[] = [];\n  optionGroupProducts: OptionGroupProduct[] = []\n  optionGroups: OptionGroup[] = [];\n  catFilter: string = \"\";\n  loadCatalog: boolean = false;\n  private _catalog: Catalog;\n  public get catalog(): Catalog {\n    return this._catalog;\n  }\n  public set catalog(v: Catalog) {\n    this._catalog = v;\n    this.getCategories(v.id);\n  }\n  constructor(private categorySvc: CategoryService,\n    private catalogSvc: CatalogService,\n    public dialog: MatDialog,\n    private itemSvc: ItemService,\n    private optionGroupProductSvc: OptionGroupProductService,\n    private optionGroupSvc: OptionGroupService,\n    private productSvc: ProductService,\n    private optionSvc: OptionService,\n    private systemSvc: SystemService) {\n\n  }\n  filterCategories() {\n    if (this.catFilter && this.catFilter != \"\") {\n      this.categories = Enumerable.from(this.categoriesDb).where(x => x.id == this.catFilter).toArray();\n    } else {\n      this.categories = Enumerable.from(this.categoriesDb).toArray();\n    }\n  }\n  load() {\n    var _self = this;\n    _self.loadCatalog = true;\n    var id = \"55d0e3fb-f932-11eb-b388-000d3a8abda5\";\n    try {\n      if (this.systemSvc.selectedMerchant.id) {\n        id = this.systemSvc.selectedMerchant.id;\n      }\n    } catch (error) {\n    }\n    this.catalogSvc.getApiCatalogMerchantMerchantId(id).subscribe(\n      (data) => {\n        this.catalogs = data;\n        if (this.catalogs.length > 0) {\n          this.catalog = this.catalogs[0];\n        }\n        this._onLoadCatalogsSubject.next(data);\n        setTimeout(() => {\n          _self.loadCatalog = false;\n        }, 1000);\n\n      }, (error) => {\n        console.log(error);\n        _self.loadCatalog = false;\n      }\n    );\n  }\n  start() {\n    this.catFilter = \"\";\n    this.categories = [];\n    this.categoriesDb = [];\n    this.catalogs = [];\n  }\n\n  getCategories(catalogId: string) {\n    this.categorySvc.getApiCategoryCatalogCatalogId(catalogId).subscribe(\n      (data) => {\n        this.categoriesDb = data;\n        this._onLoadCatalogsSubject.next(this.categoriesDb);\n        this.getOptionGroups();\n        this.filterCategories();\n      },\n      (err) => {\n        console.error(err);\n      }\n    );\n  }\n  getOptionGroups() {\n    this.optionGroupProductSvc.getApiOptionGroupProduct().subscribe(\n      (data) => {\n        this.optionGroupProducts = data\n        this.optionGroupSvc.getApiOptionGroup().subscribe(\n          (data2) => {\n            this.optionGroups = data2;\n            this.populateOptionGroups();\n          }\n        );\n      }\n    )\n  }\n\n  async saveCategory(category: Category) {\n    return new Promise((resolve, reject) => {\n      if (category.id) {\n        this.categorySvc.putApiCategoryId({ id: category.id, body: category }).subscribe((data) => {\n          var c = Enumerable.from(this.categoriesDb).where(x => x.id == category.id).defaultIfEmpty(undefined).firstOrDefault();\n          if (c != undefined) {\n            var idx = this.categoriesDb.indexOf(c);\n            this.categoriesDb[idx] = category;\n          }\n          var c2 = Enumerable.from(this.categories).where(x => x.id == category.id).defaultIfEmpty(undefined).firstOrDefault();\n          if (c2 != undefined) {\n            var idx2 = this.categories.indexOf(c2);\n            this.categories[idx2] = category;\n          }\n          resolve(true);\n          // this.dialogRef.close(category)\n        }, (error) => {\n          reject(error);\n        });\n      } else {\n        category.id = SSUuid.GenerateV4();\n        this.categorySvc.postApiCategory(category).subscribe((data) => {\n          this.categoriesDb.push(data);\n          if (this.catFilter == \"\") {\n            this.categories.push(data);\n          }\n          resolve(true);\n          // this.dialogRef.close(category)\n        }, (error) => {\n          reject(error);\n          console.log(error);\n        });\n      }\n      return\n    });\n\n  }\n\n  deleteCategory(id: string) {\n    return new Promise((resolve, reject) => {\n      this.categorySvc.deleteApiCategoryId(id).subscribe(\n        (ret) => {\n          this.categories = Enumerable.from(this.categories).where(x => x.id != id).toArray();\n        }, (error) => {\n          console.log(error);\n        }\n      );\n    });\n  }\n\n  getItemByCategory(id: string) {\n    return new Promise<Item[]>((resolve, reject) => {\n      this.itemSvc.getApiItemCategoryCategoryId(id).subscribe(\n        (ret) => {\n          resolve(ret);\n        }, (error) => {\n          console.log(error);\n        }\n      );\n    });\n  }\n\n  saveItem(obj: Item) {\n    return new Promise((resolve, reject) => {\n      if (obj.id) {\n        var it: Item = JSON.parse(JSON.stringify(obj));\n        this.setIdsComplements(it);\n        this.itemSvc.putApiItemId({ id: it.id, body: it }).subscribe(\n          (data) => {\n            var cat: Category = Enumerable.from(this.categoriesDb).where(w => w.id == it.categoryId).firstOrDefault();\n            console.log(it);\n            if (cat) {\n              console.log(\"cat\");\n              var item = Enumerable.from(cat.item).where(w => w.id == it.id).firstOrDefault();\n              if (item) {\n                console.log(\"item\");\n                var idx = cat.item.indexOf(item);\n                if (idx >= 0) {\n                  cat.item[idx] = it;\n                  //this.dialogRef.close();\n                  console.log(\"resolve\");\n                  resolve(item);\n                }\n              }\n            }\n          }\n        );\n      } else {\n        var it: Item = JSON.parse(JSON.stringify(obj));\n        it.id = SSUuid.GenerateV4();\n        if (it.productIdNavigation && !it.productIdNavigation.id) {\n          it.productIdNavigation.id = SSUuid.GenerateV4();\n        }\n        this.setIdsComplements(it);\n        this.itemSvc.postApiItem(it).subscribe(\n          (data) => {\n            var cat = Enumerable.from(this.categoriesDb).where(w => w.id == it.categoryId).firstOrDefault();\n            if (cat) {\n              if (cat.item == undefined) {\n                cat.item = [];\n              }\n              if(cat.template != \"PIZZA\"){\n                cat.item.push(it);\n              }\n              resolve(it);\n              //this.dialogRef.close();\n            }\n          }\n        );\n      }\n    });\n  }\n\n  saveProduct(obj: Product) {\n    return new Promise<Product>((resolve, reject) => {\n      if (obj.id) {\n        var p: Product = JSON.parse(JSON.stringify(obj));\n        this.productSvc.putApiProductId({ id: p.id, body: p }).subscribe(\n          (data) => {\n            // var cat: Category = Enumerable.from(this.categoriesDb).where(w => w.id == it.categoryId).firstOrDefault();\n            console.log(data);\n            if (data) {\n              // console.log(\"cat\");\n              // var item = Enumerable.from(cat.item).where(w => w.id == it.id).firstOrDefault();\n              // if (item) {\n              //   console.log(\"item\");\n              //   var idx = cat.item.indexOf(item);\n              //   if (idx >= 0) {\n              //     cat.item[idx] = it;\n              //     //this.dialogRef.close();\n              //     console.log(\"resolve\");\n              //     resolve(item);\n              resolve(data);\n              //   }\n              // }\n            }\n          }\n        );\n      } else {\n        var p: Product = JSON.parse(JSON.stringify(obj));\n        p.id = SSUuid.GenerateV4();\n        // it.productIdNavigation.id = SSUuid.GenerateV4();\n        // this.setIdsComplements(it);\n        this.productSvc.postApiProduct(p).subscribe(\n          (data) => {\n            // var cat = Enumerable.from(this.categoriesDb).where(w => w.id == it.categoryId).firstOrDefault();\n            // if (cat) {\n            //   if (cat.item == undefined) cat.item = [];\n            //   cat.item.push(it);\n            resolve(data);\n            //this.dialogRef.close();\n            // }\n          }\n        );\n      }\n    });\n  }\n\n  saveOptionGroup(obj: OptionGroup) {\n    return new Promise<OptionGroup>((resolve, reject) => {\n      if (obj.id) {\n        var og: OptionGroup = JSON.parse(JSON.stringify(obj));\n        // for (let i = 0; i < og.optionGroupProduct.length; i++) {\n        //   if (!og.optionGroupProduct[i].id) {\n        //     og.optionGroupProduct[i].id = SSUuid.GenerateV4();\n        //   }\n        // }\n        this.optionGroupSvc.putApiOptionGroupId({ id: og.id, body: og }).subscribe(\n          (data) => {\n            // var cat: Category = Enumerable.from(this.categoriesDb).where(w => w.id == it.categoryId).firstOrDefault();\n            console.log(data);\n            if (data) {\n              // console.log(\"cat\");\n              // var item = Enumerable.from(cat.item).where(w => w.id == it.id).firstOrDefault();\n              // if (item) {\n              //   console.log(\"item\");\n              //   var idx = cat.item.indexOf(item);\n              //   if (idx >= 0) {\n              //     cat.item[idx] = it;\n              //     //this.dialogRef.close();\n              //     console.log(\"resolve\");\n              //     resolve(item);\n              resolve(data);\n              //   }\n              // }\n            }\n          }\n        );\n      } else {\n        var og: OptionGroup = JSON.parse(JSON.stringify(obj));\n        og.id = SSUuid.GenerateV4();\n        for (let i = 0; i < og.optionGroupProduct.length; i++) {\n          if (!og.optionGroupProduct[i].id) {\n            og.optionGroupProduct[i].id = SSUuid.GenerateV4();\n          }\n        }\n        // it.productIdNavigation.id = SSUuid.GenerateV4();\n        // this.setIdsComplements(it);\n        this.optionGroupSvc.postApiOptionGroup(og).subscribe(\n          (data) => {\n            // var cat = Enumerable.from(this.categoriesDb).where(w => w.id == it.categoryId).firstOrDefault();\n            // if (cat) {\n            //   if (cat.item == undefined) cat.item = [];\n            //   cat.item.push(it);\n            resolve(data);\n            //this.dialogRef.close();\n            // }\n          }\n        );\n      }\n    });\n  }\n\n  setIdsComplements(item: Item) {\n    try {\n      for (let i = 0; i < item.productIdNavigation.optionGroupProduct.length; i++) {\n        var optionGroupId = item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.id;\n        if (!item.productIdNavigation.optionGroupProduct[i].id) {\n          item.productIdNavigation.optionGroupProduct[i].id = SSUuid.GenerateV4();\n          optionGroupId = SSUuid.GenerateV4();\n          item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.id = optionGroupId\n          item.productIdNavigation.optionGroupProduct[i].optionGroupId = optionGroupId;\n          item.productIdNavigation.optionGroupProduct[i].productId = item.productIdNavigation.id;\n        }\n\n        for (let y = 0; y < item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.option.length; y++) {\n          if (!item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.option[y].id) {\n            item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.option[y].id = SSUuid.GenerateV4();\n            item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.option[y].optionGroupId = optionGroupId;\n          }\n          if (!item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.option[y].productIdNavigation.id) {\n            var productId = SSUuid.GenerateV4();\n            item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.option[y].productIdNavigation.id = productId;\n            item.productIdNavigation.optionGroupProduct[i].optionGroupIdNavigation.option[y].productId = productId;\n          }\n        }\n      }\n    } catch (error) {\n    }\n  }\n\n  deleteItem(item: Item) {\n    return new Promise((resolve, reject) => {\n      this.itemSvc.deleteApiItemId(item.id).subscribe(\n        (ret) => {\n          var cat = Enumerable.from(this.categoriesDb).where(x => x.id == item.categoryId).firstOrDefault();\n          if (cat) {\n            cat.item = Enumerable.from(cat.item).where(x => x.id != item.id).toArray();\n          }\n          resolve(item);\n        }\n      );\n    });\n  }\n  async populateOptionGroups() {\n    for (let i = 0; i < this.categoriesDb.length; i++) {\n      const cat = this.categoriesDb[i];\n      if (this.systemSvc.isStaticAppOnly && cat.item == undefined) {\n        var dbdoc: any = await SSOrbitdb.GetDocInstance('Item');\n        var objs = dbdoc.query((doc) => doc.categoryId == cat.id);\n        cat.item = objs;\n      }\n      for (let j = 0; j < cat.item.length; j++) {\n        const item = cat.item[j];\n        if (!this.systemSvc.isStaticAppOnly) {\n          item.productIdNavigation.optionGroupProduct = Enumerable.from(this.optionGroupProducts).where(x => x.productId == item.productId).toArray();\n          for (let k = 0; k < item.productIdNavigation.optionGroupProduct.length; k++) {\n            const ogp = item.productIdNavigation.optionGroupProduct[k];\n            ogp.optionGroupIdNavigation = Enumerable.from(this.optionGroups).where(x => x.id == ogp.optionGroupId).defaultIfEmpty(null).firstOrDefault();\n          }\n        }\n      }\n    }\n    this.filterCategories();\n  }\n\n  setStatusItem(itemId: string, productId: string, status: string) {\n    return new Promise<void>((resolve, reject) => {\n      this.productSvc.getApiProductIdSharingCount(productId).subscribe(\n        (data) => {\n          var resources = [];\n          if (data.items > 0) {\n            resources.push(\"ITEM\");\n          }\n          if (data.options > 0) {\n            resources.push(\"OPTION\");\n          }\n          if ((data.items + data.options) > 1) {\n            var dialogData: ConfirmDialogModel = {\n              title: \"Shared item\",\n              message: 'this item is shared in another category, add-on group or menu. Do you want to activate on all of them ?',\n              showCancel: true\n            }\n            var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n              maxWidth: \"80vw\",\n              data: dialogData\n            });\n            dialogRef.afterClosed().subscribe(\n              (ok) => {\n                if (ok) {\n                  this.productSvc.putApiProductIdStatus(<ProductService.PutApiProductIdStatusParams>{\n                    id: productId,\n                    resources: resources,\n                    status: status\n                  }).subscribe(\n                    (data2) => {\n                      resolve();\n                    }, (err) => {\n                      reject\n                    }\n                  );\n                }\n              }, (err) => {\n                reject();\n              }\n            );\n          } else {\n            this.itemSvc.putApiItemStatus(<ItemService.PutApiItemStatusParams>{\n              items: [itemId],\n              productId: productId,\n              status: status\n            }).subscribe(\n              (data2) => {\n                resolve();\n              }, (err) => {\n                reject\n              }\n            );\n          }\n        }\n      );\n    });\n  }\n  setStatusOption(itemId: string, productId: string, status: string) {\n    return new Promise<void>((resolve, reject) => {\n      this.productSvc.getApiProductIdSharingCount(productId).subscribe(\n        (data) => {\n          var resources = [];\n          if (data.items > 0) {\n            resources.push(\"ITEM\");\n          }\n          if (data.options > 0) {\n            resources.push(\"OPTION\");\n          }\n          if ((data.items + data.options) > 1) {\n            var dialogData: ConfirmDialogModel = {\n              title: \"Shared Option\",\n              message: 'this Option is shared in another category, add-on group or menu. Do you want to activate on all of them ?',\n              showCancel: true\n            };\n            var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n              maxWidth: \"80vw\",\n              data: dialogData\n            });\n            dialogRef.afterClosed().subscribe(\n              (ok) => {\n                if (ok) {\n                  this.productSvc.putApiProductIdStatus(<ProductService.PutApiProductIdStatusParams>{\n                    id: productId,\n                    resources: resources,\n                    status: status\n                  }).subscribe(\n                    (data2) => {\n                      resolve();\n                    }, (err) => {\n                      reject\n                    }\n                  );\n                }\n              }, (err) => {\n                reject();\n              }\n            );\n          } else {\n            this.optionSvc.putApiOptionStatus(<OptionService.PutApiOptionStatusParams>{\n              options: [itemId],\n              productId: productId,\n              status: status\n            }).subscribe(\n              (data2) => {\n                resolve();\n              }, (err) => {\n                reject\n              }\n            );\n          }\n        }\n      );\n    });\n  }\n\n  getProduct(id: string) {\n    return new Promise<Product>((resolve, reject) => {\n      this.productSvc.getApiProductId(id).subscribe(\n        (data) => {\n          resolve(data);\n        }\n      );\n    });\n  }\n\n  getOptionGroup(id: string) {\n    return new Promise<OptionGroup>((resolve, reject) => {\n      this.optionGroupSvc.getApiOptionGroupId(id).subscribe(\n        (data) => {\n          resolve(data);\n        }\n      );\n    });\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\n\n@Directive({\n  selector: '[ngModelChangeDebounced]'\n})\nexport class ChangeDebouncedDirective {\n  @Output()\n  ngModelChangeDebounced = new EventEmitter<any>();\n  @Input()\n  ngModelChangeDebounceTime = 500; // optional, 500 default\n\n  subscription: Subscription;\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  constructor(private ngModel: NgModel) {\n    this.subscription = this.ngModel.control.valueChanges.pipe(\n      skip(1), // skip initial value\n      distinctUntilChanged(),\n      debounceTime(this.ngModelChangeDebounceTime)\n    ).subscribe((value) => this.ngModelChangeDebounced.emit(value));\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n    <!-- <div class=\"content\" fxLayoutAlign=\"center\">\n        <h1>{{systemSvc.selectedMerchantGroup.name }} - {{systemSvc.selectedMerchant.name}}</h1>\n    </div> -->\n    <section class=\"content wrapanywhere\" fxLayout=\"column\">\n        <h1>\n            {{ 'publish.title' | translate }}\n        </h1>\n        <p>\n            {{ 'publish.message' | translate }}\n        </p>\n        <div fxLayout=\"column\">\n\n\n            <div fxFlex fxLayout.gt-xs=\"row\" fxLayout.lt-sm=\"column\">\n                <div fxLayout=\"column\" [ngClass.gt-xs]=\"{'incontent': true}\">\n                    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                        <img class=\"appicon\" [src]=\"this.appicon\" />\n                    </div>\n                    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                        <small class=\"hyperlink\" (click)=\"mupload.uploadFile()\">{{ 'publish.updateIcon' | translate }}</small>\n                    </div>\n                    <div class=\"invisible\">\n                        <app-mff-upload-file #mupload (onComplete)=\"onUploadIcon($event)\"></app-mff-upload-file>\n                    </div>\n                </div>\n                <div fxFlex fxLayout=\"column\" [ngClass.gt-xs]=\"{'incontent': true}\" >\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>{{ 'publish.appname' | translate }}</mat-label>\n                        <input matInput [(ngModel)]=\"this.appname\">\n                    </mat-form-field>\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>{{ 'publish.shortname' | translate }}</mat-label>\n                        <input matInput [(ngModel)]=\"this.shortname\">\n                    </mat-form-field>\n                </div>\n            </div>\n            \n            <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"\">\n                <small (click)=\"this.showmoreoptions=!this.showmoreoptions\" class=\"hyperlink bottomstick\">\n                    {{ 'publish.show '+(this.showmoreoptions?'less':'more')+' options'|translate }}\n                    {{this.showmoreoptions?'▲':'▼'}}\n                </small>\n            </div>\n\n            <div fxLayout=\"column\" *ngIf=\"this.showmoreoptions\" >\n\n                <mat-checkbox color=\"primary\" checked=\"true\" disabled >\n                    {{ 'publish.genhashdata' | translate }}\n                </mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"generateCustomerAppEnabled\" color=\"primary\" >\n                    {{ 'publish.gencustomapp' | translate }}\n                </mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"publishCustomerAppEnabled\" color=\"primary\" >\n                    {{ 'publish.pubipns' | translate }}\n                </mat-checkbox>\n                <mat-checkbox [(ngModel)]=\"pushHashDataToOrbitDbEnabled\" color=\"primary\" >\n                    {{ 'publish.posthashdata' | translate }}\n                </mat-checkbox>\n                <br>\n\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>{{ 'publish.chooseIpfsGateway' | translate }}</mat-label>\n                    <mat-select [(ngModel)]=\"selectedIpfsGateway\" (selectionChange)=\"setCurrentGateway(this)\">\n                        <mat-option *ngFor=\"let gw of listGateways\" [value]=\"gw\">{{gw}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n\n\n                <div *ngIf=\"useCustomIpfsGatewayEnabled\">\n                    <mat-form-field appearance=\"fill\" fxFlex>\n                        <mat-label>{{ 'publish.customgatewayendpoint' | translate }}</mat-label>\n                        <input matInput [(ngModel)]=\"customGateway\">\n                    </mat-form-field>\n                </div>\n            </div>\n\n\n        </div>\n        <br>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end start\">\n            <button color=\"primary\" mat-raised-button (click)=\"generateAndPublish()\">\n                {{ 'publish.generateandpublish' | translate }}\n            </button>\n        </div>\n        <article *ngIf=\"this.publishingHashData\" class=\"inner-rounded\">\n            <br>\n            <h2>\n                {{ 'publish.publicationsResults' | translate }}\n            </h2>\n            <div fxLayout=\"row\">\n                <b>{{ 'publish.result.hashdatalink' | translate }} </b> &nbsp;<mat-progress-spinner *ngIf=\"publishingHashData==1\"\n                    [mode]=\"'indeterminate'\" diameter=\"20\"></mat-progress-spinner> \n\n                    <span *ngIf=\"genHashDataMsg\">&nbsp; {{genHashDataMsg}}...</span>\n                    \n                    <a *ngIf=\"publishingHashData==2\"\n                    href=\"{{getIpfsGWLink(lastPublication)}}\" target=\"_blank\">{{getIpfsGWLinkView(lastPublication)}}</a>\n            </div>\n            <br>\n\n            <div fxLayout=\"row\">\n                <b>{{ 'publish.result.customerAppLink' | translate }} </b>&nbsp;<mat-progress-spinner *ngIf=\"publishingAppData==1\"\n                    [mode]=\"'indeterminate'\" diameter=\"20\"></mat-progress-spinner> \n                    \n                    <span *ngIf=\"genCustomerAppMsg\">&nbsp; {{genCustomerAppMsg}}...</span>\n\n                    <a *ngIf=\"publishingAppData==2\"\n                    href=\"{{getIpfsGWLink(lastAppPublication)}}\" target=\"_blank\">ipfs://{{(lastAppPublication)}}</a>\n            </div>\n            <br>\n            <div fxLayout=\"row\">\n                <b>{{ 'publish.result.ipnslink' | translate }} </b>&nbsp;<mat-progress-spinner *ngIf=\"publishingIPNS==1\"\n                    [mode]=\"'indeterminate'\" diameter=\"20\"></mat-progress-spinner> \n                    \n                    <span *ngIf=\"genIpnsMsg\">&nbsp; {{genIpnsMsg}}...</span>\n\n                    <a *ngIf=\"publishingIPNS==2\"\n                    href=\"{{getIpnsGWLink(lastIPNSPublication)}}\" target=\"_blank\">ipns://{{(lastIPNSPublication)}}</a>\n            </div>\n        </article>\n    </section>\n    <section class=\"content wrapanywhere\" fxLayout=\"column\" >\n        <h1>\n            {{ 'publish.mintorupdatenft' | translate }}\n        </h1>\n        <div fxLayout=\"column\">\n            <div>\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>{{ 'publish.nft.storename' | translate }}</mat-label>\n                    <input matInput [(ngModel)]=\"odpStoreNameValue\" (ngModelChangeDebounced)=\"checkNFT()\">\n                    <mat-hint class=\"hintwarn\" *ngIf=\"!isWrongNetwork && (!isNftFree && !isNftOwner)\">{{ 'publish.nft.unavailable' | translate }}\n                    </mat-hint>\n                    <mat-hint class=\"hintnice\" *ngIf=\"!isWrongNetwork && (isNftFree)\">{{ 'publish.available' | translate }} 👍</mat-hint>\n                    <mat-hint *ngIf=\"!isWrongNetwork && (isNftOwner)\">{{ 'publish.nft.youowner' | translate }}</mat-hint>\n                </mat-form-field>\n            </div>\n            <div>\n                <mat-form-field appearance=\"fill\" fxFlex>\n                    <mat-label>{{ 'publish.nft.description' | translate }}</mat-label>\n                    <input matInput [(ngModel)]=\"odpStoreDescription\">\n                </mat-form-field>\n            </div>\n            <div>\n                <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                    <mat-label>{{ 'publish.nft.category' | translate }}</mat-label>\n                    <mat-select [(value)]=\"odpStoreCategory\">\n                        <mat-option *ngFor=\"let opt of nftCategoryList\" [value]=\"opt\">\n                            {{'publish.nft.categoryList.'+opt|translate}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div>\n                <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                    <mat-label>{{ 'publish.nft.subcategory' | translate }}</mat-label>\n                    <mat-select [(value)]=\"odpSubStoreCategory\">\n                        <mat-option *ngFor=\"let opt of (nftSubCategoryList[odpStoreCategory]?nftSubCategoryList[odpStoreCategory]:noSubList)\" [value]=\"opt\">\n                            {{'publish.nft.subCategoryList.'+opt|translate}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            \n        </div>\n        <br>\n        <div fxLayout=\"row\" fxLayoutAlign=\"end start\">\n            <button *ngIf=\"isNftFree\" [disabled]=\"publishingAppData<2||isWrongNetwork\" color=\"primary\" mat-raised-button\n                (click)=\"mintNFT()\">\n                {{ 'publish.mintnft' | translate }}\n            </button>\n            <button *ngIf=\"!isNftFree\"\n                [disabled]=\"(publishingAppData<2 && isNftOwner)||lastAppPublication==nftHash||isWrongNetwork||(!isWrongNetwork && (!isNftFree && !isNftOwner))|| lastHashApp==lastAppPublication\"\n                color=\"primary\" mat-raised-button (click)=\"updateNFT()\">\n                {{ 'publish.updatenft' | translate }}\n            </button>\n        </div>\n        <div *ngIf=\"isWrongNetwork\">\n            <span>{{ 'publish.wrongnet' | translate }}<a href=\"#/publish\" (click)=\"checkNetwork()\">{{ 'publish.pleaseconnect' | translate }}</a></span>\n        </div>\n        <div *ngIf=\"!isWrongNetwork\">\n            <div *ngIf=\"publishingAppData<2\">\n                <span>{{ 'publish.genbefore' | translate }}</span>\n            </div>\n            <div *ngIf=\"publishingAppData==2 && (lastAppPublication==nftHash) && hasMintedOrUpdatedNftFlag || (lastHashApp==lastAppPublication && !isNftFree)\">\n                <span>{{ 'publish.alreadyupdated' | translate }}</span>\n            </div>\n            <div *ngIf=\"publishingAppData==2 && !isNftFree && !isNftOwner && !workingWeb3\">\n                <span>{{ 'publish.seeonopensea' | translate }}</span>\n            </div>\n        </div>\n\n        <article *ngIf=\"this.workingWeb3 || this.hasMintedOrUpdatedNftFlag || this.hasMintedOrUpdatedErrorNftFlag\" class=\"inner-rounded\">\n            <br>\n            <h2>\n                {{workingWeb3Title}} Nft status\n            </h2>\n            <div fxLayout=\"row\">\n                <b>ODP-Store NFT Link: </b> &nbsp;<mat-progress-spinner *ngIf=\"workingWeb3\"\n                    [mode]=\"'indeterminate'\" diameter=\"20\"></mat-progress-spinner> \n\n                    <span *ngIf=\"workingWeb3Msg\" [ngClass]=\"{hintwarn:hasMintedOrUpdatedErrorNftFlag}\" >&nbsp; {{workingWeb3Msg}}...</span>\n                    \n                    <a *ngIf=\"this.hasMintedOrUpdatedNftFlag\"\n                href=\"https://opendelivery.app/{{(this.lastMintedNftName)}}\"\n                target=\"_blank\">https://opendelivery.app/{{(this.lastMintedNftName)}}</a>\n            </div>\n        </article>\n\n    </section>\n    <section class=\"content wrapanywhere\" fxLayout=\"column\">\n        <h1>\n            {{ 'publish.lastknown' | translate }}\n        </h1>\n        <p *ngIf=\"this.lastKnownPublications.length==0\">\n            {{ 'publish.notfound' | translate }}\n        </p>\n        <p *ngFor=\"let publication of lastKnownPublications\">\n            <b>{{ 'publish.publication' | translate }} ({{publication.createdAt|date:'yyyy-MM-ddTHH:mm:ss'}})</b>\n            <br *ngIf=\"publication.odpName\">\n            <b *ngIf=\"publication.odpName\">{{ 'publish.publicStoreName' | translate }} </b>\n            <a *ngIf=\"publication.odpName\"\n                href=\"https://opendelivery.app/{{(publication.odpName)}}\"\n                target=\"_blank\">https://opendelivery.app/{{(publication.odpName)}}</a>\n            <br>\n            <b> ODP {{publication.hashPackage?\"Store\":\"HashData\"}} Link: </b>\n            <a *ngIf=\"!publication.hashPackage\" href=\"{{getIpfsGWLink(publication.hash)}}\"\n                target=\"_blank\">{{getIpfsGWLinkView(publication.hash)}}</a>\n            <a *ngIf=\"publication.hashPackage\" href=\"{{getIpfsGWLink(publication.hashPackage)}}\"\n                target=\"_blank\">{{getIpfsGWLinkView(publication.hashPackage)}}</a>\n            <br *ngIf=\"publication.hashPackage\">\n            <b *ngIf=\"publication.hashPackage\">HashData: </b>\n            <a *ngIf=\"publication.hashPackage\" href=\"{{getIpfsGWLink(publication.hash)}}\"\n                target=\"_blank\">{{getIpfsGWLinkView(publication.hash)}}</a>\n            <br>\n\n        </p>\n    </section>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ethers } from 'ethers';\nimport { CustomerAppEndpoint, HashData } from 'src/app/api/models';\nimport { BrandService, HashDataService, MerchantGroupService, MerchantService, ProductService } from 'src/app/api/services';\nimport { CouponService } from 'src/app/api/services/coupon.service';\nimport { CustomerAppEndpointService } from 'src/app/api/services/customer-app-endpoint.service';\nimport { PaymentMethodService } from 'src/app/api/services/payment-method.service';\nimport { SystemService } from 'src/app/services/system.service';\nimport { SSIpfs } from 'src/app/static-stack/ipfs';\nimport { Buffer } from 'buffer'\nimport { SSUuid } from 'src/app/static-stack/uuid';\nimport { CatalogDataService } from 'src/app/services/catalog/catalog-data.service';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\n\nimport all from 'it-all';\nimport { SSLoadLib } from 'src/app/static-stack/loadlib';\nimport { SSWeb3 } from 'src/app/static-stack/web3';\nimport { ImgService } from 'src/app/services/img.service';\nimport { SSOrbitdb } from 'src/app/static-stack/orbitdb';\nimport Enumerable from 'linq';\n@Component({\n  selector: 'app-publish',\n  templateUrl: './publish.component.html',\n  styleUrls: ['./publish.component.scss']\n})\nexport class PublishComponent implements OnInit {\n\n\n\n  static ipfsW3GWList = 'https://gw.crustapps.net/;https://crustwebsites.net/;https://crustipfs.xyz/;https://ipfs-gw.decloud.foundation/;https://ipfs.opendelivery.app/;CUSTOM GATEWAY';\n  static ipfsOdpCustomerAppPublication = \"QmfJRJn8iy96LjKpE4N8m4n9HhddAHacjgbJfDG6yMskLg\";\n  static odpStoreNamesContractAddress = \"0xf65A4ca09786dF44057E307DC8ae61b6C9C5161F\";\n  static odpStoreNamesContractAbi = [\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_appBaseUri\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_contractMetaData\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"foundationWallet\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"approved\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"burn\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"codename\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"ipfs_app\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"createNewStore\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"previousOwner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"renounceOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"newBaseUri\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"updateBaseUri\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"newUri\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"updateContractMetaUri\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"newPrice\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"updateCurrentChangeCodeNamePrice\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"newPrice\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"updateCurrentCreatePrice\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"newPrice\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"updateCurrentUpdatePrice\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"codename\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"updateTokenCodename\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"newUri\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"updateTokenURI\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"name\": \"codeName_to_tokenId\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"contractURI\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"currentChangeCodeNamePrice\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"currentCreatePrice\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"currentUpdatePrice\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"foundationPublicWallet\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"getApproved\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"ownerOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenByIndex\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenId_to_codeName\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenId_to_hashCustomerApp\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"owner\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"index\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenOfOwnerByIndex\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokenId\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"tokenURI\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ];\n\n  constructor(\n    public brandSvc: BrandService,\n    public systemSvc: SystemService,\n    public couponSvc: CouponService,\n    public paymentMethodSvc: PaymentMethodService,\n    public customerAppEndpointSvc: CustomerAppEndpointService,\n    public productSvc: ProductService,\n    public hashdataSvc: HashDataService,\n    public catalogDataSvc: CatalogDataService,\n    public imgSvc: ImgService,\n    public merchantGroupSvc: MerchantGroupService,\n    public merchantSvc: MerchantService\n  ) { }\n  lastKnownPublications = [];\n\n  lastPublication = \"\";\n  lastAppPublication = \"\";\n  lastIPNSPublication = \"\";\n  lastResultTokenMeta = \"\";\n  lastPubHash;\n\n  publishingHashData = 0;\n  publishingAppData = 0;\n  publishingIPNS = 0;\n  publishingNFT = 0;\n\n  generateCustomerAppEnabled = true;\n  publishCustomerAppEnabled = true;\n  pushHashDataToOrbitDbEnabled = true;\n  updateNFTEnabled = true;\n  useCustomIpfsGatewayEnabled = false;\n  selectedIpfsGateway = PublishComponent.ipfsW3GWList.split(\";\")[0];\n  listGateways = PublishComponent.ipfsW3GWList.split(\";\");\n  customGateway = \"http://127.0.0.1:5001/\";\n\n  odpStoreNameValue = \"\";\n  odpStoreDescription = \"A odp D-Store\";\n  odpStoreCategory = \"Food\";\n  nftCategoryList = [\"Food\", \"Pharmacy\", \"Medical services\", \"Gifts\", \"Toys\", \"Games\", \"Finance\", \"Coupons & discounts\", \"Software\", \"Agriculture\", \"Other\"];\n  nftSubCategoryList = {\n    \"Food\": [\n      \"Pizza\",\n      \"Meat & Seafood\",\n      \"BBQ & Grilling\",\n      \"Baked Goods & Desserts\",\n      \"Breakfast Foods\",\n      \"Grains & Pasta\",\n      \"Snack Foods\",\n      \"Soups & Stews\",\n      \"Other\"\n    ],\n    \"Pharmacy\": [\n      \"Drugs & Medications\",\n      \"Compounding\",\n      \"Other\"\n    ],\n    \"Gifts\": [\n      \"Cards & Greetings\",\n      \"Flowers\",\n      \"Other\"\n    ]\n  };\n  noSubList = [\n    \"Other\"\n  ];\n\n  odpSubStoreCategory = \"Other\";\n  appname: string = \"\";\n  shortname: string = \"\";\n\n  isNftOwner = false;\n  isNftFree = true;\n  isWrongNetwork = false;\n  nftHash = \"\";\n  appicon = \"\";\n  showmoreoptions = false;\n\n  genHashDataMsg = \"\";\n  genCustomerAppMsg = \"\";\n  genIpnsMsg = \"\";\n  workingWeb3 = false;\n  workingWeb3Msg = \"\";\n  workingWeb3Title = \"\";\n  hasMintedOrUpdatedNftFlag = false;\n  hasMintedOrUpdatedErrorNftFlag = false;\n  lastMintedNftName = \"\";\n  lastHashdata = \"\";\n  lastHashApp = \"\";\n\n  setCurrentGateway(value) {\n    this.checkCustomGW();\n    localStorage.setItem(\"publish_current_ipfs_gateway\", this.selectedIpfsGateway);\n  }\n\n  checkCustomGW() {\n    if (this.selectedIpfsGateway == \"CUSTOM GATEWAY\") {\n      this.useCustomIpfsGatewayEnabled = true;\n    } else {\n      this.useCustomIpfsGatewayEnabled = false;\n    }\n  }\n\n  getLoweredUnspacedName(strName: string) {\n    return strName.toLowerCase().replace(/ /g, \"\");\n  }\n\n  ngOnInit(): void {\n    this.catalogDataSvc.start();\n    this.catalogDataSvc.load();\n    this.loadHashes();\n    var pwaManifest = JSON.parse(this.systemSvc.selectedMerchantGroup.pwaManifest);\n    this.odpStoreNameValue = this.getLoweredUnspacedName(pwaManifest.odpStoreName ? pwaManifest.odpStoreName : pwaManifest.name);\n    this.appname = pwaManifest.name;\n    this.shortname = pwaManifest.short_name;\n    if (pwaManifest.odpName) {\n      this.odpStoreNameValue = pwaManifest.odpName;\n    }\n    this.imgSvc.getBlobUrlFromHashAsync(pwaManifest.app_icon_ipfs).then(d => {\n      this.appicon = d;\n    });\n    if (this.updateNFTEnabled) {\n      this.checkNFT();\n    }\n\n    let stgGateway = (localStorage.getItem(\"publish_current_ipfs_gateway\"));\n    if (stgGateway) {\n      this.selectedIpfsGateway = stgGateway;\n      this.checkCustomGW();\n    }\n\n  }\n\n  _web3: any = null;\n  async web3() {\n    if (!this._web3) {\n      var web3HTMLElement = await SSLoadLib.loadJSLib(\"web3lib\", \"libs/web3.min.js\");\n      var w3 = new window['Web3'](window['Web3'].givenProvider || \"ws://localhost:8545\");\n      this._web3 = w3;\n      this.checkNetwork();\n    }\n    return this._web3;\n  }\n\n  async checkNetwork() {\n    SSWeb3.checkChainNetwork(\n      () => {\n        document.location.reload();\n      },\n      () => {\n        this.isWrongNetwork = true;\n      });\n  }\n\n  async loadHashes() {\n    let hashes = await this.hashdataSvc.getApiHashData().toPromise();\n    hashes = Enumerable.from(hashes).orderByDescending(p => p.createdAt).toArray();\n    this.lastKnownPublications = hashes;\n    try {\n      let onlyNameds = Enumerable.from(hashes).where(p => (p.odpName != undefined && p.odpName.length > 0)).orderByDescending(p => p.createdAt).toArray();\n      if (onlyNameds.length > 0) {\n        if (onlyNameds[0].hash)\n          this.lastHashdata = onlyNameds[0].hash;\n\n        if (onlyNameds[0].hashApp)\n          this.lastHashApp = onlyNameds[0].hashPackage;\n      }\n    } catch (error) {\n\n    }\n\n  }\n\n  async checkNFT(popAlert = false) {\n    this.isNftOwner = false;\n    var web3 = await this.web3();\n    var odpStoreContract = new web3.eth.Contract(PublishComponent.odpStoreNamesContractAbi, PublishComponent.odpStoreNamesContractAddress);\n\n    var tokenFromCodename = parseInt(await odpStoreContract.methods.codeName_to_tokenId(this.odpStoreNameValue).call());\n    if (tokenFromCodename == 0) {\n      this.isNftFree = true;\n    } else {\n      this.isNftFree = false;\n      var tokenOwner = await odpStoreContract.methods.ownerOf(tokenFromCodename).call();\n      this.nftHash = (await odpStoreContract.methods.tokenId_to_hashCustomerApp(tokenFromCodename).call());\n      var web3Accounts = await web3.eth.requestAccounts();\n      if (tokenOwner != web3Accounts[0]) {\n        if (popAlert) {\n          alert(\"NFT already exists\");\n        }\n        this.isNftOwner = false;\n      } else {\n        this.isNftOwner = true;\n      }\n    }\n    if (this.isNftOwner || this.isNftFree) {\n      let mgroup = this.systemSvc.selectedMerchantGroup;\n      var pwaManifest = JSON.parse(mgroup.pwaManifest);\n      pwaManifest.odpName = this.odpStoreNameValue;\n      mgroup.pwaManifest = JSON.stringify(pwaManifest);\n      let mgroupupdated = await this.merchantGroupSvc.putApiMerchantGroupId({ id: mgroup.id, body: mgroup }).toPromise();\n      this.systemSvc.selectedMerchantGroup = mgroupupdated;\n    }\n    return (this.isNftOwner || this.isNftFree);\n  }\n\n  async generateMetadata() {\n    if (this.updateNFTEnabled) {\n      var ipfsGw = this.useCustomIpfsGatewayEnabled ? this.customGateway : this.selectedIpfsGateway;\n      (await SSIpfs.getIpfsHttpScriptInstance());\n      const Ipfs = window[\"IpfsHttpClient\"];\n      const pair = ethers.Wallet.createRandom();\n      const sig = await pair.signMessage(pair.address);\n      const authHeaderRaw = `eth-${pair.address}:${sig}`;\n      const authHeader = Buffer.from(authHeaderRaw).toString('base64');\n      const ipfs = Ipfs.create({\n        url: `${ipfsGw}api/v0`,\n        headers: this.useCustomIpfsGatewayEnabled ? undefined : {\n          authorization: `Basic ${authHeader}`\n        }\n      });\n      var pwaManifest = JSON.parse(this.systemSvc.selectedMerchantGroup.pwaManifest);\n      var nftFiles = [\n        {\n          path: `token-meta.json`,\n          content: JSON.stringify({\n            name: pwaManifest.name,\n            description: pwaManifest.description ? pwaManifest.description : this.odpStoreDescription,\n            image: `ipfs://${pwaManifest.app_icon_ipfs}`,\n            external_url: `${(this.useCustomIpfsGatewayEnabled ? \"https://crustwebsites.net/\" : this.selectedIpfsGateway)}ipfs/${this.lastAppPublication}`,\n            attributes: [\n              {\n                \"trait_type\": \"subcategory\",\n                \"name\": \"subcategory\",\n                \"value\": `${this.odpSubStoreCategory}`\n              },\n              {\n                \"trait_type\": \"category\",\n                \"name\": \"category\",\n                \"value\": `${this.odpStoreCategory}`\n              },\n              {\n                \"trait_type\": \"operation\",\n                \"name\": \"operation\",\n                \"value\": \"delivery/takeout\"\n              }\n            ]\n          })\n        }\n      ];\n\n      var lastResultTokenMeta = null;\n      for await (const result of ipfs.addAll(nftFiles)) {\n        console.log(result)\n        lastResultTokenMeta = result;\n        console.log(\"PUBLISHED TOKEN META HASH: \" + lastResultTokenMeta.cid.toString());\n        this.lastResultTokenMeta = lastResultTokenMeta.cid.toString();\n\n        this.publishingNFT = 2;\n      };\n    }\n  }\n\n  async mintNFT() {\n    try {\n      await this.generateMetadata();\n      this.isNftFree = false;\n      this.hasMintedOrUpdatedErrorNftFlag = false;\n      this.hasMintedOrUpdatedNftFlag = false;\n      let Web3 = <any>window['Web3'];\n      let web3 = await this.web3();\n      var odpStoreContract = new web3.eth.Contract(PublishComponent.odpStoreNamesContractAbi, PublishComponent.odpStoreNamesContractAddress);\n      var gasPrice = await web3.eth.getGasPrice();\n      var pwaManifest = JSON.parse(this.systemSvc.selectedMerchantGroup.pwaManifest);\n      var web3Accounts = await web3.eth.requestAccounts();\n      var mintPrice = parseInt(await odpStoreContract.methods.currentCreatePrice().call());\n      var createNewStoreMethodCall = (await odpStoreContract.methods.createNewStore(this.odpStoreNameValue, this.lastResultTokenMeta));\n      this.workingWeb3 = true;\n      this.workingWeb3Title = \"Minting\";\n      this.lastMintedNftName = this.odpStoreNameValue;\n      this.workingWeb3Msg = \"waiting for metamask transaction confirmation\";\n      var _gasLimit = \"1000000\";\n      var _value = mintPrice;\n      var _gasPrice = Math.floor(gasPrice * 1.1).toString();\n      var mintTx = await createNewStoreMethodCall.send({ from: web3Accounts[0], value: _value, gasPrice: _gasPrice, gasLimit: _gasLimit });\n      console.log(mintTx);\n      var hashp: HashData = JSON.parse(JSON.stringify(this.lastPubHash));\n      hashp.odpName = this.odpStoreNameValue;\n      var hashOdpName = await this.hashdataSvc.postApiHashDataResponse(hashp).toPromise();\n      this.lastPubHash = hashOdpName;\n      this.hasMintedOrUpdatedNftFlag = true;\n      this.workingWeb3Msg = \"\";\n      this.loadHashes();\n      setTimeout(() => {\n        this.checkNFT();\n      }, 5000);\n    } catch (error) {\n      this.workingWeb3Msg = \"Error minting NFT\";\n      try {\n        this.workingWeb3Msg += \": (\" + error.code + \") \" + error.message;\n      } catch (err) {\n\n      }\n      this.hasMintedOrUpdatedErrorNftFlag = true;\n      setTimeout(() => {\n        this.checkNFT();\n      }, 100);\n    }\n    this.workingWeb3Title = \"\";\n    this.workingWeb3 = false;\n\n  }\n\n  async updateNFT() {\n\n    try {\n      await this.generateMetadata();\n      this.isNftFree = false;\n      this.hasMintedOrUpdatedErrorNftFlag = false;\n      this.hasMintedOrUpdatedNftFlag = false;\n      this.nftHash = this.lastAppPublication;\n      let Web3 = <any>window['Web3'];\n      let web3 = await this.web3();\n      var odpStoreContract = new web3.eth.Contract(PublishComponent.odpStoreNamesContractAbi, PublishComponent.odpStoreNamesContractAddress);\n      var gasPrice = await web3.eth.getGasPrice();\n      var pwaManifest = JSON.parse(this.systemSvc.selectedMerchantGroup.pwaManifest);\n      var web3Accounts = await web3.eth.requestAccounts();\n\n      var tokenFromCodename = parseInt(await odpStoreContract.methods.codeName_to_tokenId(this.odpStoreNameValue).call());\n\n      var currentUpdatePrice = parseInt(await odpStoreContract.methods.currentUpdatePrice().call());\n      var updateURIMethodCall = (await odpStoreContract.methods.updateTokenURI(this.lastResultTokenMeta, tokenFromCodename.toString()));\n      this.workingWeb3 = true;\n      this.workingWeb3Title = \"Updating\";\n      this.lastMintedNftName = this.odpStoreNameValue;\n      this.workingWeb3Msg = \"waiting for metamask transaction confirmation\";\n      var _gasLimit = \"1000000\";\n      var _value = currentUpdatePrice;\n      var _gasPrice = Math.floor(gasPrice * 1.1).toString();\n      var mintTx = await updateURIMethodCall.send({ from: web3Accounts[0], value: _value, gasPrice: _gasPrice, gasLimit: _gasLimit });\n      console.log(mintTx);\n      var hashp: HashData = JSON.parse(JSON.stringify(this.lastPubHash));\n      hashp.odpName = this.odpStoreNameValue;\n      var hashOdpName = await this.hashdataSvc.postApiHashDataResponse(hashp).toPromise();\n      this.lastPubHash = hashOdpName;\n      this.hasMintedOrUpdatedNftFlag = true;\n      this.workingWeb3Msg = \"\";\n      this.loadHashes();\n      setTimeout(() => {\n        this.checkNFT();\n      }, 5000);\n    } catch (error) {\n      this.workingWeb3Msg = \"Error updating NFT\";\n      try {\n        this.workingWeb3Msg += \": (\" + error.code + \") \" + error.message;\n      } catch (err) {\n\n      }\n      this.hasMintedOrUpdatedErrorNftFlag = true;\n      setTimeout(() => {\n        this.checkNFT();\n      }, 100);\n    }\n    this.workingWeb3Title = \"\";\n    this.workingWeb3 = false;\n\n\n  }\n\n\n  getIpfsGWLink(cid) {\n    return (this.useCustomIpfsGatewayEnabled ? this.customGateway : this.selectedIpfsGateway) + \"ipfs/\" + cid;\n  }\n\n  getIpfsGWLinkView(cid) {\n    return \"ipfs://\" + cid;\n  }\n\n  getIpnsGWLink(ipns) {\n    return (this.useCustomIpfsGatewayEnabled ? this.customGateway : this.selectedIpfsGateway) + \"ipns/\" + ipns;\n  }\n\n  getOdpStoreLink(cid) {\n    let _odpStoreLink = \"ipfs://\" + PublishComponent.ipfsOdpCustomerAppPublication + \"/#/?cid=\" + cid;\n    return _odpStoreLink;\n  }\n\n  getOdpStoreGatewayLink(cid) {\n    let _odpStoreLink = (this.useCustomIpfsGatewayEnabled ? this.customGateway : this.selectedIpfsGateway) + \"ipfs/\" + PublishComponent.ipfsOdpCustomerAppPublication + \"/#/?cid=\" + cid;\n    return _odpStoreLink;\n  }\n\n  async onUploadIcon(metadata) {\n    let mgroup = this.systemSvc.selectedMerchantGroup;\n    this.appicon = await this.imgSvc.getBlobUrlFromHashAsync(metadata.ipfsHash);\n    var pwaManifest = JSON.parse(mgroup.pwaManifest);\n    pwaManifest.app_icon_ipfs = metadata.ipfsHash;\n    mgroup.pwaManifest = JSON.stringify(pwaManifest);\n    let mgroupupdated = await this.merchantGroupSvc.putApiMerchantGroupId({ id: mgroup.id, body: mgroup }).toPromise();\n    this.systemSvc.selectedMerchantGroup = mgroupupdated;\n    console.log(this.systemSvc.selectedMerchantGroup);\n  }\n\n  cleanStringify(object) {\n    if (object && typeof object === 'object') {\n      object = this.copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n  }\n\n  copyWithoutCircularReferences(references, object, maxDepth = 10, depth = 0) {\n    var _self = this;\n    var cleanObject = {};\n    Object.keys(object).forEach(function (key) {\n      var value = object[key];\n      if (value && typeof value === 'object') {\n        if (references.indexOf(value) < 0 || depth < maxDepth) {\n          references.push(value);\n          cleanObject[key] = _self.copyWithoutCircularReferences(references, value, maxDepth, depth + 1);\n          references.pop();\n        } else {\n          cleanObject[key] = '###_Circular_###';\n        }\n      } else if (typeof value !== 'function') {\n        cleanObject[key] = value;\n      }\n    });\n    return cleanObject;\n  }\n\n\n\n  async generateAndPublish() {\n    console.log(\"publishing\");\n    this.hasMintedOrUpdatedErrorNftFlag = false;\n    this.hasMintedOrUpdatedNftFlag = false;\n    this.lastMintedNftName = \"\";\n    this.genHashDataMsg = \"collecting data\";\n    let mgroup = this.systemSvc.selectedMerchantGroup;\n    var pwaManifest = JSON.parse(mgroup.pwaManifest);\n    pwaManifest.name = this.appname;\n    pwaManifest.short_name = this.shortname;\n    pwaManifest.odpName = this.odpStoreNameValue;\n    mgroup.pwaManifest = JSON.stringify(pwaManifest);\n    this.systemSvc.selectedMerchantGroup = mgroup;\n\n    this.publishingHashData = 1;\n    if (this.generateCustomerAppEnabled) this.publishingAppData = 1;\n    if (this.publishCustomerAppEnabled) this.publishingIPNS = 1;\n\n    this.genHashDataMsg = \"setting ipfs gateway\";\n\n    var ipfsGw = this.useCustomIpfsGatewayEnabled ? this.customGateway : this.selectedIpfsGateway;\n\n    const ipfsScript = (await SSIpfs.getIpfsHttpScriptInstance());\n    const Ipfs = window[\"IpfsHttpClient\"];\n\n    const pair = ethers.Wallet.createRandom();\n    const sig = await pair.signMessage(pair.address);\n    const authHeaderRaw = `eth-${pair.address}:${sig}`;\n    const authHeader = Buffer.from(authHeaderRaw).toString('base64');\n\n    var datahashChannel = \"\";\n    var logDatahashChannel: any = null;\n\n\n    const ipfs = Ipfs.create({\n      url: `${ipfsGw}api/v0`,\n      headers: this.useCustomIpfsGatewayEnabled ? undefined : {\n        authorization: `Basic ${authHeader}`\n      }\n    });\n\n    if (this.pushHashDataToOrbitDbEnabled) {\n      try {\n        var _ipfsNode = await SSIpfs.getNode();\n        var scriptElm = await SSOrbitdb.GetOrbitDbInstance(_ipfsNode);\n        logDatahashChannel = await SSOrbitdb.GetLogInstancePool(this.systemSvc.selectedMerchant.id + \"_hashdata\");\n\n        datahashChannel = logDatahashChannel.id;\n        console.log(\"dataHashChannel: \" + datahashChannel);\n        this.genHashDataMsg = \"creating dataHash channel\";\n      } catch (error) {\n\n      }\n\n    }\n\n    this.genHashDataMsg = \"collecting brand data\";\n    var brandObj = await this.brandSvc.getApiBrandId(this.systemSvc.selectedMerchantGroup.id).toPromise();\n    if (brandObj != null && brandObj) {\n      brandObj.merchant.forEach(_merc => {\n        _merc.delinetPrivateKey = datahashChannel;\n        _merc.catalog.forEach(_catalog => {\n          try {\n            _catalog.merchantIdNavigation.delinetPrivateKey = \"*\";\n            delete _catalog.merchantIdNavigation;\n          } catch (error) {\n          }\n        });\n      });\n\n      const files: {\n        path: string;\n        content: string | Blob;\n      }[] = [\n          {\n            path: `/data/${brandObj!['id']}.json`,\n            content: JSON.stringify(brandObj)\n          },\n          {\n            path: `/data/id`,\n            content: brandObj!['id']\n          }\n        ];\n\n\n      this.genHashDataMsg = \"collecting products data\";\n      var productRequest = await this.productSvc.getApiProductMerchantGroupMerchantGroupIdResponse(this.systemSvc.selectedMerchantGroup.id).toPromise();\n      if (productRequest != null && productRequest.body) {\n        files.push({\n          path: `/data/product-list.json`,\n          content: JSON.stringify(productRequest.body)\n        })\n\n        for (let index = 0; index < productRequest.body.length; index++) {\n          const p = productRequest.body[index];\n          files.push({\n            path: `/data/product/${p.id}.json`,\n            content: JSON.stringify(p)\n          });\n\n          if (p.image) {\n            files.push({\n              path: \"/data/images/\" + p.id,\n              content: (await SSIpfs.getImageBlobFromIpfs(p.image))\n            })\n          }\n\n        }\n      }\n\n      this.genHashDataMsg = \"collecting merchants data\";\n      for (let idxMerchant = 0; idxMerchant < brandObj.merchant.length; idxMerchant++) {\n        const brandMerchant = brandObj.merchant[idxMerchant];\n        let merchant = await this.merchantSvc.getApiMerchantId(brandMerchant.id).toPromise();\n\n        var couponsRequest = await this.couponSvc.getApiCouponMerchantMerchantIdResponse(merchant.id).toPromise();\n        if (couponsRequest != null && couponsRequest.body) {\n          files.push({\n            path: `/data/merchant/${merchant.id}/coupon-list.json`,\n            content: JSON.stringify(couponsRequest.body)\n          })\n        }\n\n        var paymentMethodRequest = await this.paymentMethodSvc.getApiPaymentMethodMerchantMerchantIdResponse(merchant.id).toPromise();\n        if (paymentMethodRequest != null && paymentMethodRequest.body) {\n          let paymentList=paymentMethodRequest.body;\n          if (!paymentList || paymentList.length==0){\n            try {\n              paymentList=this.systemSvc.localSettings['Payment Methods'][\"Methods\"];\n            } catch (err) {\n              console.log(err);\n            }\n          }\n          files.push({\n            path: `/data/merchant/${merchant.id}/payment-method-list.json`,\n            content: JSON.stringify(paymentList)\n          })\n        }\n\n        var catalogsM = merchant.catalog;\n        files.push({\n          path: `/data/merchant/${merchant.id}/catalog-list.json`,\n          content: JSON.stringify(catalogsM)\n        });\n        catalogsM.forEach(_catalog => {\n          files.push({\n            path: `/data/merchant/${merchant.id}/catalog/${_catalog.id}/category-list.json`,\n            content: JSON.stringify(_catalog.category)\n          });\n\n          _catalog.category.forEach(_category => {\n            console.log(\"CATITEM>\");\n            console.log(_catalog);\n            files.push({\n              path: `/data/merchant/${merchant.id}/catalog/${_catalog.id}/category/${_category.id}/items-list.json`,\n              content: JSON.stringify(_category.item)\n            });\n            _category.item.forEach(_itm => {\n              files.push({\n                path: `/data/item/${_itm.id}.json`,\n                content: JSON.stringify(_itm)\n              });\n            })\n          })\n        })\n\n        this.genHashDataMsg = \"collecting endpoints data\";\n        var customerAppEndPointRequest = await this.customerAppEndpointSvc.getApiCustomerAppEndpointMerchantMerchantIdResponse(merchant.id).toPromise();\n        if (customerAppEndPointRequest != null && customerAppEndPointRequest.body) {\n          if (customerAppEndPointRequest.body.length > 0) {\n            files.push({\n              path: `/data/merchant/${merchant.id}/customer-app-endpoint-list.json`,\n              content: JSON.stringify(customerAppEndPointRequest.body)\n            })\n          } else {\n            var custAppEndpoints: CustomerAppEndpoint[] = [];\n            if (merchant.delinetEndpoint.toLowerCase().indexOf(\"orbit\") >= 0) {\n              custAppEndpoints.push({\n                id: merchant.id,\n                createdAt: this.systemSvc.selectedMerchantGroup.createdAt,\n                protocolType: \"ORBIT_DB\",\n                uri: merchant.delinetEndpoint,\n                type: \"ORDER\",\n                publicKey: merchant.delinetPublicKey,\n                privateKey: merchant.delinetPrivateKey,\n                merchantId: merchant.id,\n                status: \"active\"\n              })\n            }\n            if (merchant.delinetEndpoint == \"https://api.whatsapp.com\") {\n              custAppEndpoints.push({\n                id: merchant.id,\n                createdAt: this.systemSvc.selectedMerchantGroup.createdAt,\n                protocolType: \"WHATSAPP\",\n                uri: merchant.delinetEndpoint,\n                type: \"ORDER\",\n                publicKey: merchant.delinetPublicKey,\n                privateKey: merchant.delinetPrivateKey,\n                merchantId: merchant.id,\n                status: \"active\"\n              })\n            }\n\n            files.push({\n              path: `/data/merchant/${merchant.id}/customer-app-endpoint-list.json`,\n              content: JSON.stringify(custAppEndpoints)\n            })\n          }\n\n        }\n      }\n\n      console.log(files);\n      var lastResult = null;\n      this.genHashDataMsg = \"uploading data\";\n      for await (const result of ipfs.addAll(files)) {\n        console.log(result)\n        this.genHashDataMsg = \"uploading \" + result.path;\n        lastResult = result;\n      };\n      console.log(\"PUBLISHED HASH: \" + lastResult.cid.toString());\n      this.genHashDataMsg = \"\";\n      this.lastPublication = lastResult.cid.toString();\n      this.publishingHashData = 2;\n\n      if (lastResult.cid) {\n        var hash = await this.hashdataSvc.postApiHashDataResponse({ id: SSUuid.GenerateV4(), hash: lastResult.cid.toString(), merchantGroupId: this.systemSvc.selectedMerchantGroup.id, createdAt: (new Date()).toISOString() }).toPromise();\n        this.lastPubHash = hash.body;\n        this.loadHashes();\n        if (this.pushHashDataToOrbitDbEnabled) {\n          var hashP2p = await logDatahashChannel.add(lastResult.cid.toString());\n          console.log(\"hashP2p: \" + hashP2p);\n        }\n\n      }\n\n      if (this.generateCustomerAppEnabled) {\n        this.genCustomerAppMsg = \"generating customer app\";\n        var customerAppIpfsDir = await this.getCustomerAppIpfsFiles(this.lastPublication, datahashChannel, 0, null, \"\", ipfs);\n\n        var lastResultApp = null;\n        var results = [];\n        console.log(\"ready to upload files\");\n        console.log(customerAppIpfsDir);\n        this.genCustomerAppMsg = \"uploading files\";\n        for await (const result of ipfs.addAll(customerAppIpfsDir, { pin: true })) {\n          console.log(result);\n          this.genCustomerAppMsg = \"uploading '\" + result.path + \"'\";\n          results.push(result);\n          lastResultApp = result;\n        };\n\n        let list1 = Enumerable.from(customerAppIpfsDir).select(p => p.path).toArray();\n        let list2 = Enumerable.from(results).select(p => '/' + p.path).toArray();\n        let diff = Enumerable.from(list1).where(p => list2.indexOf(p) < 0).toArray();\n\n        this.lastAppPublication = lastResultApp.cid.toString();\n        console.log(\"PUBLISHED APP HASH: \" + lastResultApp.cid.toString());\n        this.publishingAppData = 2;\n        this.genCustomerAppMsg = \"\";\n\n        var hashPackage = await this.hashdataSvc.postApiHashDataResponse({ id: hash.body.id, hash: lastResult.cid.toString(), hashPackage: lastResultApp.cid.toString(), hashApp: PublishComponent.ipfsOdpCustomerAppPublication, merchantGroupId: this.systemSvc.selectedMerchantGroup.id, createdAt: hash.body.createdAt }).toPromise();\n        this.lastPubHash = hashPackage.body;\n        this.loadHashes();\n        console.log(hashPackage);\n        this.publishingNFT = 2;\n\n        if (this.publishCustomerAppEnabled) {\n          this.genIpnsMsg = \"updating IPNS link\";\n          const res = await ipfs.name.publish(this.lastAppPublication);\n          this.lastIPNSPublication = res.name;\n          this.publishingIPNS = 2;\n          this.genIpnsMsg = \"\";\n          var hashp = JSON.parse(JSON.stringify(this.lastPubHash));\n          hashp.ipns = this.lastIPNSPublication;\n          var hashIpns = await this.hashdataSvc.postApiHashDataResponse(hashp).toPromise();\n          this.lastPubHash = hashIpns.body;\n          this.loadHashes();\n          console.log(hashIpns);\n        }\n\n\n      }\n\n      //API Add new Hash\n    }\n\n  }\n\n  async getCustomerAppIpfsFiles(lastPublication: string, datahashChannel: string, depth: number = 0, cid = null, path = \"\", ipfsnode = null) {\n    const ipfs = ipfsnode ? ipfsnode : await SSIpfs.getNode();\n    this.genCustomerAppMsg = \"searching for customerApp files\";\n    const files = await all(ipfs.ls(`/ipfs/${cid ? cid : PublishComponent.ipfsOdpCustomerAppPublication}`));\n    console.log(\"ls fils getted: \" + path + \" / \" + cid);\n    var ret = [];\n    try {\n      let pwaManifest = JSON.parse(this.systemSvc.selectedMerchantGroup.pwaManifest);\n      for (let index = 0; index < files.length; index++) {\n        const file = <any>files[index];\n        console.log(\"getting file: \" + file.name);\n\n        this.genCustomerAppMsg = \"getting '\" + file.name + \"'\";\n\n        console.log(file);\n        console.log(file.cid.toString());\n        if (file.type == \"file\") {\n          if (file.name == \"manifest.webmanifest\") {\n            console.log(\"adding webmanifest\");\n            ret.push({\n              path: \"/app/\" + path + file.name,\n              content: `\n            {\n              \"name\": \"${pwaManifest.name}\",\n              \"short_name\": \"${pwaManifest.short_name}\",\n              \"theme_color\": \"#1976d2\",\n              \"background_color\": \"#fafafa\",\n              \"display\": \"standalone\",\n              \"scope\": \"./\",\n              \"start_url\": \"./\",\n              \"merchantGroupId\": \"${this.systemSvc.selectedMerchantGroup.id}\",\n              \"endpoints\": [\n                {\n                  \"createdAt\": \"\",\n                  \"headers\": \"\",\n                  \"index\": 0,\n                  \"merchantId\": \"${this.systemSvc.selectedMerchant.id}\",\n                  \"params\": \"\",\n                  \"privateKey\": \"\",\n                  \"publicKey\": \"${lastPublication}\",\n                  \"status\": \"ACTIVE\",\n                  \"type\": \"DATA\",\n                  \"protocolType\": \"IPFS\",\n                  \"uri\": \"${(this.useCustomIpfsGatewayEnabled ? \"https://crustwebsites.net/\" : this.selectedIpfsGateway)}ipfs/{publicKey}\",\n                  \"uriFallback\":\"${PublishComponent.ipfsW3GWList}\"\n                },\n                {\n                  \"createdAt\": \"\",\n                  \"headers\": \"\",\n                  \"index\": 1,\n                  \"merchantId\": \"${this.systemSvc.selectedMerchant.id}\",\n                  \"params\": \"\",\n                  \"privateKey\": \"\",\n                  \"publicKey\": \"${lastPublication}\",\n                  \"status\": \"ACTIVE\",\n                  \"type\":\"HASH_DATA\",\n                  \"protocolType\": \"ORBIT_DB\",\n                  \"uri\": \"${datahashChannel}\"\n                }\n              ],\n              \"icons\": [\n                {\n                  \"src\": \"assets/icons/app-icon.png\",\n                  \"sizes\": \"192x192\",\n                  \"type\": \"image/png\"\n                }\n              ]\n            }\n            `\n            });\n\n            console.log(\"adding app-icon.png\");\n            console.log(pwaManifest);\n            if (pwaManifest.app_icon_ipfs) {\n              ret.push({\n                path: \"/app/assets/icons/app-icon.png\",\n                content: (await SSIpfs.getImageBlobFromIpfs(pwaManifest.app_icon_ipfs))\n              });\n            }\n\n            console.log(\"File '\" + file.name + \"' loaded\")\n          }\n          else if (file.name == \"index.html\") {\n            var dataFromIpfs = uint8ArrayConcat(await all(ipfs.cat(file.cid.toString())));\n            var string = new TextDecoder().decode(dataFromIpfs);\n            if (string.indexOf(\"<title>ODPCustomerApp</title>\") >= 0) {\n              string = string.replace(\"<title>ODPCustomerApp</title>\", `<title>${pwaManifest.name}</title>`);\n              string = string.replace(\"<script>window['odp_terminal_base_currency']='USD'</script>\", `<script>window['odp_terminal_base_currency']='${this.systemSvc.baseCurrency}'</script>`);\n            }\n            ret.push({\n              path: \"/app/\" + path + file.name,\n              content: string\n            });\n          }\n          else {\n            if (file.name.toLowerCase().endsWith(\".js\") || file.name.toLowerCase().endsWith(\".html\")) {\n              var dataFromIpfs = uint8ArrayConcat(await all(ipfs.cat(file.cid.toString())));\n              var string = new TextDecoder().decode(dataFromIpfs);\n\n              ret.push({\n                path: \"/app/\" + path + file.name,\n                content: string\n              });\n            } else {\n              ret.push({\n                path: \"/app/\" + path + file.name,\n                content: uint8ArrayConcat(await all(ipfs.cat(file.cid.toString())))\n              });\n            }\n\n          }\n\n\n\n        } else if (file.type == \"dir\") {\n          console.log(\"getting dir: \" + path + file.name + \" / cid: \" + file.cid.toString());\n\n          var subFiles = await this.getCustomerAppIpfsFiles(lastPublication, datahashChannel, depth + 1, file.cid, path + file.name + \"/\", ipfs);\n          ret = ret.concat(subFiles);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      console.log(ret);\n      console.log(files);\n      console.log(cid);\n    }\n\n    return ret;\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill>\n    <div class=\"wizard-logo-sticker\" [class.mat-elevation-z10]=\"true\">\n        <img class=\"icoapp\" *ngIf=\"!imgLogo\" src=\"assets/imgs/logo.png\">\n        <img class=\"icoapp\" *ngIf=\"imgLogo\" [src]=\"imgLogo\">\n    </div>\n    <div class=\"wizard-card\" [class.mat-elevation-z6]=\"true\">\n        <h1>{{ 'wizardMerchant.title' | translate }}</h1>\n        <div fxLayout=\"row wrap\">\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardMerchant.name' | translate }}</mat-label>\n                <input matInput placeholder=\"Enter your local store name\" [(ngModel)]=\"formMerchant.name\">\n            </mat-form-field>\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardMerchant.street' | translate }}</mat-label>\n                <input matInput placeholder=\"Ex. 123 Main Street \" [(ngModel)]=\"formMerchant.streetAddress\">\n            </mat-form-field>\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardMerchant.phone' | translate }}</mat-label>\n                <input matInput placeholder=\"{{ 'wizardMerchant.phoneMask' | translate }}\" [(ngModel)]=\"formMerchant.phone\">\n            </mat-form-field>\n \n            <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"\">\n                <small (click)=\"this.showMoreOptions=!this.showMoreOptions\" class=\"hyperlink bottomstick\">\n                    {{ 'publish.show '+(this.showMoreOptions?'less':'more')+' options'|translate }}\n                    {{this.showMoreOptions?'▲':'▼'}}</small>\n            </div>\n\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\" *ngIf=\"this.showMoreOptions\">\n                <mat-label>{{ 'wizardMerchant.email' | translate }}</mat-label>\n                <input matInput placeholder=\"{{ 'wizardMerchant.emailPlaceholder' | translate }}\" [(ngModel)]=\"formMerchant.email\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\" *ngIf=\"this.showMoreOptions\">\n                <mat-label>{{ 'wizardMerchant.basecurrency' | translate }}</mat-label>\n                <mat-select [(value)]=\"formMerchant.baseCurrency\">\n                    <mat-option *ngFor=\"let opt of currencyOptions\" [value]=\"opt\">\n                        {{opt}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\" *ngIf=\"this.showMoreOptions\">\n                <mat-label>{{ 'wizardMerchant.orderschannel' | translate }}</mat-label>\n                <mat-select [(value)]=\"selectedOptChannel\">\n                    <mat-option *ngFor=\"let opt of channelOptions\" [value]=\"opt\">\n                        {{opt}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"selectedOptChannel==channelOptions[1]\" fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardMerchant.customEndpoint' | translate }}</mat-label>\n                <input matInput\n                    placeholder=\"Ex. /orbitdb/zdpuAqayxwvqAbrwRkAHwya5sqDbSL6iu3s738AXZ3eruMnLX/open-food-delivery-network \"\n                    [(ngModel)]=\"formMerchant.delinetendpoint\">\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"selectedOptChannel==channelOptions[2]\" fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardMerchant.customEndpoint' | translate }}</mat-label>\n                <input matInput\n                    placeholder=\"Ex. https://myopendelivery.com/api \"\n                    [(ngModel)]=\"formMerchant.delinetendpoint\">\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"selectedOptChannel==channelOptions[3]\" fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>{{ 'wizardMerchant.whatsapp' | translate }}</mat-label>\n                <input matInput\n                    placeholder=\"Ex. +112123123123 \"\n                    [(ngModel)]=\"formMerchant.delinetendpoint\">\n            </mat-form-field>\n            <br>\n\n            <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"end center\">\n                <button mat-raised-button color=\"primary\" (click)=\"register()\">\n                    {{ 'wizardMerchant.register' | translate }}\n                </button>\n\n            </div>\n        </div>\n    </div>\n\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Catalog, CustomerAppEndpoint, Merchant } from 'src/app/api/models';\nimport { CatalogService, CustomerAppEndpointService, MerchantService } from 'src/app/api/services';\nimport { ImgService } from 'src/app/services/img.service';\nimport { SystemService } from 'src/app/services/system.service';\nimport { SSIpfs } from 'src/app/static-stack/ipfs';\nimport { SSOrbitdb } from 'src/app/static-stack/orbitdb';\nimport { SSUuid } from 'src/app/static-stack/uuid';\nimport { CryptoService } from \"src/app/services/crypto.service\";\nimport { getCurrency } from \"locale-currency\";\n\n@Component({\n  selector: 'app-wizard-new-merchant',\n  templateUrl: './wizard-new-merchant.component.html',\n  styleUrls: ['./wizard-new-merchant.component.less']\n})\nexport class WizardNewMerchantComponent implements OnInit {\n\n  constructor(\n    public httpClient: HttpClient,\n    public domSanitizer: DomSanitizer,\n    public imgSvc: ImgService,\n    public merchantSvc: MerchantService,\n    public catalogSvc: CatalogService,\n    public systemSvc: SystemService,\n    public cryptoSvc:CryptoService,\n    public customerAppEndpointsSvc:CustomerAppEndpointService,\n    public router: Router\n  ) { }\n\n  channelOptions=[\"Create new P2P Channel\",\"Use custom P2P Channel\",\"Use custom OpenDeliveryApi\",\"Whatsapp\"];\n  selectedOptChannel=this.channelOptions[0];\n  showMoreOptions=false;\n\n  public formMerchant = {\n    name: \"\",\n    streetAddress: \"\",\n    phone: \"\",\n    email: \"\",\n    delinetendpoint: \"\",\n    baseCurrency:getCurrency(window.navigator.language)\n  };\n\n  public currencyOptions=[\n    \"USD\",\"EUR\",\"CAD\",\"AUD\",\"MXN\",\"ARS\",\"CLP\",\"PEN\",\"UYU\",\"CNY\",\"DKK\",\"GBP\",\"HKD\",\"KRW\",\"BRL\",\"JPY\",\"BTC\"\n  ];  \n\n  imgLogo = null;\n\n  ngOnInit(): void {\n    if (this.currencyOptions.indexOf(this.formMerchant.baseCurrency)<0){\n      this.currencyOptions.push(this.formMerchant.baseCurrency);\n    }\n    if (this.systemSvc.selectedMerchantGroup == null) {\n      this.router.navigate([\"/choose-merchant-group\"]);\n    }\n    if (this.systemSvc.selectedMerchantGroup?.pwaManifest) {\n      var pwaman = JSON.parse(this.systemSvc.selectedMerchantGroup.pwaManifest);\n      if (pwaman && pwaman.app_icon_ipfs) {\n        this.imgSvc.getBlobUrlFromHashAsync(pwaman.app_icon_ipfs).then(\n          (d) => {\n            this.imgLogo = d\n          }\n        )\n      }\n    }\n  }\n\n\n  public static async createNewDelinetChannel(merchant:Merchant,channelName=\"open-delivery-platform\") {\n    let cry=CryptoService.Instance;\n    let sysSvc=SystemService.Instance;\n    var _ipfsNode = await SSIpfs.getNode();\n    var scriptElm = await SSOrbitdb.GetOrbitDbInstance(_ipfsNode);\n    var newLogChannel: any = await SSOrbitdb.GetLogInstancePool(merchant.id+\"_\"+channelName);\n    var delinetEndpoint = newLogChannel.id;\n    var keys=await cry.generateNewKeys();\n    \n    merchant.delinetEndpoint=delinetEndpoint;\n    merchant.delinetPublicKey=keys.publicKey;\n    merchant.delinetPrivateKey=keys.privateKey;\n\n    try {\n      var settingsData= JSON.parse(JSON.stringify(sysSvc.localSettings));\n      settingsData[\"Orders Endpoints\"].Endpoints.push({\n        name:'P2P OpenDeliveryPlatform',\n        type:'delinet',\n        sourceName:'odp',\n        endpoint:delinetEndpoint,\n        clientId: \"\",\n        clientSecret: \"\",\n        publicKey: keys.publicKey,\n        privateKey: keys.privateKey\n      });\n      console.log(\"updating settings...\");\n      sysSvc.localSettings=settingsData;\n    } catch (error) {\n      console.log(error);\n    }\n\n\n    return merchant;\n  }\n\n  async register() {\n    var newMerchantRegister: Merchant = {\n      id: SSUuid.GenerateV4(),\n      name: this.formMerchant.name,\n      delinetEndpoint: this.formMerchant.delinetendpoint,\n      delinetPublicKey: \"\",\n      delinetPrivateKey: \"\",\n      merchantGroupId:this.systemSvc.selectedMerchantGroup.id,\n      acceptDeliveryOrder:true,\n      acceptScheduledOrder:true,\n      acceptTableOrder:true,\n      acceptTakeoutOrder:true,\n      baseCurrency:this.formMerchant.baseCurrency\n    };\n\n    if (this.selectedOptChannel==this.channelOptions[0]){\n      newMerchantRegister=await WizardNewMerchantComponent.createNewDelinetChannel(newMerchantRegister);\n    };\n    if (this.selectedOptChannel==this.channelOptions[3]){\n      newMerchantRegister.delinetEndpoint=\"https://api.whatsapp.com\";\n      newMerchantRegister.delinetPublicKey=this.formMerchant.delinetendpoint;\n      // let newEndpoint:CustomerAppEndpoint={\n      //   createdAt:(new Date()).toISOString(),\n      //   merchantId:newMerchantRegister.id,\n      //   id:SSUuid.GenerateV4(),\n      //   protocolType:\"WHATSAPP\",\n      //   type:\"ORDER\",\n      //   publicKey:this.formMerchant.delinetendpoint,\n      //   uri:\"https://api.whatsapp.com\"\n      // }\n\n      // let ret=await this.customerAppEndpointsSvc.postApiCustomerAppEndpoint(newEndpoint).toPromise();\n    }\n\n    this.merchantSvc.postApiMerchant(newMerchantRegister).subscribe(\n      (newMerchantResponse) => {\n        if (newMerchantResponse) {\n          var newCatalog: Catalog = {\n            id: SSUuid.GenerateV4(),\n            status: 'ACTIVE',\n            type: 'DELIVERY',\n            merchantId: newMerchantResponse.id,\n            merchantIdNavigation: newMerchantResponse,\n            category: []\n          };\n\n          this.catalogSvc.postApiCatalog(newCatalog).subscribe(\n            (catalogResponse) => {\n              this.systemSvc.selectedMerchant = newMerchantResponse;\n              this.router.navigate([\"/help\"]);\n            }\n          );\n        }\n      },\n      (e) => {\n        alert(e);\n      }\n    )\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\" fxFill >\n    <h1 i18n=\"@@chooseMerchantGroup.title\">{{ 'chooseMerchantGroup.title' | translate }}</h1>\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\n        <div class=\"optionbox\" *ngIf=\"gettingFromWeb3 && MerchantGroupList.length==0\" >\n            <div class=\"appicon\" [class.mat-elevation-z10]=\"true\" \n            fxLayout=\"column\" fxLayoutAlign=\"center center\"\n            >\n                <mat-spinner></mat-spinner>\n                <div class=\"icon_caption\">\n                    {{ 'chooseMerchantGroup.loadingfromtoken' | translate }}\n                </div>\n            </div>\n        </div>\n        <div class=\"optionbox\" *ngFor=\"let mgrp of MerchantGroupList\">\n            <div class=\"appicon\" [class.mat-elevation-z10]=\"true\" \n            fxLayout=\"column\" fxLayoutAlign=\"center center\"\n            (click)=\"selectMerchantGroup(mgrp)\">\n                <img class=\"icoapp\" *ngIf=\"mgrp.appicon\" [src]=\"mgrp.appicon\" >\n                <div class=\"icon_caption\">\n                    {{mgrp.name}}\n                </div>\n            </div>\n        </div>\n        <div>\n\n            <button mat-raised-button color=\"primary\" (click)=\"createNewMerchantGroup()\" i18n=\"@@chooseMerchantGroup.create\">\n                {{ 'chooseMerchantGroup.createNew' | translate }}\n            </button>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HashData, Merchant, MerchantGroup } from 'src/app/api/models';\nimport { CatalogService, CategoryService, HashDataService, MerchantGroupService, MerchantService } from 'src/app/api/services';\nimport { ImgService } from 'src/app/services/img.service';\nimport { SystemService } from 'src/app/services/system.service';\nimport { SSLoadLib } from 'src/app/static-stack/loadlib';\nimport { SSWeb3 } from 'src/app/static-stack/web3';\nimport { PublishComponent } from \"src/app/pages/publish/publish.component\";\nimport Enumerable from 'linq';\nimport { SSIpfs } from 'src/app/static-stack/ipfs';\nimport { WizardNewMerchantComponent } from '../wizards/wizard-new-merchant/wizard-new-merchant.component';\nimport { SSUuid } from 'src/app/static-stack/uuid';\n\n@Component({\n  selector: 'app-choose-merchant-group',\n  templateUrl: './choose-merchant-group.component.html',\n  styleUrls: ['./choose-merchant-group.component.less']\n})\nexport class ChooseMerchantGroupComponent implements OnInit {\n\n  public MerchantGroupList: MerchantGroup[] = [];\n\n  constructor(\n    //Injections\n    public systemSvc: SystemService,\n    public merchantGroupSvc: MerchantGroupService,\n    public merchantSvc: MerchantService,\n    public catalogSvc: CatalogService,\n    public categorySvc: CategoryService,\n    public hashDataSvc:HashDataService,\n    public router: Router,\n    public imgSvc: ImgService\n  ) { }\n\n  ngOnInit(): void {\n    this.initialize();\n  }\n\n  initialize() {\n    \n    this.merchantGroupSvc.getApiMerchantGroup({}).subscribe(\n      (d) => {\n        this.MerchantGroupList = d;\n        this.loadFromWeb3();\n        d.forEach(mgrp => {\n          this.getAppIconUrl(mgrp).then(\n            (d) => {\n              mgrp[\"appicon\"] = d;\n            }\n          )\n        });\n      },\n      (e) => {\n        console.log(e);\n      }\n    )\n  }\n\n  _web3: any = null;\n  isWrongNetwork = false;\n  async web3() {\n    if (!this._web3) {\n      var web3HTMLElement = await SSLoadLib.loadJSLib(\"web3lib\", \"libs/web3.min.js\");\n      var w3 = new window['Web3'](window['Web3'].givenProvider || \"ws://localhost:8545\");\n      this._web3 = w3;\n      this.checkNetwork();\n    }\n    return this._web3;\n  }\n\n  async checkNetwork() {\n    SSWeb3.checkChainNetwork(\n      () => {\n        document.location.reload();\n      },\n      () => {\n        this.isWrongNetwork = true;\n      });\n  }\n\n  selectedIpfsGateway = \"\";\n  getIpfsGWLink(cid) {\n    return (this.selectedIpfsGateway) + \"ipfs/\" + cid;\n  }\n\n  getIpfsGWLinkView(cid) {\n    return \"ipfs://\" + cid;\n  }\n\n  gettingFromWeb3 = false;\n\n  async loadFromWeb3() {\n    if (this.systemSvc.isStaticAppOnly) {\n      this.gettingFromWeb3=true;\n      if (!this.selectedIpfsGateway) {\n        this.selectedIpfsGateway = PublishComponent.ipfsW3GWList.split(\";\")[0];\n        let stgGateway = (localStorage.getItem(\"publish_current_ipfs_gateway\"));\n        if (stgGateway) {\n          this.selectedIpfsGateway = stgGateway;\n        }\n      }\n      console.log(this.selectedIpfsGateway);\n      let web3 = await this.web3();\n      var odpStoreContract = new web3.eth.Contract(PublishComponent.odpStoreNamesContractAbi, PublishComponent.odpStoreNamesContractAddress);\n      var web3Accounts = await web3.eth.requestAccounts();\n      var account_totalTokens = parseInt(await odpStoreContract.methods.balanceOf(web3Accounts[0]).call());\n      console.log(\"TOTAL TOKENS MINTED \" + web3Accounts[0] + \": \" + account_totalTokens);\n      var _added:boolean=false;\n      for (let index = 0; index < account_totalTokens; index++) {\n        let element = parseInt(await odpStoreContract.methods.tokenOfOwnerByIndex(web3Accounts[0], index).call());\n        let tokenUri = (await odpStoreContract.methods.tokenURI(element).call());\n        let codename= (await odpStoreContract.methods.tokenId_to_codeName(element).call());\n        let ipfsHash = tokenUri.replace(\"ipfs://\", '');\n        let jsonMetaData = (await (await fetch(this.selectedIpfsGateway + \"ipfs/\" + ipfsHash)).json())\n        try {\n          let ipfsApp = jsonMetaData.external_url.split(\"ipfs/\")[1];\n          let appData = (await (await fetch(jsonMetaData.external_url + \"/manifest.webmanifest\")).json());\n          let appIcon = (await (await fetch(jsonMetaData.external_url + \"/assets/icons/app-icon.png\")).blob());\n          var _cidIpfs = await SSIpfs.addFile(appIcon);\n          appData.app_icon_ipfs = _cidIpfs.cid.toString();\n          this.selectedIpfsGateway = jsonMetaData.external_url.split(\"ipfs/\")[0];\n          let endpointHashdata: any = Enumerable.from(<{ protocolType?: string, type?: string }[]>appData.endpoints).where(p => p.protocolType == \"IPFS\" && p.type == \"DATA\").defaultIfEmpty(undefined).firstOrDefault();\n          let hashData = endpointHashdata.publicKey;\n          let merchantGroup = (await (await fetch(this.selectedIpfsGateway + \"ipfs/\" + hashData + \"/\" + appData.merchantGroupId + \".json\")).json());\n\n          let inMemoryMerchantGroup = Enumerable.from(this.MerchantGroupList).where(p => p.id == merchantGroup.id).defaultIfEmpty(undefined).firstOrDefault();\n          if (!inMemoryMerchantGroup) {\n            _added=true;\n            merchantGroup.pwaManifest = JSON.stringify(appData);\n            let added = await this.merchantGroupSvc.postApiMerchantGroup(merchantGroup).toPromise();\n            let hashp:HashData={}\n            if (merchantGroup.createdAt){\n              hashp.createdAt=merchantGroup.createdAt;\n            } else {\n              hashp.createdAt=(new Date()).toISOString();\n              merchantGroup.createdAt=hashp.createdAt;\n            };\n            hashp.hash=hashData;\n            hashp.hashApp=ipfsApp;\n            hashp.hashPackage=ipfsApp;\n            hashp.id=SSUuid.GenerateV4();\n            hashp.merchantGroupId=merchantGroup.id;\n            hashp.odpName=codename;\n            var hashOdpName = await this.hashDataSvc.postApiHashDataResponse(hashp).toPromise();\n\n            for (let index = 0; index < merchantGroup.merchant.length; index++) {\n              let merchant: Merchant = merchantGroup.merchant[index];\n              console.log(\"Merchant before:\");\n              console.log(merchant);\n              delete merchant.delinetEndpoint\n              delete merchant.delinetPrivateKey\n              delete merchant.delinetPublicKey\n              let nmerchant=await WizardNewMerchantComponent.createNewDelinetChannel(merchant,SSUuid.GenerateV4()+\"_open-delivery-platform\");\n              console.log(\"Merchant after:\");\n              console.log(nmerchant);\n              let added = await this.merchantSvc.postApiMerchant(merchant).toPromise();\n              console.log(merchant);\n              for (let indexCatalog = 0; indexCatalog < merchant.catalog.length; indexCatalog++) {\n                const _catalog = merchant.catalog[indexCatalog];\n                let added = await this.catalogSvc.postApiCatalog(_catalog).toPromise();\n                for (let indexCategory = 0; indexCategory < _catalog.category.length; indexCategory++) {\n                  const _category = _catalog.category[indexCategory];\n                  let added = await this.categorySvc.postApiCategory(_category).toPromise();\n                }\n              }\n            }\n\n            console.log(\"TOKEN INDEX: \" + index + \" -> ID: \" + element);\n            console.log(\"TOKEN URI: \" + tokenUri);\n          }\n\n        } catch (error) {\n\n        }\n\n      }\n      this.gettingFromWeb3 = false;      \n      if (_added) {\n        this.initialize();\n      } else {\n        if (this.MerchantGroupList.length==0){\n          this.router.navigate([\"/wizard-new-merchant-group\"]);    \n        }\n      }\n    } else {\n      this.router.navigate([\"/wizard-new-merchant-group\"]);\n    }\n  }\n\n  createNewMerchantGroup() {\n    this.router.navigate([\"/wizard-new-merchant-group\"]);\n  }\n\n  async getAppIconUrl(mgrp: MerchantGroup) {\n    if (mgrp.pwaManifest) {\n      let pwa = JSON.parse(mgrp.pwaManifest);\n      if (pwa.app_icon_ipfs) {\n        try {\n          return await this.imgSvc.getBlobUrlFromHashAsync(pwa.app_icon_ipfs);\n        } catch (error) {\n        }\n      } else {\n        return \"assets/imgs/logo.png\";\n      }\n\n    } else {\n      return \"assets/imgs/logo.png\";\n    }\n\n  }\n\n  selectMerchantGroup(mgrp: MerchantGroup) {\n    this.systemSvc.selectedMerchantGroup = mgrp;\n    this.router.navigate([\"/choose-merchant\"]);\n  }\n\n}\n","<div class=\"leftbar\" [@openCloseMenu]=\"showText?'open':'closed'\"\n    [ngClass]=\"{'expanded':(showText),'compressed':(!showText)}\" [class.mat-elevation-z5]=\"true\" fxFlex\n    fxLayout=\"column\" *ngIf=\"\n    (systemSvc.isSystemReadyAsync|async) \n    && (\n            !route.routerState.snapshot.url.startsWith('/wizard')\n            &&!route.routerState.snapshot.url.startsWith('/choose')\n            &&!route.routerState.snapshot.url.startsWith('/auth')\n        )\n    \">\n\n    <div class='menu_item' *ngIf=\"systemSvc.selectedMerchantGroup\" fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\" (click)=\"toogleShowText()\">\n            <div class=\"logo\">\n                <div class=\"logo-img\">\n                    <img class=\"icoapp\" *ngIf=\"!imgLogo\" src=\"assets/imgs/logo.png\">\n                    <img class=\"icoapp\" *ngIf=\"imgLogo\" [src]=\"imgLogo\">\n                </div>\n            </div>\n            <div class=\"name-logo\">\n                {{systemSvc.selectedMerchant.name}}\n            </div>\n        </div>\n    </div>\n\n    <div class='menu_item' fxLayout=\"row\" fxLayoutAlign=\"start center\">\n        <button mat-icon-button (click)=\"toogleShowText()\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\">\n            Menu\n        </div>\n    </div>\n\n    <div class=\"leftbar_space menu_item\">\n\n    </div>\n    <div class='menu_item' fxLayout=\"row\" fxLayoutAlign=\"start center\" [routerLink]=\"['/orders']\">\n        <button mat-icon-button>\n            <mat-icon>receipt_long</mat-icon>\n        </button>\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\" i18n=\"@@leftBarMenu.title.orders\">\n            {{ 'leftBarMenu.title.orders' | translate }}\n        </div>\n    </div>\n    <!-- <div class='menu_item' fxLayout=\"row\" fxLayoutAlign=\"start center\" \n    (click)=\"notImplemented()\"\n     >\n        <button mat-icon-button>\n            <mat-icon>delivery_dining</mat-icon>\n        </button>\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\" i18n=\"@@leftBarMenu.title.delivery\">\n            Delivery\n        </div>\n    </div> -->\n    <div class='menu_item' fxLayout=\"row\" fxLayoutAlign=\"start center\" [routerLink]=\"['/category']\">\n        <button mat-icon-button>\n            <mat-icon>menu_book</mat-icon>\n        </button>\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\" i18n=\"@@leftBarMenu.title.catalogs\">\n            {{ 'leftBarMenu.title.catalogs' | translate }}\n        </div>\n    </div>\n    <div class='menu_item' fxLayout=\"row\" fxLayoutAlign=\"start center\" [routerLink]=\"['/publish']\">\n        <button mat-icon-button>\n            <mat-icon>storefront</mat-icon>\n        </button>\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\" i18n=\"@@leftBarMenu.title.publish\">\n            {{ 'leftBarMenu.title.publish' | translate }}\n        </div>\n    </div>\n    <div fxFlex></div>\n    <div class=\"leftbar_space menu_item\">\n    </div>\n    <div class='menu_item' fxLayout=\"row\" fxLayoutAlign=\"start center\" [routerLink]=\"['/help']\">\n        <button mat-icon-button>\n            <mat-icon>support</mat-icon>\n        </button>\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\" i18n=\"@@leftBarMenu.title.help\">\n            {{ 'leftBarMenu.title.help' | translate }}\n        </div>\n    </div>\n    <div class='menu_item' fxLayout=\"row\" fxLayoutAlign=\"start center\" [routerLink]=\"['/settings']\">\n        <button mat-icon-button>\n            <mat-icon>settings</mat-icon>\n        </button>\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\" i18n=\"@@leftBarMenu.title.settings\">\n            {{ 'leftBarMenu.title.settings' | translate }}\n        </div>\n    </div>\n    <div class='menu_item' fxLayout=\"row\" fxLayoutAlign=\"start center\" (click)=\"systemSvc.logout()\">\n        <button mat-icon-button>\n            <mat-icon>logout</mat-icon>\n        </button>\n        <div [@growAnimation] *ngIf=\"showText\" class=\"menu_text\" i18n=\"@@leftBarMenu.title.logout\">\n            {{ 'leftBarMenu.title.logout' | translate }}\n        </div>\n    </div>\n    <div *ngIf=\"systemSvc.version\" class=\"sysver\">\n            {{systemSvc.version}}\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MerchantGroup } from 'src/app/api/models';\nimport { ImgService } from 'src/app/services/img.service';\nimport { SystemService } from 'src/app/services/system.service';\nimport { animGrowAnimation, animGrowMenuAnimation } from 'src/app/shared/animations';\nimport { SSIpfs } from 'src/app/static-stack/ipfs';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../dialogs/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-left-bar-menu',\n  templateUrl: './left-bar-menu.component.html',\n  styleUrls: ['./left-bar-menu.component.less'],\n  animations: [\n    animGrowAnimation,\n    animGrowMenuAnimation\n  ]\n})\nexport class LeftBarMenuComponent implements OnInit {\n\n  public static instance: LeftBarMenuComponent = null;\n  imgLogo: any = \"\";\n  constructor(\n    public systemSvc: SystemService,\n    public route: Router,\n    public dialog: MatDialog,\n    public imgSvc: ImgService\n  ) {\n    LeftBarMenuComponent.instance = this;\n  }\n\n  showText = false;\n\n  toogleShowText() {\n    this.showText = !this.showText;\n  }\n\n  notImplemented() {\n    var dialogData: ConfirmDialogModel = {\n      title: \"Sorry :-(\",\n      message: \"This feature is not implemented yet.\",\n      showCancel: false\n    }\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"80vw\",\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        console.log(result);\n\n      },\n      (error) => {\n        console.log(error);\n      }\n    )\n  }\n  async getAppIconUrl(mgrp: MerchantGroup) {\n    if (mgrp && mgrp.pwaManifest) {\n      let pwa = JSON.parse(mgrp.pwaManifest);\n      if (pwa.app_icon_ipfs) {\n        try {\n          return await this.imgSvc.getBlobUrlFromHashAsync(pwa.app_icon_ipfs);\n        } catch (error) {\n        }\n      } else {\n        return \"assets/imgs/logo.png\";\n      }\n\n    } else {\n      return \"assets/imgs/logo.png\";\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.systemSvc.isSystemReadyAsync.subscribe(async p => {\n      if (p) {\n        this.imgLogo = await this.getAppIconUrl(this.systemSvc.selectedMerchantGroup);\n      }\n    });\n\n    this.systemSvc.selectedMerchantGroupChanged.subscribe(async p => {\n      if (p) {\n        this.imgLogo = await this.getAppIconUrl(this.systemSvc.selectedMerchantGroup);\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LeftBarMenuComponent } from 'src/app/components/left-bar-menu/left-bar-menu.component';\nimport { SystemService } from 'src/app/services/system.service';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.less']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor(\n    public systemSvc:SystemService\n  ) { }\n\n  ngOnInit(): void {\n    this.showTextOnMenus();\n  }\n  showTextOnMenus() {\n    setTimeout(() => {\n      LeftBarMenuComponent.instance.showText=true;\n    }, 1000);\n  }\n\n}\n","<section class=\"content\" fxLayout=\"column\">\n    <header>\n        <h1 i18n=\"@@help.title\">{{ 'help.title' | translate }}</h1>\n    </header>\n    <article>\n        <h2>\n            {{ 'help.warningTitle' | translate }}\n        </h2>\n        <p>\n            {{ 'help.warningMsg' | translate }}\n            <br>\n            {{ 'help.warningReport' | translate }}\n        </p>\n    </article>\n    <article>\n        <h2>\n            {{ 'help.howToUseTitle' | translate }}\n        </h2>\n        <p>\n            {{ 'help.howTo1' | translate }}\n        </p>\n        <p>\n            {{ 'help.howTo2' | translate }}\n        </p>\n        <h2>\n            {{ 'help.howToSteps' | translate }}\n        </h2>\n        <p>\n            <b>1.</b> {{ 'help.accessthe' | translate }} '<mat-icon>menu_book</mat-icon> <b>{{'leftBarMenu.title.catalogs'|translate}}</b>' {{ 'help.step1end' | translate }}\n        </p>\n        <p>\n            <b>2.</b> {{ 'help.thentogo' | translate }} '<mat-icon>storefront</mat-icon> <b>{{'leftBarMenu.title.publish'|translate}}</b>' {{ 'help.step2end' | translate }}\n        </p>\n        <p>\n            <b>3.</b> {{ 'help.step3' | translate }} '<mat-icon>receipt_long</mat-icon> <b>{{'leftBarMenu.title.orders'|translate}}</b>' {{ 'help.step3end' | translate }}\n        </p>\n    </article>\n</section>","<div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"title-top\">\n    <h1>Payment Methods</h1>\n    <div fxFlex></div>\n    <button color=\"primary\" mat-icon-button mat-mini-fab class=\"title-button\"\n        (click)=\"add()\">\n        <mat-icon>add</mat-icon>\n    </button>\n</div>\n<div *ngFor=\"let _method of settingsData[selected]['Methods']\" class=\"endpoint-item\">\n    <div [class.mat-elevation-z10]=\"true\" fxLayout=\"column\">\n        <mat-toolbar color=\"primary\">\n            <span>{{_method.displayName}}</span>\n            <div fxFlex>\n            </div>\n\n            <button mat-icon-button (click)=\"remove(_method)\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </mat-toolbar>\n        <div class=\"endpoint-item\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>Display name</mat-label>\n                <input matInput [(ngModel)]=\"_method.displayName\" >\n            </mat-form-field>\n\n            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>Currency</mat-label>\n                <input matInput [(ngModel)]=\"_method.currency\" >\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Method</mat-label>\n                <mat-select [(ngModel)]=\"_method.method\" >\n                    <mat-option *ngFor=\"let _m of ['Cash', 'Credit', 'Debit','Voucher','Food_Voucher','Meal_Voucher','DIGITAL_WALLET']\"\n                        [value]=\"_m.toUpperCase()\">\n                        {{_m.toUpperCase()}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Accepted Brands</mat-label>\n                <input matInput [(ngModel)]=\"_method.cardBrand\" >\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Type</mat-label>\n                <mat-select [(ngModel)]=\"_method.type\" >\n                    <mat-option *ngFor=\"let methodType of ['ONLINE','OFFLINE']\"\n                        [value]=\"methodType\">\n                        {{methodType}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"_method.type=='ONLINE'\" fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>Gateway</mat-label>\n                <mat-select [(ngModel)]=\"_method.gateway\" >\n                    <mat-option *ngFor=\"let _gateway of ['BTCPAY','PAYPAL']\"\n                        [value]=\"_gateway\">\n                        {{_gateway}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"_method.type=='ONLINE' && _method.gateway=='BTCPAY'\" fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>btcpay_server_url</mat-label>\n                <input matInput (ngModelChangeDebounced)=\"updateGwSettingsData(_method)\" [(ngModel)]=\"gwSettingsData[_method.id]['SERVER_URL']\">\n            </mat-form-field>\n            <mat-form-field *ngIf=\"_method.type=='ONLINE' && _method.gateway=='BTCPAY'\" fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>btcpay_store_id</mat-label>\n                <input matInput (ngModelChangeDebounced)=\"updateGwSettingsData(_method)\" [(ngModel)]=\"gwSettingsData[_method.id]['STORE_ID']\">\n            </mat-form-field>\n            <mat-form-field *ngIf=\"_method.type=='ONLINE' && _method.gateway=='BTCPAY'\" fxFlex=\"100\" appearance=\"fill\">\n                <mat-label>btcpay_api_key</mat-label>\n                <input matInput (ngModelChangeDebounced)=\"updateGwSettingsData(_method)\" [(ngModel)]=\"gwSettingsData[_method.id]['API_KEY']\">\n            </mat-form-field>\n        </div>\n\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { PaymentMethod } from 'src/app/api/models';\nimport { SystemService } from 'src/app/services/system.service';\nimport { SSUuid } from 'src/app/static-stack/uuid';\n\n@Component({\n  selector: 'app-set-payment-method',\n  templateUrl: './set-payment-method.component.html',\n  styleUrls: ['./set-payment-method.component.scss']\n})\nexport class SetPaymentMethodComponent implements OnInit {\n\n  @Input() settingsData: any;\n  settingsDataPropertiesNames: string[] = [];\n  selected = \"Payment Methods\";\n\n  public gwSettingsData: any = {};\n\n  constructor(\n    public systemSvc: SystemService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.settingsDataPropertiesNames = Object.getOwnPropertyNames(this.settingsData);\n    this.loadGwSettingsData();\n  }\n\n  loadGwSettingsData() {\n    if (!this.settingsData[this.selected]) this.settingsData[this.selected] = { \"Methods\": [] };\n    if (!this.settingsData[this.selected][\"Methods\"]) this.settingsData[this.selected][\"Methods\"] = [];\n\n    for (let i = 0; i < this.settingsData[this.selected][\"Methods\"].length; i++) {\n      const _method: PaymentMethod = <any>this.settingsData[this.selected][\"Methods\"][i];\n      if (_method.gatewaySettings && _method.gatewaySettings.indexOf(\"{\") >= 0) {\n        try {\n          this.gwSettingsData[_method.id]=JSON.parse(_method.gatewaySettings);\n        } catch (error) {\n          console.log(\"Error parsing gatewaysettings!\")\n        }\n      }\n    }\n  }\n\n  remove(method: PaymentMethod) {\n    this.settingsData[this.selected][\"Methods\"].splice(\n      this.settingsData[this.selected][\"Methods\"].indexOf(method), 1\n    );\n  }\n\n  updateGwSettingsData(_method:PaymentMethod){\n    var _self=this;\n    var _m=_method;\n    try {\n      _method.gatewaySettings=JSON.stringify(_self.gwSettingsData[_m.id])\n    } catch (error) {\n      console.log(\"Error serializing gatewaysettings!\")\n    }\n  }\n\n  add() {\n    let newPaymentMethod = <PaymentMethod>{\n      id: SSUuid.GenerateV4(),\n      createdAt: (new Date()).toISOString(),\n      status: \"active\",\n      currency: this.systemSvc.baseCurrency,\n      type: \"ONLINE\",\n      method: \"DIGITAL_WALLET\",\n      cardBrand: \"ONCHAIN/LIGHTNING\",\n      displayName: \"BITCOIN\",\n      gateway: \"BTCPAY\",\n      gatewaySettings: \"{}\",\n      merchantId: this.systemSvc.selectedMerchant.id\n    };\n\n    this.settingsData[this.selected][\"Methods\"].push(newPaymentMethod);\n    this.loadGwSettingsData();\n  }\n\n}\n","<div fxFill fxLayout=\"column\">\n    <as-split fxFlex [direction]=\"_isHandset?'vertical':'horizontal'\">\n        <as-split-area [size]=\"_isHandset ? 100 :20\" [visible]=\"(!_isHandset||!selected)\" order=\"0\">\n            <div fxFill fxLayout=\"column\">\n                <div *ngFor=\"let item of menuItems\" class=\"menuItem\" fxLayoutAlign=\"center center\"\n                    [ngClass]=\"{'selected':selected==item}\" (click)=\"selected=item\">\n                    {{item}}\n                </div>\n            </div>\n        </as-split-area>\n        <as-split-area [size]=\"_isHandset ? 100 : 80\" [order]=\" _isHandset ? 0: 1\"\n            [visible]=\"(!_isHandset||selected!=undefined)\">\n            <div class=\"content\" *ngIf=\"(!_isHandset||selected)\">\n                <div>\n                    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"title\">\n                        <button mat-icon-button *ngIf=\"_isHandset\" (click)=\"selected=undefined\">\n                            <mat-icon>\n                                arrow_back\n                            </mat-icon>\n                        </button>\n                        <div *ngIf=\"!(selected.indexOf('Endpoints')>=0) && !(selected.indexOf('Methods')>=0)\">\n                            {{selected}}\n                        </div>\n                    </div>\n                    <div *ngIf=\"!(selected.indexOf('Endpoints')>=0) && !(selected.indexOf('Methods')>=0)\">\n                        <div *ngFor=\"let _field of getProperties(settingsData[selected])\">\n                            <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                                <mat-label>{{_field}}</mat-label>\n                                <input matInput [(ngModel)]=\"settingsData[selected][_field]\">\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"selected=='Orders Endpoints'\">\n                        <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"title-top\">\n                            <h1>Orders Service Endpoints</h1>\n                            <div fxFlex></div>\n                            <button color=\"primary\" mat-icon-button mat-mini-fab class=\"title-button\"\n                                (click)=\"addOrderEndpoint()\">\n                                <mat-icon>add</mat-icon>\n                            </button>\n                        </div>\n                        <div *ngFor=\"let _endpoint of settingsData[selected]['Endpoints']\" class=\"endpoint-item\">\n                            <div [class.mat-elevation-z10]=\"true\" fxLayout=\"column\">\n                                <mat-toolbar color=\"primary\">\n                                    <span>{{_endpoint.name}}</span>\n                                    <div fxFlex>\n                                    </div>\n\n                                    <button mat-icon-button (click)=\"removeOrderEndpoint(_endpoint)\">\n                                        <mat-icon>delete</mat-icon>\n                                    </button>\n                                </mat-toolbar>\n                                <div class=\"endpoint-item\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\">\n                                    <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                                        <mat-label>Name</mat-label>\n                                        <input matInput [(ngModel)]=\"_endpoint.name\" >\n                                    </mat-form-field>\n\n                                    <mat-form-field appearance=\"fill\">\n                                        <mat-label>Adapter</mat-label>\n                                        <mat-select [(ngModel)]=\"_endpoint.type\" >\n                                            <mat-option *ngFor=\"let _adapterType of ['webapi','websocket','delinet']\"\n                                                [value]=\"_adapterType\">\n                                                {{_adapterType}}\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n\n                                    <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                                        <mat-label>Endpoint URI</mat-label>\n                                        <input matInput [(ngModel)]=\"_endpoint.endpoint\">\n                                    </mat-form-field>\n\n                                    <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                                        <mat-label>Client Id</mat-label>\n                                        <input matInput [(ngModel)]=\"_endpoint.clientId\">\n                                    </mat-form-field>\n\n                                    <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                                        <mat-label>Client Secret</mat-label>\n                                        <input matInput [(ngModel)]=\"_endpoint.clientSecret\">\n                                    </mat-form-field>\n\n                                    <mat-form-field fxFlex=\"100\" appearance=\"fill\">\n                                        <mat-label>Source name</mat-label>\n                                        <input matInput [(ngModel)]=\"_endpoint.sourceName\">\n                                    </mat-form-field>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <app-debug *ngIf=\"selected=='Debug'\"></app-debug>\n                    <app-set-payment-method *ngIf=\"selected=='Payment Methods'\" [settingsData]=\"settingsData\"></app-set-payment-method>\n\n                </div>\n                <!-- <button mat-raised-button>Basic</button>\n                <button mat-raised-button color=\"primary\">Primary</button>\n                <button mat-raised-button color=\"accent\">Accent</button>\n                <button mat-raised-button color=\"warn\">Warn</button> -->\n            </div>\n        </as-split-area>\n    </as-split>\n    <div *ngIf=\"(_isHandset && selected)||!_isHandset\" class=\"bottom-bar\" fxLayout=\"row\" fxLayoutAlign=\"end center\">\n        <button color=\"primary\" [disabled]=\"!settingsChanged()\" mat-raised-button (click)=\"updateSettings()\">\n            Save Settings\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SystemService } from 'src/app/services/system.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  public menuItems = [\n    \"General\",\n    \"Appearence\",\n    \"Orders Endpoints\",\n    \"Drivers Endpoints\",\n    \"Payment Methods\"\n  ];\n\n\n  public selected = \"General\";\n\n  public settingsData:any;\n  public settingsDataPropertiesNames:string[];\n\n  public getProperties(obj) {\n    return Object.getOwnPropertyNames(obj);\n  }\n\n  constructor(\n    public systemSvc: SystemService,\n    public breakpointObserver: BreakpointObserver\n  ) {\n\n    this.settingsData= JSON.parse(JSON.stringify(systemSvc.localSettings));\n    this.settingsDataPropertiesNames=Object.getOwnPropertyNames(this.settingsData);\n\n    this.isHandset$.subscribe(d => {\n      this._isHandset = d;\n    });\n  }\n\n\n  addOrderEndpoint(){\n    this.settingsData[\"Orders Endpoints\"].Endpoints.push({\n      name:'new order service connection',\n      type:'webapi',\n      sourceName:'odp',\n      endpoint:\"\",\n      clientId: \"\",\n      clientSecret: \"\",\n      publicKey: undefined,\n      privateKey: undefined\n    })\n  }\n\n  removeOrderEndpoint(endpoint:DtoAdapterConfig){\n    this.settingsData[\"Orders Endpoints\"].Endpoints.splice(\n      this.settingsData[\"Orders Endpoints\"].Endpoints.indexOf(endpoint),1\n    );\n  }\n\n\n  updateSettings(){\n    console.log(\"updating settings...\");\n    this.systemSvc.localSettings=this.settingsData;\n  }\n\n  settingsChanged(){\n    return  JSON.stringify(this.systemSvc.localSettings)!==JSON.stringify(this.settingsData)\n  }\n\n\n  _isHandset = false;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div class=\"content-spinner\" *ngIf=\"load\">\n    <div class=\"spinner\">\n        <mat-spinner></mat-spinner>\n    </div>\n</div>\n<div class=\"content\" *ngIf=\"!load\">\n    <div class=\"heading2-regular\">{{ 'pizzaSizeEditor.sizes' | translate }}</div>\n    <div>\n        <div class=\"body3 size-description\">{{ 'pizzaSizeEditor.indicate' | translate }}</div>\n    </div>\n\n    <div fxLayout=\"column\">\n        <div fxLayout=\"row\">\n            <div class=\"body2 name\" fxFlex=\"25\">\n                <div fxFlex=\"80\">\n                    {{ 'pizzaSizeEditor.name' | translate }}\n                </div>\n            </div>\n            <div class=\"body2\" fxFlex=\"25\">{{ 'pizzaSizeEditor.qtyPieces' | translate }}</div>\n            <div class=\"body2\" fxFlex=\"25\">{{ 'pizzaSizeEditor.qtyFlavors' | translate }}</div>\n            <div class=\"body2\" fxFlex=\"25\">{{ 'pizzaSizeEditor.codpdv' | translate }}</div>\n        </div>\n        <div class=\"line-size\" fxLayout=\"row\" *ngFor=\"let optionGroupProduct of optionGroupProducts\">\n            <div class=\"body2\" fxFlex=\"25\">\n                <div fxFlex=\"80\" *ngIf=\"optionGroupProduct.optionGroupIdNavigation\">\n                    <input class=\"input-size\" matInput placeholder=\"{{ 'pizzaSizeEditor.newsize' | translate }}\"  [(ngModel)]=\"optionGroupProduct.optionGroupIdNavigation.name\">\n                </div>\n            </div>\n            <div class=\"body2\" fxFlex=\"25\">\n                <div class=\"qtd-pieces\" fxFlex=\"80\">\n                    <div fxFlex=\"100\">\n                        <input type=\"number\" class=\"input-size\" matInput placeholder=\"0\" [(ngModel)]=\"optionGroupProduct.slices\">\n                    </div>\n                    <div class=\"pieces\">\n                        <div>{{ 'pizzaSizeEditor.pieces' | translate }}</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"body2\" fxFlex=\"25\">\n                <div class=\"flavors\">\n                    <div class=\"body2\" fxFlex=\"19\" *ngFor=\"let i of [1,2,3,4]\">\n                        <span [ngClass]=\"{'flavor-selected' : optionGroupProduct.acceptedFractions.split(',').indexOf(i+'')>=0, \n                            'flavor' : optionGroupProduct.acceptedFractions.split(',').indexOf(i+'')<0}\" (click)=\"changeQtyFlavors(optionGroupProduct, i.toString())\">{{i}}</span>\n                    </div>\n                    <!-- <div class=\"body2\" fxFlex=\"19\">\n                        <span [ngClass]=\"{'flavor-selected' : optionGroupProduct.acceptedFractions.split(',').indexOf('1')>=0, \n                            'flavor' : optionGroupProduct.acceptedFractions.split(',').indexOf('2')<0}\" (click)=\"changeQtyFlavors(optionGroupProduct.acceptedFractions, 2)\">2</span>\n                    </div>\n                    <div class=\"body2\" fxFlex=\"19\">\n                        <span [ngClass]=\"{'flavor-selected' : optionGroupProduct.acceptedFractions.split(',').indexOf('1')>=0, \n                            'flavor' : optionGroupProduct.acceptedFractions.split(',').indexOf('3')<0}\" (click)=\"changeQtyFlavors(optionGroupProduct.acceptedFractions, 3)\">3</span>\n                    </div>\n                    <div class=\"body2\" fxFlex=\"19\">\n                        <span [ngClass]=\"{'flavor-selected' : optionGroupProduct.acceptedFractions.split(',').indexOf('1')>=0, \n                            'flavor' : optionGroupProduct.acceptedFractions.split(',').indexOf('4')<0}\" (click)=\"changeQtyFlavors(optionGroupProduct.acceptedFractions, 4)\">4</span>\n                    </div> -->\n                </div>\n            </div>\n            <div class=\"body2\" fxFlex=\"25\">\n                <div fxFlex=\"80\">\n                    <div fxFlex=\"80\">\n                        <input class=\"input-size\" matInput placeholder=\"\"  [(ngModel)]=\"optionGroupProduct.externalCode\">\n                    </div>\n                </div>\n                <div fxFlex=\"5\">\n                    <mat-icon class=\"primary-color icon\" (click)=\"deleteConfirm(optionGroupProduct)\">close</mat-icon>\n                </div>\n            </div>\n        </div>\n        <div class=\"content-new-size\" fxFlex=\"100\" fxLayout=\"row\">\n            <div fxFlex=\"100\" class=\"primary-color\" fxLayout=\"row\" (click)=\"addSize()\">\n                <div fxFlex=\"5\" class=\"icon-add\">\n                    <mat-icon class=\"primary-color\">add</mat-icon>\n                </div>\n                <div class=\"new-size\" fxFlex=\"95\">\n                    {{'pizzaSizeEditor.newsize'|translate}}\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"heading2-regular sales-summary\">{{ 'pizzaSizeEditor.salesum' | translate }}</div>\n\n    <div fxLayout=\"row wrap\">\n        <div fxFlex=\"30\" class=\"mat-elevation-z2 card-sales-summary\" *ngFor=\"let optionGroupProduct of optionGroupProducts\" fxLayout=\"column\">\n            <div fxFlex=\"100\">\n                <div fxFlex=\"100\">\n                    <!-- <mat-icon class=\"primary-color icon\" (click)=\"deleteSize()\">close</mat-icon> -->\n                </div>\n            </div>\n            <div fxFlex=\"100\">\n                <div fxFlex=\"100\" class=\"img\">\n                    <!-- <img src=\"https://cdn-icons-png.flaticon.com/512/1404/1404945.png\" width=\"50px\" /> -->\n                    <img *ngIf=\"optionGroupProduct.acceptedFractions.split(',').indexOf('1')>=0 \n                    && optionGroupProduct.acceptedFractions.split(',').indexOf('2')<0 \n                    && optionGroupProduct.acceptedFractions.split(',').indexOf('3')<0\n                    && optionGroupProduct.acceptedFractions.split(',').indexOf('4')<0\" src=\"../../../assets/imgs/pizza-toppings-1.cb6dcd0b.svg\" width=\"50px\" />\n                    <img *ngIf=\"optionGroupProduct.acceptedFractions.split(',').indexOf('2')>=0\n                    && optionGroupProduct.acceptedFractions.split(',').indexOf('3')<0\n                    && optionGroupProduct.acceptedFractions.split(',').indexOf('4')<0\" src=\"../../../assets/imgs/pizza-toppings-2.c7b86c10.svg\" width=\"50px\" />\n                    <img *ngIf=\"optionGroupProduct.acceptedFractions.split(',').indexOf('3')>=0\n                    && optionGroupProduct.acceptedFractions.split(',').indexOf('4')<0\" src=\"../../../assets/imgs/pizza-toppings-3.21d8086e.svg\" width=\"50px\" />\n                    <img *ngIf=\"optionGroupProduct.acceptedFractions.split(',').indexOf('4')>=0\" src=\"../../../assets/imgs/pizza-toppings-4.5712d0d0.svg\" width=\"50px\" />\n                </div>\n            </div>\n            <div fxFlex=\"100\" *ngIf=\"optionGroupProduct.optionGroupIdNavigation\">{{optionGroupProduct.optionGroupIdNavigation.name}}</div>\n            <div fxFlex=\"100\">Cut into {{optionGroupProduct.slices}} Accepts {{getTextAcceptsFlavors(optionGroupProduct)}} flavors</div>\n            <div fxFlex=\"100\" class=\"btns\">\n                <button (click)=\"alterStatus(optionGroupProduct, 'UNAVAILABLE')\" *ngIf=\"optionGroupProduct.status == 'AVAILABLE'\"\n                    class=\"button-status btn btn-pause btn-pause-matte primary-border-color body5-semibold primary-color\"\n                    mat-button>{{ 'pizzaSizeEditor.pause' | translate }}</button>\n                <button *ngIf=\"optionGroupProduct.status == 'AVAILABLE'\"\n                    class=\"button-status btn btn-activate white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                    mat-raised-button>{{ 'pizzaSizeEditor.activated' | translate }}</button>\n                <button *ngIf=\"optionGroupProduct.status == 'UNAVAILABLE'\"\n                    class=\"button-status btn btn-pause white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                    mat-raised-button>{{ 'pizzaSizeEditor.paused' | translate }}</button>\n                <button (click)=\"alterStatus(optionGroupProduct, 'AVAILABLE')\" *ngIf=\"optionGroupProduct.status == 'UNAVAILABLE'\"\n                    class=\"button-status btn btn-activate btn-pause-matte primary-border-color primary-border-color body5-semibold primary-color\"\n                    mat-button>{{ 'pizzaSizeEditor.activate' | translate }}</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OptionGroup, OptionGroupProduct } from 'src/app/api/models';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../dialogs/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-pizza-size-editor',\n  templateUrl: './pizza-size-editor.component.html',\n  styleUrls: ['./pizza-size-editor.component.scss']\n})\nexport class PizzaSizeEditorComponent implements OnInit {\n\n  @Input() optionGroupProducts: OptionGroupProduct[];\n  @Input() load: boolean;\n  status: string = \"AVAILABLE\";\n\n  newOptionGroupProduct: OptionGroupProduct = {\n    min: 1,\n    max: 1,\n    status: \"AVAILABLE\",\n    acceptedFractions: \"1\",\n    slices: \"1\",\n    optionGroupIdNavigation: {\n      name: \"\",\n      status: \"AVAILABLE\",\n      type: \"FLAVOR\",\n    }\n  }\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  deleteSize(optionGroupProduct) {\n    var a = this.optionGroupProducts.splice(this.optionGroupProducts.indexOf(optionGroupProduct), 1);\n    console.log(a);\n  }\n\n  addSize() {\n    var newSize = JSON.parse(JSON.stringify(this.newOptionGroupProduct));\n    this.optionGroupProducts.push(newSize);\n  }\n\n  changeQtyFlavors(optionGroupProduct: OptionGroupProduct, acceptedFraction: string) {\n    var acceptedFractions: string[] = optionGroupProduct.acceptedFractions.split(',');\n    if (acceptedFractions.indexOf(acceptedFraction) < 0) {\n      acceptedFractions.push(acceptedFraction);\n    } else {\n      if (acceptedFraction != '1') {\n        acceptedFractions.splice(acceptedFractions.indexOf(acceptedFraction), 1);\n      }\n    }\n    acceptedFractions.sort();\n    optionGroupProduct.acceptedFractions = acceptedFractions.toString();\n    //this.optionGroupProducts[this.optionGroupProducts.indexOf(optionGroupProduct)].acceptedFractions = JSON.stringify(acceptedFractions);\n  }\n\n  getTextAcceptsFlavors(optionGroupProduct: OptionGroupProduct) {\n    var ret = \"\";\n    var acceptedFractions = optionGroupProduct.acceptedFractions.split(\",\");\n    for (let i = 0; i < acceptedFractions.length; i++) {\n      if (ret == \"\") {\n        ret = acceptedFractions[i];\n      } else {\n        if ((acceptedFractions.length - 1) == i) {\n          ret += \" e \" + acceptedFractions[i];\n        } else {\n          ret += \", \" + acceptedFractions[i];\n        }\n      }\n\n    }\n    return ret;\n  }\n\n  alterStatus(optionGroupProduct: OptionGroupProduct ,status: string) {\n    var _self = this;\n    optionGroupProduct.status = status;\n    // this.catalogDataSvc.setStatusItem(this.item.id, this.item.productId, status).then(function (d) {\n    //   _self.item.status = status;\n    // });\n  }\n\n  deleteConfirm(optionGroupProduct: OptionGroupProduct) {\n    var dialogData: ConfirmDialogModel = {\n      title: \"Atention\",\n      message: 'This will exclude the \"' + optionGroupProduct.optionGroupIdNavigation.name + '\" Confirm ?',\n      showCancel: true\n    }\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"80vw\",\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(\n      (ok) => {\n        if (ok) {\n          this.deleteSize(optionGroupProduct);\n        }\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pizza-crust-editor',\n  templateUrl: './pizza-crust-editor.component.html',\n  styleUrls: ['./pizza-crust-editor.component.scss']\n})\nexport class PizzaCrustEditorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pizza-crust-editor works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pizza-edge-editor',\n  templateUrl: './pizza-edge-editor.component.html',\n  styleUrls: ['./pizza-edge-editor.component.scss']\n})\nexport class PizzaEdgeEditorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>pizza-edge-editor works!</p>\n","<div class=\"content\">\n    <div class=\"category-template\" *ngIf=\"choosingTemplate\">\n        <div class=\"img\" fxLayout=\"row\">\n            <div fxFlex=\"70\">\n                <div class=\"heading1 new-category\">{{ 'categoryEditor.newcategory' | translate }}</div>\n                <div class=\"body3 new-category-description\">\n                    {{ 'categoryEditor.desc' | translate }}\n                </div>\n            </div>\n            <div fxFlex=\"30\" fxLayoutAlign=\"end center\" class=\"close-icon\">\n                <mat-icon class=\"primary-color\" (click)=\"back()\">close</mat-icon>\n            </div>\n        </div>\n        <div class=\"pointer option\" (click)=\"chooseOption('DEFAULT')\">\n            <div class=\"light-grey-border-color item\" fxLayout=\"row\">\n                <div fxFlex=\"20\">\n                    <mat-icon class=\"primary-color\">fastfood</mat-icon>\n                </div>\n                <div fxFlex=\"80\">\n                    <div class=\"heading3\">\n                        {{ 'categoryEditor.mainitens' | translate }}\n                    </div>\n                    <div>\n                        {{ 'categoryEditor.foods' | translate }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- <div class=\"pointer option\" (click)=\"chooseOption('PIZZA')\">\n            <div class=\"light-grey-border-color item\" fxLayout=\"row\">\n                <div fxFlex=\"20\">\n                    <mat-icon class=\"primary-color\">local_pizza</mat-icon>\n                </div>\n                <div fxFlex=\"80\">\n                    <div class=\"heading3\">\n                        Pizza\n                    </div>\n                    <div>\n                        Foods, snacks, dessert\n                    </div>\n                </div>\n            </div>\n        </div> -->\n    </div>\n    <div *ngIf=\"!choosingTemplate\">\n        <div>\n            <div *ngIf=\"!category.name\" class=\"heading1 new-category\">{{ 'categoryEditor.newcat' | translate }}</div>\n            <div *ngIf=\"category.name\" class=\"heading1 new-category\">{{category.name}}</div>\n            <div class=\"body3 new-category-description\">{{ 'categoryEditor.details' | translate }}</div>\n            <div class=\"tabs\" fxLayout=\"row\" *ngIf=\"category.template == 'PIZZA'\">\n                <div class=\"tab heading2-regular\" *ngFor=\"let t of listTabs\" (click)=\"setTab(t)\"\n                    [ngClass]=\"{'primary-color': t==currentTab, 'currentTab-underline': t==currentTab, 'grey-color': t!=currentTab}\">\n                    {{'categoryEditor.tab.'+t|translate}}\n                </div>\n            </div>\n            <mat-divider *ngIf=\"category.template == 'PIZZA'\"></mat-divider>\n            <div *ngIf=\"currentTab == 'Details'\">\n                <div class=\"template-content\">\n                    <div class=\"template heading3-regular\">{{ 'categoryEditor.template' | translate }}</div>\n                    <div class=\"option\">\n                        <div class=\"light-grey-border-color item\" fxLayout=\"row\">\n                            <div fxFlex=\"20\">\n                                <mat-icon *ngIf=\"category.template=='DEFAULT'\" class=\"primary-color\">fastfood</mat-icon>\n                                <mat-icon *ngIf=\"category.template=='PIZZA'\" class=\"primary-color\">local_pizza\n                                </mat-icon>\n                            </div>\n                            <div fxFlex=\"70\">\n                                <div class=\"heading3 title-category\" *ngIf=\"category.template=='DEFAULT'\">\n                                    {{ 'categoryEditor.mainItens' | translate }}\n                                </div>\n                                <div class=\"heading3 title-category\" *ngIf=\"category.template=='PIZZA'\">\n                                    {{ 'categoryEditor.pizza' | translate }}\n                                </div>\n                            </div>\n                            <div class=\"pointer heading3-regular title-category\" fxFlex=\"10\">\n                                <div *ngIf=\"!category.id\" (click)=\"choosingTemplate=true\" class=\"alter primary-color\">\n                                    {{ 'categoryEditor.alter' | translate }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"heading2-regular category-name\">{{ 'categoryEditor.name' | translate }}</div>\n                    <div>\n                        <!-- <mat-input-container floatPlaceholder=\"auto\">\n                        <input matInput formControlName=\"formControlName\" type=\"text\" required placeholder=\"\">\n                </mat-input-container> -->\n                        <mat-form-field appearance=\"outline\">\n                            <!-- <mat-label class=\"dark-grey-color\">Category Name</mat-label> -->\n                            <input class=\"category-name-input\" matInput [(ngModel)]=\"category.name\"\n                                placeholder=\"Example: Flagships or promotions\">\n                            <!-- <mat-form-field appearance=\"outline\">\n                            <mat-label>Outline form field</mat-label>\n                            <input matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-hint>Hint</mat-hint>\n                        </mat-form-field> -->\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div *ngIf=\"category.template == 'PIZZA'\">\n                    <div class=\"heading2-regular category-name\">{{ 'categoryEditor.pizzaAvailability' | translate }}</div>\n                    <div>\n                        <div class=\"body4 new-category-description\">{{ 'categoryEditor.hereyou' | translate }}</div>\n                    </div>\n                    <div class=\"\">\n                        <div class=\"\">\n                            <mat-radio-button value=\"2\">{{ 'categoryEditor.alwaysavailable' | translate }}</mat-radio-button>\n                            <div class=\"grey-color description-option\">{{ 'categoryEditor.descOption' | translate }}</div>\n                        </div>\n                        <div class=\"options-available\">\n                            <mat-radio-button value=\"2\">{{ 'categoryEditor.optionsAvailable' | translate }}</mat-radio-button>\n                            <div class=\"grey-color  description-option\">{{ 'categoryEditor.optDesc' | translate }}</div>\n                        </div>\n                    </div>\n\n                    <!-- <div>\n                        <div>\n                        \n                        </div>\n                    </div> -->\n                </div>\n            </div>\n            <div *ngIf=\"currentTab == 'Sizes' && category.template == 'PIZZA'\">\n                <app-pizza-size-editor [optionGroupProducts]=\"optionGroupProducts\" [load]=\"loadSizePizza\">\n                </app-pizza-size-editor>\n            </div>\n            <div *ngIf=\"currentTab == 'Crusts' && category.template == 'PIZZA'\">\n                <app-pizza-crust-editor></app-pizza-crust-editor>\n            </div>\n            <div *ngIf=\"currentTab == 'Edges' && category.template == 'PIZZA'\">\n                <app-pizza-edge-editor></app-pizza-edge-editor>\n            </div>\n        </div>\n        <div>\n        </div>\n        <div class=\"footer\">\n            <div fxFlex=\"100\" fxLayout=\"row\">\n                <div>\n                    <button mat-button color=\"primary\" class=\"primary-border-color cancel\"\n                        (click)=\"dialogRef.close()\">{{ 'categoryEditor.cancel' | translate }}</button>\n                </div>\n                <div *ngIf=\"loadSave\">\n                    <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n                </div>\n                <div *ngIf=\"!loadSave\">\n                    <button mat-raised-button color=\"primary\" [disabled]=\"category.name == tmpName && category.template != 'PIZZA'\" class=\"save\"\n                        *ngIf=\"category.id || category.template != 'PIZZA'\" (click)=\"continue()\">{{ 'categoryEditor.save' | translate }}</button>\n                    <button mat-raised-button color=\"primary\" [disabled]=\"category.name == tmpName\" class=\"save\"\n                        *ngIf=\"!category.id && category.template == 'PIZZA'\" (click)=\"continue()\">{{ 'categoryEditor.continue' | translate }}</button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Category, Item, OptionGroup, OptionGroupProduct, Product } from 'src/app/api/models';\nimport { CategoryService } from 'src/app/api/services';\nimport { CatalogDataService } from 'src/app/services/catalog/catalog-data.service';\nimport { SystemService } from 'src/app/services/system.service';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../dialogs/confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-category-editor',\n  templateUrl: './category-editor.component.html',\n  styleUrls: ['./category-editor.component.scss']\n})\nexport class CategoryEditorComponent implements OnInit {\n\n  optionGroupProducts: OptionGroupProduct[] = [\n    {\n      //id: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n      min: 1,\n      max: 1,\n      status: \"AVAILABLE\",\n      acceptedFractions: \"1\",\n      slices: \"1\",\n      //optionGroupId: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n      //productId: \"ab91c4a9-103f-43b8-a42c-105c0379e571\",\n      optionGroupIdNavigation: {\n        //id: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n        name: \"SMALL\",\n        status: \"AVAILABLE\",\n        type: \"FLAVOR\",\n        createdAt: \"2022-06-03T09:09:33\",\n        merchantId: \"55d0e3fb-f932-11eb-b388-000d3a8abda5\",\n        merchantIdNavigation: null,\n        option: [],\n      }\n    },\n    {\n      //id: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n      min: 1,\n      max: 2,\n      status: \"AVAILABLE\",\n      acceptedFractions: \"1,2\",\n      slices: \"6\",\n      //optionGroupId: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n      //productId: \"ab91c4a9-103f-43b8-a42c-105c0379e571\",\n      optionGroupIdNavigation: {\n        //id: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n        name: \"MEDIUM\",\n        status: \"AVAILABLE\",\n        type: \"FLAVOR\",\n        createdAt: \"2022-06-03T09:09:33\",\n        merchantId: \"55d0e3fb-f932-11eb-b388-000d3a8abda5\",\n        merchantIdNavigation: null,\n        option: [],\n      }\n    },\n    {\n      //id: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n      min: 1,\n      max: 3,\n      status: \"AVAILABLE\",\n      acceptedFractions: \"1,2,3\",\n      slices: \"8\",\n      //optionGroupId: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n      //productId: \"ab91c4a9-103f-43b8-a42c-105c0379e571\",\n      optionGroupIdNavigation: {\n        //id: \"b3b40565-d6d6-44a9-8919-fcacfc1eeef4\",\n        name: \"BIG\",\n        status: \"AVAILABLE\",\n        type: \"FLAVOR\",\n        createdAt: \"2022-06-03T09:09:33\",\n        merchantId: \"55d0e3fb-f932-11eb-b388-000d3a8abda5\",\n        merchantIdNavigation: null,\n        option: [],\n      }\n    }];\n\n  choosingTemplate: boolean = true;\n  loadSizePizza: boolean = false;\n  loadSave: boolean = false;\n  tmpName: string = \"\";\n  itemPizza: Item;\n  productPizza: Product;\n  currentTab: string = 'Details';\n  listTabs: string[] = [\"Details\", \"Sizes\", \"Crusts\", \"Edges\"];\n  constructor(public dialogRef: MatDialogRef<CategoryEditorComponent>,\n    private systemSvc: SystemService,\n    public dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public category: Category,\n    private categorySvc: CategoryService, private catalogDataSvc: CatalogDataService) {\n    this.tmpName = category.name;\n    if (category.id) {\n      this.choosingTemplate = false;\n    }\n    this.loadTempletePizza()\n  }\n\n  loadTempletePizza() {\n    var _self = this;\n    if (_self.category.template == 'PIZZA' && this.category.id) {\n      _self.loadSizePizza = true;\n      _self.catalogDataSvc.getItemByCategory(_self.category.id).then(function (d) {\n        if (d) {\n          _self.itemPizza = d[0]; \n          if (_self.itemPizza.id)\n            _self.catalogDataSvc.getProduct(_self.itemPizza.productId).then(function (p) {\n              _self.productPizza = p;\n              for (let i = 0; i < _self.productPizza.optionGroupProduct.length; i++) {\n                _self.catalogDataSvc.getOptionGroup(_self.productPizza.optionGroupProduct[i].optionGroupId).then(function (d) {\n                  _self.productPizza.optionGroupProduct[i].optionGroupIdNavigation = d;\n                  if (_self.productPizza.optionGroupProduct.length > 0) {\n                    _self.optionGroupProducts = _self.productPizza.optionGroupProduct;\n                  }\n                  if (i == (_self.productPizza.optionGroupProduct.length - 1)) {\n                    _self.loadSizePizza = false;\n                  }\n                }, function (e) {\n                  _self.loadSizePizza = false;\n                  console.log(e);\n                });\n              }\n            }, function (e) {\n              _self.loadSizePizza = false;\n              console.log(e);\n            });\n        }\n      }, function (e) {\n        _self.loadSizePizza = false;\n        console.log(e);\n      });\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  chooseOption(template: string) {\n    this.choosingTemplate = false;\n    this.category.template = template;\n    this.category.status = 'AVAILABLE';\n  }\n\n  setTab(name: string) {\n    if (this.category.id) {\n      this.currentTab = name;\n    }\n    else {\n      if (this.listTabs.indexOf(name) <= this.listTabs.indexOf(this.currentTab)) {\n        this.currentTab = name;\n      }\n    }\n  }\n\n  continue() {\n    var _self = this;\n    var ret = _self.checkContinue();\n    if (ret == \"\") {\n      if (this.category.template == 'PIZZA') {\n        var idx = this.listTabs.indexOf(this.currentTab);\n        var newIdx = idx + 1;\n        if ((newIdx <= (this.listTabs.length - 1)) && !(this.category.id != undefined && this.category.id != null && this.category.id != \"\")) {\n          this.currentTab = this.listTabs[newIdx];\n        } else {\n          console.info('save category');\n          console.dir(this.category);\n          this.save();\n        }\n      } else {\n        this.save();\n      }\n    } else {\n      this.openDialog(ret);\n    }\n  }\n\n  checkContinue() {\n    var ret = \"\";\n    if (this.category.template == 'PIZZA') {\n      for (let i = 0; i < this.optionGroupProducts.length; i++) {\n        if (this.optionGroupProducts[i].optionGroupIdNavigation.name == \"\") {\n          ret = \"Fill in the name size field\";\n        }\n        if (ret == \"\" && parseInt(this.optionGroupProducts[i].slices) <= 0) {\n          ret = \"Number of pieces must be greater than 0\";\n        }\n      }\n\n    }\n    return ret;\n  }\n\n  openDialog(msg: string) {\n    var dialogData: ConfirmDialogModel = {\n      title: \"Atention\",\n      message: msg,\n      showCancel: true\n    }\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"80vw\",\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(\n      (ok) => {\n        if (ok) {\n        }\n      }\n    );\n  }\n\n  async save() {\n    var _self = this;\n    _self.loadSave = true;\n    //TODO: Before saving individually save crust, edge, sizes if necessary\n    try {\n      var ret = await this.catalogDataSvc.saveCategory(this.category).then(function (d) {\n        if (d && _self.category.template == 'PIZZA') {\n          var product: Product;\n          if (_self.productPizza && _self.productPizza.id) {\n            product = _self.productPizza\n          }\n          else {\n            product = {\n              name: \"Pizza\",\n              status: \"AVAILABLE\",\n              merchantGroupId: _self.systemSvc.selectedMerchantGroup.id\n            }\n          }\n          product.option = [];\n          product.optionGroupProduct = [];\n          _self.catalogDataSvc.saveProduct(product).then(function (p) {\n            if (p) {\n              var item: Item;\n              if (_self.itemPizza && _self.itemPizza.id) {\n                item = _self.itemPizza\n              }\n              else {\n                item = {\n                  price: 0,\n                  status: \"AVAILABLE\",\n                  categoryId: _self.category.id,\n                  productId: p.id,\n                }\n              }\n              _self.catalogDataSvc.saveItem(item).then(function (it) {\n                if (it) {\n                  var og: OptionGroup;\n                  for (let i = 0; i < _self.optionGroupProducts.length; i++) {\n                    _self.optionGroupProducts[i].productId = item.productId;\n                    _self.optionGroupProducts[i].slices = _self.optionGroupProducts[i].slices.toString();\n                    _self.optionGroupProducts[i].max = _self.getMaxOptionGroupProducts(_self.optionGroupProducts[i].acceptedFractions);\n                    og = _self.optionGroupProducts[i].optionGroupIdNavigation;\n                    _self.optionGroupProducts[i].optionGroupIdNavigation = null;\n                    og.optionGroupProduct = [];\n                    og.optionGroupProduct.push(_self.optionGroupProducts[i]);\n                    og.merchantId = _self.catalogDataSvc.catalog.merchantId;\n                    try {\n                      _self.catalogDataSvc.saveOptionGroup(og).then(function (retOg) {\n                        if (retOg) {\n                          var idx = _self.optionGroupProducts.indexOf(og.optionGroupProduct[0]);\n                          if (idx >= 0) {\n                            var ogpNew = retOg.optionGroupProduct[0];\n                            ogpNew.optionGroupIdNavigation = retOg;\n                            ogpNew.optionGroupIdNavigation.optionGroupProduct = [];\n\n                            _self.optionGroupProducts[idx] = ogpNew;\n                            // retOg.optionGroupProduct[0];\n                            // _self.optionGroupProducts[idx].optionGroupIdNavigation = retOg;\n                            // _self.optionGroupProducts[idx].optionGroupIdNavigation.optionGroupProduct = [];\n                          }\n                          _self.dialogRef.close(_self.category);\n                          _self.loadSave = false;\n                        }\n                      }, function () {\n                        _self.loadSave = false;\n                      });\n                    } catch (error) {\n                      _self.loadSave = false;\n                      console.log(error);\n                    }\n                  }\n                }\n              }, function () {\n                _self.loadSave = false;\n              });\n            }\n          }, function () {\n            _self.loadSave = false;\n          });\n        } else {\n          _self.dialogRef.close(_self.category);\n          _self.loadSave = false;\n        }\n      }, function () {\n        _self.loadSave = false;\n      });\n    } catch (error) {\n      _self.loadSave = false;\n    }\n  }\n  getMaxOptionGroupProducts(acceptedFractions: string) {\n    var ret = 1;\n    var listAcceptedFractions = acceptedFractions.split(',').sort();\n    ret = parseInt(listAcceptedFractions[listAcceptedFractions.length - 1]);\n    return ret;\n  }\n  back() {\n    this.dialogRef.close()\n  }\n}\n","<div class=\"item grey-border-color\">\n    <div fxFlex=\"10\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\n        <mat-icon class=\"mat-icon-menu grey-color\">menu</mat-icon>\n    </div>\n    <div fxFlex=\"30\" fxLayout=\"Column\"> \n        <div>\n            <div class=\"img\" fxLayoutAlign=\"center center\">\n                <!-- <img /> -->\n                <mat-icon class=\"primary-color\">local_see</mat-icon>\n            </div>\n        </div> \n        <div>\n            <div class=\"heading4 title\">{{ 'optionEditor.poscode' | translate }}</div>\n            <div>\n                <input placeholder=\"000\">\n            </div>\n        </div>\n        <div>\n            <div class=\"heading4 title\">{{ 'optionEditor.salestatus' | translate }}</div>\n            <div>\n                <button (click)=\"alterStatus('UNAVAILABLE')\" *ngIf=\"option.status == 'AVAILABLE'\"\n                    class=\"button-status btn btn-pause btn-pause-matte primary-border-color body5-semibold primary-color\"\n                    mat-button>{{ 'optionEditor.pause' | translate }}</button>\n                <button *ngIf=\"option.status == 'AVAILABLE'\"\n                    class=\"button-status btn btn-activate white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                    mat-raised-button>{{ 'optionEditor.activated' | translate }}</button>\n                <button *ngIf=\"option.status == 'UNAVAILABLE'\"\n                    class=\"button-status btn btn-pause white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                    mat-raised-button>{{ 'optionEditor.paused' | translate }}</button>\n                <button (click)=\"alterStatus('AVAILABLE')\" *ngIf=\"option.status == 'UNAVAILABLE'\"\n                    class=\"button-status btn btn-activate btn-pause-matte primary-border-color primary-border-color body5-semibold primary-color\"\n                    mat-button>{{ 'optionEditor.activate' | translate }}</button>\n            </div>\n        </div>\n    </div>\n    <div fxFlex=\"50\" fxLayout=\"Column\" class=\"name-complement\">\n        <div>\n            <div class=\"title-add-name\">\n                <span class=\"heading4\">{{ 'optionEditor.addon' | translate }} </span><span class=\"grey-color\"> ({{ 'optionEditor.mandatory' | translate }})</span>\n            </div>\n            <div>\n                <input [(ngModel)]=\"option.productIdNavigation.name\" placeholder=\"Example: French fries\">\n            </div>\n        </div>\n        <div>\n            <div class=\"heading4 title\">{{ 'optionEditor.description' | translate }}</div>\n            <div>\n                <!-- [(ngModel)]=\"\" -->\n                <textarea [(ngModel)]=\"option.productIdNavigation.description\" class=\"light-grey-border-color\" matInput\n                    placeholder=\"{{ 'optionEditor.descriptionPlaceholder' | translate }}\"></textarea>\n            </div>\n        </div>\n        <div>\n            <div class=\"title\">\n                <span class=\"heading4\">{{ 'optionEditor.price' | translate }} </span> <span class=\"grey-color\"> ({{ 'optionEditor.mandatory' | translate }})</span>\n            </div>\n            <div>\n                <input [(ngModel)]=\"option.price\" class=\"price\" placeholder=\"{{ 'optionEditor.placeholder' | translate }}\">\n            </div>\n        </div>\n    </div>\n    <div fxFlex=\"10\" fxLayout=\"column\" fxLayoutAlign=\"start center\" (click)=\"deleteOption()\">\n        <img class=\"img-remove pointer\" src=\"../../../../assets/svgs/trash-icon.0d73c2a9.svg\" />\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Option } from 'src/app/api/models';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogModel } from '../../dialogs/confirm-dialog/confirm-dialog.component';\nimport { ConfirmDialogComponent } from '../../dialogs/confirm-dialog/confirm-dialog.component';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-option-editor',\n  templateUrl: './option-editor.component.html', \n  styleUrls: ['./option-editor.component.scss']\n})\nexport class OptionEditorComponent implements OnInit {\n\n  @Input() option:Option;\n  @Output() onDeletedOption = new EventEmitter();\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  alterStatus(status){\n    this.option.status = status;\n  }\n  async deleteOption(){\n    let translate=AppComponent.Instance.translate;\n    let title=await translate.get(\"optionEditor.dlg.title\").toPromise();\n    let msg=await translate.get(\"optionEditor.dlg.msg\").toPromise();\n    var dialogData: ConfirmDialogModel ={\n      title:title,\n      message:msg+ this.option.productIdNavigation.name + '\" ?',\n      showCancel:true\n    }\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"80vw\",\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(\n      (ok) => {\n        if (ok) {\n          this.onDeletedOption.emit(this.option);\n        }\n      }\n    )\n  }\n}\n","<div class=\"content\" fxLayout=\"column\">\n    <div class=\"head heading1\">\n        <div fxFlex=\"90\" fxLayoutAlign=\"start center\">\n            <span *ngIf=\"!ogp.optionGroupIdNavigation.name\">{{ 'optionGroupProductEditor.newname' | translate }}</span>\n            <span *ngIf=\"ogp.optionGroupIdNavigation.name\">{{ogp.optionGroupIdNavigation.name}}</span>\n        </div>\n        <div fxFlex=\"10\" fxLayoutAlign=\"end center\">\n            <mat-icon class=\"primary-color\">close</mat-icon>\n        </div>\n    </div>\n    <div class=\"tabs\" fxLayout=\"row\">\n        <div class=\"tab heading2-regular\" *ngFor=\"let t of listTabs\" (click)=\"setTab(t)\"\n            [ngClass]=\"{'primary-color': t==currentTab, 'currentTab-underline': t==currentTab, 'grey-color': t!=currentTab}\">\n            {{'optionGroupProductEditor.tab.'+t|translate}}\n        </div>\n    </div>\n    <mat-divider></mat-divider>\n    <div *ngIf=\"currentTab=='Details'\">\n        <div class=\"name-group\">\n            <div class=\"heading4 category-name\">{{ 'optionGroupProductEditor.name' | translate }}\n                <span class=\"grey-color\">({{ 'optionGroupProductEditor.mandatory' | translate }})</span>\n            </div>\n            <div class=\"name\">\n                <input placeholder=\"Name\" [(ngModel)]=\"ogp.optionGroupIdNavigation.name\">\n            </div>\n        </div>\n        <div>\n            <div class=\"heading3-regular mandatory\">{{ 'optionGroupProductEditor.aMandatory' | translate }}</div>\n            <div class=\"body1\">{{ 'optionGroupProductEditor.indicate' | translate }} </div>\n            <div class=\"radio-group\">\n                <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"mandatory\" fxLayout=\"column\">\n                    <mat-radio-button [value]=\"false\" class=\"optinal\">\n                        <div fxLayout=\"column\">\n                            <div>{{ 'optionGroupProductEditor.optional' | translate }}</div>\n                            <div class=\"body1 grey-color\">{{ 'optionGroupProductEditor.optionalMsg' | translate }}</div>\n                        </div>\n                    </mat-radio-button>\n                    <mat-radio-button [value]=\"true\">\n                        <div fxLayout=\"column\">\n                            <div>{{ 'optionGroupProductEditor.aMandatory' | translate }}</div>\n                            <div class=\"body1 grey-color\">{{ 'optionGroupProductEditor.needadd' | translate }}\n                            </div>\n                        </div>\n                    </mat-radio-button>\n                </mat-radio-group>\n            </div>\n        </div>\n        <div class=\"quantity-title heading3\">{{ 'optionGroupProductEditor.quantity' | translate }}</div>\n        <div class=\"body1 instruction-quantity\">{{ 'optionGroupProductEditor.indicateHowMany' | translate }}</div>\n        <div fxLayout=\"row\">\n            <div class=\"column minimum\">\n                <div class=\"heading3 quantity-label\">{{ 'optionGroupProductEditor.minimum' | translate }}</div>\n                <div class=\"change-quantity light-grey-border-color\" fxLayout=\"row\">\n                    <div>\n                        <mat-icon class=\"grey-color\">remove</mat-icon>\n                    </div>\n                    <div class=\"quantity\" [ngClass]=\"{\n                    'grey-color':ogp.min==0,\n                    'black-color': ogp.min>0\n                  }\">{{ogp.min}}</div>\n                    <div>\n                        <mat-icon class=\"grey-color\">add</mat-icon>\n                    </div>\n                </div>\n            </div>\n            <div class=\"column\">\n                <div class=\"heading3 quantity-label\">{{ 'optionGroupProductEditor.maximum' | translate }}</div>\n                <div class=\"change-quantity light-grey-border-color\" fxLayout=\"row\">\n                    <div (click)=\"ogp.max>1?ogp.max=ogp.max-1:ogp.max=ogp.max\">\n                        <mat-icon class=\"grey-color\" [ngClass]=\"{\n                        'grey-color':ogp.max==1,\n                        'primary-color': ogp.max>1\n                      }\">remove</mat-icon>\n                    </div>\n                    <div class=\"quantity\">{{ogp.max}}</div>\n                    <div (click)=\"ogp.max=ogp.max+1\">\n                        <mat-icon class=\"primary-color\">add</mat-icon>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"currentTab=='Complements'\">\n        <app-option-editor [option]=\"option\" *ngFor=\"let option of ogp.optionGroupIdNavigation.option\" (onDeletedOption)=\"onDeletedOption(option)\">\n        </app-option-editor>\n        <div fxLayout=\"column\" class=\"buttons-actions\">\n            <div class=\"add-complement heading2-regular\">\n                {{ 'optionGroupProductEditor.addaddon' | translate }}\n            </div>\n            <div class=\"pointer prepared light-grey-border-color\" (click)=\"addItemComplement()\">\n                <div fxFlex=\"20\" fxLayoutAlign=\"center center\">\n                    <mat-icon class=\"primary-color\">add</mat-icon>\n                </div>\n                <div fxFlex=\"80\" fxLayout=\"column\"> \n                    <div class=\"title heading3\">\n                        {{ 'optionGroupProductEditor.prepared' | translate }}\n                    </div>\n                    <div>\n                        {{ 'optionGroupProductEditor.complementsHeading' | translate }}\n                    </div>\n                </div>\n            </div>\n            <div></div>\n        </div>\n    </div>\n    <div class=\"footer\">\n        <div fxFlex=\"100\" fxLayout=\"row\">\n            <button mat-button class=\"button primary-border-color primary-color cancel\"\n                (click)=\"dialogRef.close()\">{{ 'optionGroupProductEditor.cancel' | translate }}</button>\n            <button mat-raised-button class=\"button primary-background-color white-80-color\"\n                [disabled]=\"ogp.optionGroupIdNavigation.name==''\" (click)=\"continue()\">{{ 'optionGroupProductEditor.next' | translate }}</button>\n        </div>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Option, OptionGroupProduct, Product } from 'src/app/api/models';\nimport { SystemService } from 'src/app/services/system.service';\nimport { ItemEditorComponent } from '../../item/item-editor/item-editor.component';\n\n@Component({\n  selector: 'app-option-group-product-editor',\n  templateUrl: './option-group-product-editor.component.html',\n  styleUrls: ['./option-group-product-editor.component.scss']\n})\nexport class OptionGroupProductEditorComponent implements OnInit {\n  currentTab: string = \"Details\";\n  listTabs: string[] = [\"Details\", \"Complements\"];\n  editing:boolean=false;\n  private _mandatory: boolean = false;\n  public get mandatory(): boolean {\n    return this._mandatory;\n  }\n  public set mandatory(v: boolean) {\n    this._mandatory = v;\n    if (v) {\n      this.ogp.min = 1;\n    } else {\n      this.ogp.min = 0;\n    }\n  }\n\n  constructor(public dialogRef: MatDialogRef<OptionGroupProductEditorComponent>,\n    @Inject(MAT_DIALOG_DATA) public ogp: OptionGroupProduct,private systemSvc:SystemService) {\n    if (ogp.min > 0) {\n      this._mandatory = true;\n    }\n    if(ogp.optionGroupIdNavigation.name){\n      this.editing=true;\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  setTab(name: string) {\n    if (this.editing) {\n      this.currentTab = name;\n    }\n    else {\n      if (this.listTabs.indexOf(name) <= this.listTabs.indexOf(this.currentTab)) {\n        this.currentTab = name;\n      }\n    }\n  }\n  continue() {\n    if (this.validate()) {\n      var idx = this.listTabs.indexOf(this.currentTab);\n      var newIdx = idx + 1;\n      if (newIdx <= (this.listTabs.length - 1)) {\n        this.currentTab = this.listTabs[newIdx];\n        if (!(this.ogp.optionGroupIdNavigation.option && this.ogp.optionGroupIdNavigation.option.length > 0)) {\n          this.ogp.optionGroupIdNavigation.option = [];\n          console.log('sdf');\n          this.addItemComplement();\n        }else{\n          \n        }\n      } else {\n        this.dialogRef.close(this.ogp);\n      }\n    }\n  }\n  addItemComplement() {\n    this.ogp.optionGroupIdNavigation.option.push(<Option>{\n      price: undefined,\n      status: \"AVAILABLE\",\n      externalCode: undefined,\n      productIdNavigation:<Product> {\n        id: \"\",\n        name: undefined,\n        status:\"AVAILABLE\",\n        merchantGroupId:this.systemSvc.selectedMerchantGroup.id\n      }\n    });\n  }\n  validate() {\n    if (this.ogp.optionGroupIdNavigation.name == '' || this.ogp.optionGroupIdNavigation.name == undefined) {\n      return false;\n    }\n    return true;\n  }\n\n  onDeletedOption(option:Option){\n    var idx = this.ogp.optionGroupIdNavigation.option.indexOf(option);\n    console.dir(idx);\n    if(idx>=0){\n      this.ogp.optionGroupIdNavigation.option.splice(idx,1); \n    }\n  }\n}\n","<div class=\"content\" fxLayout=\"column\">\n    <div class=\"item-name\">\n        <span class=\"heading1\" *ngIf=\"item && item.productIdNavigation && item.productIdNavigation.name\">\n            {{item.productIdNavigation.name}}</span>\n        <span class=\"heading1\" *ngIf=\"!(item && item.productIdNavigation && item.productIdNavigation.name)\"> {{ 'itemEditor.newItem' | translate }}</span>\n    </div>\n    <div class=\"tabs\" fxLayout=\"row\">\n        <div class=\"tab heading2-regular\" *ngFor=\"let t of listTabs\" (click)=\"setTab(t)\"\n            [ngClass]=\"{'primary-color': t==currentTab, 'currentTab-underline': t==currentTab, 'grey-color': t!=currentTab}\">\n            {{('itemEditor.tab.'+t)|translate}}\n        </div>\n    </div>\n    <mat-divider></mat-divider>\n    <div class=\"body\">\n        <app-item-details *ngIf=\"currentTab=='Details'\" [item]=\"item\"></app-item-details>\n        <app-item-price *ngIf=\"currentTab=='Price'\" [item]=\"item\"></app-item-price>\n        <div *ngIf=\"currentTab=='Complement'\">\n            <div class=\"question extra-light-grey-background-color\">\n                <div class=\"body1 title-option\">{{ 'itemEditor.selectOption' | translate }}</div>\n                <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"hasComplement\" fxLayout=\"column\">\n                    <mat-radio-button [value]=\"false\">{{ 'itemEditor.nocomplement' | translate }}</mat-radio-button>\n                    <mat-radio-button [value]=\"true\">{{ 'itemEditor.yescomplement' | translate }}</mat-radio-button>\n                </mat-radio-group>\n                <div></div>\n            </div>\n            <div *ngIf=\"hasComplement && item.productIdNavigation.optionGroupProduct && item.productIdNavigation.optionGroupProduct.length>0\"\n                class=\"mat-elevation-z2\">\n                <div class=\"group body1-bold light-grey-border-color\">\n                    {{ 'itemEditor.complementGroups' | translate }}\n                </div>\n                <div class=\"group-list light-grey-border-color\">\n                    <div class=\"group-list-item\" *ngFor=\"let ogp of item.productIdNavigation.optionGroupProduct\">\n                        <app-option-group-list-item [ogp]=\"ogp\" (onDeletedOptionGroup)=\"onDeletedOptionGroup(ogp)\">\n                        </app-option-group-list-item>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"btns-create-copy\" *ngIf=\"hasComplement\">\n                <button mat-button color=\"primary\" class=\"btn-create primary-border-color\"\n                    (click)=\"addComplementGroup()\">{{ 'itemEditor.createAddon' | translate }}</button>\n                <button mat-button color=\"primary\" class=\"primary-border-color\">{{ 'itemEditor.copyfrom' | translate }}</button>\n            </div>\n            <div class=\"height\"></div>\n            <!-- <app-item-complement *ngIf=\"hasComplement\" [item]=\"item\"></app-item-complement> -->\n        </div>\n        <app-item-classification *ngIf=\"currentTab=='Classification'\" [item]=\"item\"></app-item-classification>\n        <app-item-availability *ngIf=\"currentTab=='Availability'\" [item]=\"item\"></app-item-availability>\n    </div>\n    <div class=\"footer-btn white-background-color\" fxLayoutAlign=\"end start\">\n        <div fxLayout=\"row\">\n            <div *ngIf=\"!load\">\n                <button mat-button color=\"primary\" class=\"btn-cancel primary-border-color\"\n                    (click)=\"cancel()\">{{ 'itemEditor.cancel' | translate }}</button>\n            </div>\n            <div *ngIf=\"load\">\n                <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n            </div>\n            <div *ngIf=\"!load\">\n                <button mat-raised-button color=\"primary\" class=\"primary-background-color white-80-color\"\n                    (click)=\"continue()\">\n                    <span *ngIf=\"item && item.id\">{{ 'itemEditor.save' | translate }}</span>\n                    <span *ngIf=\"!(item && item.id)\">{{ 'itemEditor.continue' | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport Enumerable from 'linq';\nimport { Item, OptionGroupProduct } from 'src/app/api/models';\nimport { ItemService } from 'src/app/api/services';\nimport { CatalogDataService } from 'src/app/services/catalog/catalog-data.service';\nimport { SystemService } from 'src/app/services/system.service';\nimport { SSUuid } from 'src/app/static-stack/uuid';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../../dialogs/confirm-dialog/confirm-dialog.component';\nimport { OptionGroupProductEditorComponent } from '../../option/option-group-product-editor/option-group-product-editor.component';\n\n@Component({\n  selector: 'app-item-editor',\n  templateUrl: './item-editor.component.html',\n  styleUrls: ['./item-editor.component.scss']\n})\nexport class ItemEditorComponent implements OnInit {\n  private notChangedItem: Item = {};\n  constructor(public dialog: MatDialog, public dialogRef: MatDialogRef<ItemEditorComponent>,\n    @Inject(MAT_DIALOG_DATA) public item: Item, private itemSvc: ItemService, private catalogDataSvc: CatalogDataService,\n    private systemSvc: SystemService) {\n    try {\n      this.notChangedItem = JSON.parse(JSON.stringify(item));\n    } catch (error) {\n\n    }\n  }\n  currentTab: string = 'Details';\n  load: boolean = false;\n  //listTabs: string[] = [\"Details\", \"Price\", \"Complement\", \"Classification\", \"Availability\"];\n  listTabs: string[] = [\"Details\", \"Price\", \"Complement\", \"Availability\"];\n  hasComplement: boolean = false;\n  ngOnInit(): void {\n    if (this.item && this.item.id) {\n      if (this.item.productIdNavigation.optionGroupProduct && this.item.productIdNavigation.optionGroupProduct.length > 0) {\n        this.hasComplement = true;\n      }\n    }\n    // this.addComplementGroup();\n  }\n  setTab(name: string) {\n    if (this.item.id) {\n      this.currentTab = name;\n    }\n    else {\n      if (this.listTabs.indexOf(name) <= this.listTabs.indexOf(this.currentTab)) {\n        this.currentTab = name;\n      }\n    }\n  }\n  continue() {\n    var _self = this;\n    var ret = _self.validate();\n    if (ret == \"\") {\n      var idx = this.listTabs.indexOf(this.currentTab);\n      var newIdx = idx + 1;\n      if ((newIdx <= (this.listTabs.length - 1)) && !(this.item.id != undefined && this.item.id != null && this.item.id != \"\")) {\n        this.currentTab = this.listTabs[newIdx];\n      } else {\n        console.info('save item');\n        console.dir(this.item);\n        _self.load = true;\n        this.catalogDataSvc.saveItem(this.item).then(function (d) {\n          console.log(\"close\");\n          _self.load = false;\n          _self.dialogRef.close();\n        }).catch(function (e) {\n          _self.load = false;\n          console.log(e);\n        });\n      }\n    }else{\n      this.openDialog(ret);\n    }\n  }\n  validate() {\n    var ret = \"\"\n    if (this.item.productIdNavigation.name == '' || this.item.productIdNavigation.name == undefined) {\n      ret = \"Fill in the product name\";\n    }\n    return ret;\n  }\n  cancel() {\n    this.dialogRef.close();\n  }\n  openDialog(msg: string) {\n    var dialogData: ConfirmDialogModel = {\n      title: \"Atention\",\n      message: msg,\n      showCancel: true\n    }\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"80vw\",\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(\n      (ok) => {\n        if (ok) {\n        }\n      }\n    );\n  }\n  addComplementGroup() {\n    var tmpItem: OptionGroupProduct = {\n      id: undefined,\n      min: 0,\n      max: 1,\n      status: \"AVAILABLE\",\n      optionGroupIdNavigation: {\n        name: \"\",\n        status: \"AVAILABLE\",\n        merchantId: this.systemSvc.selectedMerchant.id\n      }\n    }\n    var dialogRef = this.dialog.open(OptionGroupProductEditorComponent, {\n      width: \"70vw\",\n      height: \"100vw\",\n      position: { right: '0' },\n      data: tmpItem\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        console.log(result);\n        if (result) {\n          if (!this.item.productIdNavigation.optionGroupProduct) {\n            this.item.productIdNavigation.optionGroupProduct = [];\n          }\n          this.item.productIdNavigation.optionGroupProduct.push(result);\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    )\n  }\n\n  onDeletedOptionGroup(ogp: OptionGroupProduct) {\n    var idx = this.item.productIdNavigation.optionGroupProduct.indexOf(ogp);\n    if (idx >= 0) {\n      this.item.productIdNavigation.optionGroupProduct.splice(idx, 1);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Item } from 'src/app/api/models/item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangePriceService {\n  objChangingPrice: { id: string, price: number, type: string } | undefined;\n  changingPrice: number = 0;\n  itemsToChangePrice: any = {};\n  private _onSavePricesSubject = new Subject<any>();\n  public onSavePrices = this._onSavePricesSubject.asObservable();\n  public hasChanges:boolean = false;\n  constructor() { }\n  //todo onSavePrices();\n  changeItemPrice(item: Item) {\n    this.objChangingPrice = {\n      id: item.id,\n      price: item.price,\n      type: 'item'\n    };\n    if (!this.itemsToChangePrice[item.id]) {\n      this.changingPrice = item.price;\n    } else {\n      this.changingPrice = this.itemsToChangePrice[item.id];\n    }\n  }\n  changedPrice() {\n    if (this.objChangingPrice.price != this.changingPrice) {\n      this.itemsToChangePrice[this.objChangingPrice.id] = this.changingPrice;\n      this.hasChanges =true;\n    } else {\n      if (this.itemsToChangePrice[this.objChangingPrice.id]) {\n        delete this.itemsToChangePrice[this.objChangingPrice.id];\n        if(!(Object.keys(this.itemsToChangePrice).length>0)){\n          this.hasChanges=false;\n        }\n      }\n    }\n  }\n  blurItem(id) {\n    if (this.objChangingPrice && this.objChangingPrice.type == 'item' && this.objChangingPrice.id == id) {\n      try {\n        // delete this.itemsToChangePrice[this.objChangingPrice.id];\n      } catch (error) {\n\n      }\n      this.objChangingPrice = undefined;\n      this.changingPrice = 0;\n    }\n  }\n  discard(){\n  this.objChangingPrice=undefined;\n  this.changingPrice =0;\n  this.itemsToChangePrice={};\n  this.hasChanges = false;\n  }\n  save(){\n    for (let i = 0; i < Object.keys(this.itemsToChangePrice).length; i++) {\n      const id = Object.keys(this.itemsToChangePrice)[i];\n      var price = this.itemsToChangePrice[id];\n\n      \n    }\n    this.hasChanges=false;\n  }\n}\n","<div class=\"content\" fxLayout=\"column\">\n    <div fxLayout.lt-md=\"column\" fxLayout.gt-sm=\"row\">\n        <div fxFlex.gt-sm=\"50\" fxFlex.lt-md=\"100\">\n            <div fxLayout=\"row wrap\" fxFlex.gt-sm=\"70\" fxFlex.lt-md=\"90\">\n                <div fxFlex=\"30\">\n                    <div class=\"img-item\">\n                        <img class=\"img\" *ngIf=\"!uploadedImg\" src=\"../../../assets/svgs/empty-image.svg\" (click)=\"changeImg()\">\n                        <img class=\"img filled\" *ngIf=\"uploadedImg\" [src]=\"uploadedImg|async\" (click)=\"changeImg()\">\n                        <!-- <app-mff-upload-file id=\"mff-upload-file\" fxFlex=\"100\" label=\"App Icon\" (onComplete)=\"onUploadImg($event)\"></app-mff-upload-file> -->\n                    </div>\n                </div>\n                <div fxFlex=\"5\"></div>\n                <div fxFlex.lt-md=\"65\" class=\"text-item\" fxLayout=\"column\" (click)=\"editItem()\" fxLayoutAlign=\"start start\">\n                    <div [matTooltip]=\"item.id\" matTooltipPosition=\"above\" class=\"heading4\">\n                        {{item.productIdNavigation.name}}</div>\n                    <div>{{item.productIdNavigation.description}}</div>\n                </div>\n            </div>\n            <div fxFlex=\"10\" fxFlex.lt-md=\"10\" fxLayoutAlign=\"end start\" fxHide.gt-sm>\n                <div class=\"toggle\"\n                    *ngIf=\"item.productIdNavigation.optionGroupProduct && item.productIdNavigation.optionGroupProduct.length>0\">\n                    <mat-icon class=\"primary-color\" (click)=\"toggleShowOptions()\" *ngIf=\"!showOptions\">\n                        keyboard_arrow_down</mat-icon>\n                    <mat-icon class=\"primary-color\" (click)=\"toggleShowOptions()\" *ngIf=\"showOptions\">\n                        keyboard_arrow_up\n                    </mat-icon>\n                </div>\n                <div>\n                    <mat-spinner *ngIf=\"loadDelete\" class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n                    <mat-icon *ngIf=\"!loadDelete\" [matMenuTriggerFor]=\"menu\">more_vert</mat-icon>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item (click)=\"editItem()\">{{ 'categoryListItem.edit' | translate }}</button>\n                        <button mat-menu-item (click)=\"deleteItem()\">{{ 'categoryListItem.delete' | translate }}</button>\n                        <button mat-menu-item>{{ 'categoryListItem.duplicate' | translate }}</button>\n                    </mat-menu>\n                </div>\n\n            </div>\n        </div>\n        <div fxLayout=\"row\" fxFlex.gt-sm=\"50\" fxFlex.lt-md=\"100\" class=\"price-status\">\n            <div fxFlex.lt-md=\"50\" fxFlex.gt-sm=\"40\" fxLayoutAlign=\"start start\">\n                <div *ngIf=\"!(changePriceSvc.objChangingPrice && changePriceSvc.objChangingPrice.type == 'item' && changePriceSvc.objChangingPrice.id == item.id)\"\n                    (click)=\"changePriceSvc.changeItemPrice(item)\" class=\"price light-grey-border-color \">\n                    <span *ngIf=\"!changePriceSvc.itemsToChangePrice[item.id]\">{{item.price|currency}}</span>\n                    <span\n                        *ngIf=\"changePriceSvc.itemsToChangePrice[item.id]\">{{changePriceSvc.itemsToChangePrice[item.id]|currency}}</span>\n                </div>\n                <input disabled=\"loadDelete\"\n                    *ngIf=\"changePriceSvc.objChangingPrice && changePriceSvc.objChangingPrice.type == 'item' && changePriceSvc.objChangingPrice.id == item.id\"\n                    class=\"white-80-background-color light-grey-border-color input-price\"\n                    (change)=\"changePriceSvc.changedPrice()\" [(ngModel)]=\"changePriceSvc.changingPrice\"\n                    (blur)=\"changePriceSvc.blurItem(item.id)\" type=\"text\">\n                <!-- <mat-icon>loyalty</mat-icon> -->\n            </div>\n            <div class=\"btns\" fxFlex.lt-md=\"50\" fxFlex.gt-sm=\"50\" fxLayoutAlign=\"end start\">\n                <div *ngIf=\"!loadDelete\">\n                    <button (click)=\"alterStatusItem('UNAVAILABLE')\" *ngIf=\"item.status == 'AVAILABLE'\"\n                        class=\"button-status btn btn-pause btn-pause-matte primary-border-color body5-semibold primary-color\"\n                        mat-button>{{ 'categoryListItem.pause' | translate }}</button>\n                    <button *ngIf=\"item.status == 'AVAILABLE'\"\n                        class=\"button-status btn btn-activate white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                        mat-raised-button>{{ 'categoryListItem.activated' | translate }}</button>\n                    <button *ngIf=\"item.status == 'UNAVAILABLE'\"\n                        class=\"button-status btn btn-pause white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                        mat-raised-button>{{ 'categoryListItem.paused' | translate }}</button>\n                    <button (click)=\"alterStatusItem('AVAILABLE')\" *ngIf=\"item.status == 'UNAVAILABLE'\"\n                        class=\"button-status btn btn-activate btn-pause-matte primary-border-color primary-border-color body5-semibold primary-color\"\n                        mat-button>{{ 'categoryListItem.activate' | translate }}</button>\n                </div>\n            </div>\n            <div fxFlex.gt-sm=\"10\" fxLayoutAlign=\"end start\" fxHide.lt-md>\n                <div class=\"toggle\"\n                    *ngIf=\"item.productIdNavigation.optionGroupProduct && item.productIdNavigation.optionGroupProduct.length>0 && !loadDelete\">\n                    <mat-icon class=\"primary-color\" (click)=\"toggleShowOptions()\" *ngIf=\"!showOptions\">\n                        keyboard_arrow_down</mat-icon>\n                    <mat-icon class=\"primary-color\" (click)=\"toggleShowOptions()\" *ngIf=\"showOptions\">\n                        keyboard_arrow_up\n                    </mat-icon>\n                </div>\n                <div>\n                    <mat-spinner *ngIf=\"loadDelete\" class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n                    <mat-icon *ngIf=\"!loadDelete\" [matMenuTriggerFor]=\"menu\">more_vert</mat-icon>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item (click)=\"editItem()\">{{ 'categoryListItem.editbtn' | translate }}</button>\n                    </mat-menu>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngIf=\"showOptions\">\n        <div fxLayout=\"column\" fxFlex=\"100\">\n            <div class=\"line\" *ngFor=\"let ogp of item.productIdNavigation!.optionGroupProduct!\">\n                <div fxLayout=\"row\" class=\"ogp extra-light-grey-background-color\">\n                    <div fxFlex=\"70\" fxLayoutAlign=\"start center\">\n                        <div fxFlex=\"70\">\n                            <div fxFlex=\"20\">\n                            </div>\n                            <div fxFlex=\"80\" class=\"heading3-regular\">\n                                {{ogp.optionGroupIdNavigation.name}}\n                            </div>\n                        </div>\n                        <div fxFlex=\"30\" fxLayoutAlign=\"start start\">\n                            <span class=\"body3-semibold dark-grey-background-color white-80-color mandatory\"\n                                *ngIf=\"ogp.min>0\">{{ 'categoryListItem.mandatory' | translate }}</span>\n                            <span class=\"light-grey-background-color black-color mandatory\"\n                                *ngIf=\"ogp.min==0\">{{ 'categoryListItem.optional' | translate }}</span>\n                        </div>\n                    </div>\n                    <div fxFlex=\"30\" fxLayoutAlign=\"end center\">\n                        <div fxFlex=\"100\" fxLayoutAlign=\"end start\">\n                            <div fxFlex=\"90\" fxLayoutAlign=\"start start\">\n                                <span>{{ 'categoryListItem.min' | translate }} {{ogp.min}} {{ 'categoryListItem.max' | translate }} {{ogp.max}}</span>\n                            </div>\n                            <div fxFlex=\"10\" fxLayoutAlign=\"end start\">\n                                <mat-icon [matMenuTriggerFor]=\"menu\">more_vert</mat-icon>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"sub-itens\" *ngFor=\"let op of ogp.optionGroupIdNavigation.option\" fxLayout.lt-md=\"column\"\n                    fxLayout.gt-sm=\"row\">\n                    <div fxFlex.lt-md=\"100\" fxFlex.gt-sm=\"70\" fxLayout.gt-sm=\"row\">\n                        <div fxFlex.lt-md=\"50\" fxFlex.gt-sm=\"70\">\n                            <div fxFlex=\"20\">\n                            </div>\n                            <div fxFlex=\"30\" fxFlex.gt-sm=\"70\" class=\"body1\">\n                                {{op.productIdNavigation.name}}\n                            </div>\n                        </div>\n                        <div fxFlex.lt-md=\"50\" fxFlex.gt-sm=\"30\" fxLayoutAlign=\"start center\">\n                            <div fxFlex=\"100\">\n                                <input class=\"grey-border-color input-price\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div fxFlex.lt-md=\"100\" fxFlex.gt-sm=\"30\">\n                        <div fxFlex=\"100\" fxLayoutAlign=\"start center\" ngClass.lt-md=\"sub-item-input\">\n                            <div fxFlex.lt-md=\"10\">\n                            </div>\n                            <div fxFlex=\"90\" fxFlex.lt-md=\"80\">\n                                <button (click)=\"setStatusOption('UNAVAILABLE', op)\" *ngIf=\"op.status == 'AVAILABLE'\"\n                                    class=\"button-status btn btn-pause btn-pause-matte primary-border-color body5-semibold primary-color\"\n                                    mat-button>{{ 'categoryListItem.pause' | translate }}</button>\n                                <button *ngIf=\"op.status == 'AVAILABLE'\"\n                                    class=\"button-status btn btn-activate white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                                    mat-raised-button>{{ 'categoryListItem.activated' | translate }}</button>\n                                <button *ngIf=\"op.status == 'UNAVAILABLE'\"\n                                    class=\"button-status btn btn-pause white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                                    mat-raised-button>{{ 'categoryListItem.paused' | translate }}</button>\n                                <button (click)=\"setStatusOption('AVAILABLE', op)\" *ngIf=\"op.status == 'UNAVAILABLE'\"\n                                    class=\"button-status btn btn-activate btn-pause-matte primary-border-color primary-border-color body5-semibold primary-color\"\n                                    mat-button>{{ 'categoryListItem.activate' | translate }}</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"hr\" fxHide.gt-sm>\n                        <hr class=\"light-grey-color\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport Enumerable from 'linq';\nimport { Item, Option, OptionGroupProduct } from 'src/app/api/models';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../dialogs/confirm-dialog/confirm-dialog.component';\nimport { ChangePriceService } from 'src/app/services/catalog/change-price.service';\nimport { ItemEditorComponent } from '../item/item-editor/item-editor.component';\nimport { ItemService } from 'src/app/api/services';\nimport { CatalogDataService } from 'src/app/services/catalog/catalog-data.service';\nimport { __classPrivateFieldSet } from 'tslib';\nimport { ImgService } from 'src/app/services/img.service';\nimport { UploadUtil } from 'src/app/shared/upload-util';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { map, timeout } from 'rxjs/operators';\nimport { AppComponent } from 'src/app/app.component';\n\n\n@Component({\n  selector: 'app-category-list-item',\n  templateUrl: './category-list-item.component.html',\n  styleUrls: ['./category-list-item.component.scss']\n})\nexport class CategoryListItemComponent implements OnInit {\n\n\n  public text = \"\";\n  public progress = 0;\n  public meta = null;\n  public file: Blob = null;\n\n  private _item: Item;\n  public get item(): Item {\n    return this._item;\n  }\n  @Input() set item(item: Item){\n    this._item = item;\n    if (item && item.productIdNavigation.image) {\n      this.onUploadImg(item.productIdNavigation.image, true);\n    }\n  }\n  \n  showOptions: boolean = false;\n  loadDelete: boolean = false;\n  uploadedImg: any;\n  constructor(public changePriceSvc: ChangePriceService, public httpClient: HttpClient, public dialog: MatDialog, public imgSvc: ImgService, private itemSvc: ItemService, private catalogDataSvc: CatalogDataService) {\n    var item = this.item;\n    this.changePriceSvc.onSavePrices.subscribe(\n      (data) => {\n        if (data && data[this.item.id]) {\n          this.item.price = data[this.item.id];\n        }\n      }\n    );\n    if (item && item.productIdNavigation.image) {\n      this.onUploadImg(item.productIdNavigation.image, true);\n    }\n  }\n\n  async changeImg() {\n    var _self = this;\n    var files = await UploadUtil.ChooseFileDialog();\n    if (files.length > 0) {\n      var _file = files[0];\n      var _formData = new FormData();\n      _formData.append(\"file\", _file);\n      this.progress = 0;\n      this.text = \"\";\n      this.httpClient.post<any>(\"./api/Sys/upload\", _formData, {\n        reportProgress: true,\n        observe: 'events'\n      }).pipe(timeout(5 * 60 * 1000))\n        .pipe(map((event) => {\n\n          switch (event.type) {\n\n            case HttpEventType.UploadProgress:\n              const progress = Math.round(100 * event.loaded / event.total!);\n              return { status: 'progress', message: progress };\n\n            case HttpEventType.Response:\n              return event.body;\n            default:\n              return `Unhandled event: ${event.type} ${JSON.stringify(event)}`;\n          }\n        })\n        )\n        .subscribe(\n          (res) => {\n            console.log(res);\n            if (res.status) {\n              this.progress = res.message - 1;\n            } else if (res.ipfsHash) {\n              console.log(res.ipfsHash);\n              this.text = res.ipfsHash;\n              this.progress = 0;\n              res.file = _file;\n              _self.item.productIdNavigation.image = res.ipfsHash;\n              this.catalogDataSvc.saveItem(_self.item).then(function (d) {\n                // _self.load = false;\n                // _self.dialogRef.close();\n                _self.onUploadImg(_self.item.productIdNavigation.image, true);\n              }).catch(function (e) {\n                console.log(e);\n              });\n            }\n            //_self.onUploadImg(res, false);\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n    }\n    console.log(files);\n  }\n\n  onUploadImg(metadata, hasIpfsHash) {\n    if (hasIpfsHash) {\n      this.uploadedImg = this.imgSvc.getBlobUrlFromHashAsync(metadata);\n    } else {\n      this.uploadedImg = this.imgSvc.getBlobUrlFromHashAsync(metadata.ipfsHash);\n    }\n    //this.formMerchantGroup.appIcon=metadata.ipfsHash;\n  }\n  ngOnInit(): void {\n    // if (this.item && this.item.id==\"123-567-3333\"){\n    //   this.item.productIdNavigation.optionGroupProduct=[\n    //     {\n    //       id:\"121-11-32563--23-2-\",\n    //       max:4,\n    //       min:1,\n    //       index:0,\n    //       status:'ACTIVE',\n    //       optionGroupIdNavigation:{\n    //         name:\"choose your drink\",\n    //         option:[\n    //           {\n    //             productIdNavigation:{\n    //               name:\"coke\"\n    //             },\n    //             price:10,\n    //             externalCode:\"c1\"\n    //           },\n    //           {\n    //             productIdNavigation:{\n    //               name:\"soda\"\n    //             },\n    //             price:11,\n    //             externalCode:\"s1\"\n    //           }\n    //         ]\n\n    //       }\n    //     },\n    //     {\n    //       id:\"9981-11-32563--23-2-\",\n    //       max:4,\n    //       min:0,\n    //       index:0,\n    //       status:'ACTIVE',\n    //       optionGroupIdNavigation:{\n    //         name:\"choose your launch\",\n    //         option:[\n    //           {\n    //             productIdNavigation:{\n    //               name:\"beef\"\n    //             },\n    //             price:7,\n    //             externalCode:\"b34\"\n    //           },\n    //           {\n    //             productIdNavigation:{\n    //               name:\"chicken\"\n    //             },\n    //             price:5,\n    //             externalCode:\"c3\"\n    //           }\n    //         ]\n\n    //       }\n    //     }\n    //   ]\n    //   this.editItem();\n    // }\n  }\n\n  alterStatusItem(status: string) {\n    var _self = this;\n    this.catalogDataSvc.setStatusItem(this.item.id, this.item.productId, status).then(function (d) {\n      _self.item.status = status;\n    });\n  }\n  setStatusOption(status: string, option: Option) {\n    var _self = this;\n    this.catalogDataSvc.setStatusOption(option.id, this.item.productId, status).then(function (d) {\n      option.status = status;\n    });\n  }\n  editItem() {\n    var tmpItem = JSON.parse(JSON.stringify(this.item));\n    var dialogRef = this.dialog.open(ItemEditorComponent, {\n      width: \"70vw\",\n      height: \"100vh\",\n      position: { right: '0' },\n      data: tmpItem\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        console.log(result);\n        if (result) {\n          // this.categoryUpdated.emit(result);\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    )\n  }\n  async deleteItem() {\n    let translate=AppComponent.Instance.translate;\n    let title=await translate.get(\"categoryListItem.dlg.title\").toPromise();\n    let msg=await translate.get(\"categoryListItem.dlg.msg\").toPromise();\n    var _self = this;\n    var dialogData: ConfirmDialogModel = {\n      title: title,\n      message: msg + this.item.productIdNavigation.name + '\" ?',\n      showCancel: true\n    }\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"80vw\",\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(\n      (ok) => {\n        if (ok) {\n          _self.loadDelete = true;\n          this.catalogDataSvc.deleteItem(this.item).then(function (d) {\n            _self.loadDelete = false;\n          }, function () {\n            _self.loadDelete = false;\n          });\n        }\n      }\n    );\n  }\n  toggleShowOptions() {\n    if (this.showOptions) {\n      this.showOptions = false;\n    } else {\n      this.showOptions = true;\n    }\n  }\n\n\n}\n","<div class=\"content grey-border-color\"\n    [ngClass]=\"{'extra-light-grey-background-color': category.status == 'UNAVAILABLE', 'white-80-background-color': category.status == 'AVAILABLE'}\">\n    <div fxLayout=\"row\" class=\"header\">\n        <div fxFlex=\"60\" class=\"heading2 category-name pointer\" (click)=\"editCategory()\">\n            {{category.name}}\n        </div>\n        <div fxFlex=\"20\">\n            <div *ngIf=\"!loadDelete\">\n                <button (click)=\"alterStatus('UNAVAILABLE')\" *ngIf=\"category.status == 'AVAILABLE'\"\n                    class=\"button-status btn btn-pause btn-pause-matte primary-border-color body5-semibold primary-color\"\n                    mat-button>{{ 'ccategory.pause' | translate }}</button>\n                <button *ngIf=\"category.status == 'AVAILABLE'\"\n                    class=\"button-status btn btn-activate white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                    mat-raised-button>{{ 'ccategory.activated' | translate }}</button>\n                <button *ngIf=\"category.status == 'UNAVAILABLE'\"\n                    class=\"button-status btn btn-pause white-60-color primary-border-color primary-background-color body5-semibold primary-color\"\n                    mat-raised-button>{{ 'ccategory.paused' | translate }}</button>\n                <button (click)=\"alterStatus('AVAILABLE')\" *ngIf=\"category.status == 'UNAVAILABLE'\"\n                    class=\"button-status btn btn-activate btn-pause-matte primary-border-color primary-border-color body5-semibold primary-color\"\n                    mat-button>{{ 'ccategory.activate' | translate }}</button>\n            </div>\n        </div>\n        <div fxFlex=\"20\" fxLayout=\"row\" fxLayoutAlign=\"end start\">\n            <div class=\"toggle\" *ngIf=\"!loadDelete\">\n                <mat-icon class=\"primary-color\" *ngIf=\"showItems\" (click)=\"toggleShowItems()\">keyboard_arrow_down\n                </mat-icon>\n                <mat-icon class=\"primary-color\" *ngIf=\"!showItems\" (click)=\"toggleShowItems()\">keyboard_arrow_up\n                </mat-icon>\n            </div>\n            <div *ngIf=\"loadDelete\">\n                <mat-spinner class=\"spinner\" [diameter]=\"30\"></mat-spinner>\n            </div>\n            <div *ngIf=\"!loadDelete\">\n                <mat-icon [matMenuTriggerFor]=\"menu\">more_vert</mat-icon>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"editCategory()\">{{ 'ccategory.edit' | translate }}</button>\n                    <button mat-menu-item (click)=\"deleteCategory()\">{{ 'ccategory.delete' | translate }}</button>\n                    <button mat-menu-item>{{ 'ccategory.duplicate' | translate }}</button>\n                </mat-menu>\n            </div>\n        </div>\n    </div>\n    <div class=\"hr\" *ngIf=\"category.item && category.item.length>0 && !loadDelete\">\n        <hr class=\"light-grey-color\" />\n    </div>\n    <div *ngIf=\"!loadDelete && category.template != 'PIZZA'\">\n        <div class=\"itens\" fxLayout=\"column\" *ngFor=\"let item of category.item\"\n            [ngClass]=\"{'extra-light-grey-background-color': item.status == 'UNAVAILABLE', 'white-80-background-color': item.status == 'AVAILABLE'}\">\n            <app-category-list-item [item]=\"item\"></app-category-list-item>\n        </div>\n    </div>\n    <div class=\"hr\" *ngIf=\"!loadDelete\">\n        <hr class=\"extra-light-grey-color\" />\n    </div>\n    <div class=\"footer\" *ngIf=\"!loadDelete\">\n        <div fxFlex.sm=\"100\" class=\"add-item\">\n            <button class=\"btn btn-add-category primary-border-color primary-color\" mat-button (click)=\"addItem()\">\n                <mat-icon class=\"primary-color\">add</mat-icon>\n                {{ 'ccategory.addItem' | translate }}\n            </button>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport Enumerable from 'linq';\nimport { Category } from 'src/app/api/models';\nimport { Item } from 'src/app/api/models';\nimport { CategoryEditorComponent } from '../category-editor/category-editor.component';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../dialogs/confirm-dialog/confirm-dialog.component';\nimport { ItemEditorComponent } from '../item/item-editor/item-editor.component';\nimport { CategoryService } from 'src/app/api/services';\nimport { CatalogDataService } from 'src/app/services/catalog/catalog-data.service';\nimport { SystemService } from 'src/app/services/system.service';\nimport { __classPrivateFieldSet } from 'tslib';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n\n  paused: boolean = false;\n  loadDelete: boolean = false;\n  loadGet: boolean = false;\n  food = [];\n  activate: boolean = true;\n  @Input() category:Category|undefined;\n  \n  items: Item[]|undefined = [];\n  showItems:boolean=false;\n  constructor(public dialog: MatDialog, private categorySvc: CategoryService, private catalogDataSvc: CatalogDataService,\n    private systemSvc:SystemService) { }\n\n  ngOnInit(): void {\n  }\n\n  addItem(){\n    var newItem :Item={\n      categoryId:this.category.id,\n      status:\"AVAILABLE\",\n      productIdNavigation:{\n        name:undefined,\n        status:\"AVAILABLE\",\n        merchantGroupId:this.systemSvc.selectedMerchantGroup.id\n\n      }\n    }\n    \n    var dialogRef = this.dialog.open(ItemEditorComponent, {\n      width: \"70vw\",\n      height: \"100vh\",\n      position: { right: '0' },\n      data: newItem\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        console.log(result);\n        if (result) {\n          // this.categoryUpdated.emit(result);\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    )\n  }\n\n  editCategory() {\n    var dialogRef = this.dialog.open(CategoryEditorComponent, {\n      width: \"70vw\",\n      height: \"100vw\",\n      position: { right: '0' },\n      data: this.category\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        console.log(result);\n        if (result) {\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    )\n  } \n\n  async deleteCategory(){\n    let translate=AppComponent.Instance.translate;\n    let title=await translate.get(\"ccategory.dlg.title\").toPromise();\n    let msg=await translate.get(\"ccategory.dlg.msg\").toPromise();\n\n    var _self = this;\n    var dialogData:ConfirmDialogModel ={\n      title:title,\n      message:msg + this.category.name + '\" ?',\n      showCancel:true\n    }\n    var dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"80vw\",\n      data: dialogData\n    });\n    dialogRef.afterClosed().subscribe(\n      (ok) => {\n        if (ok) {\n          _self.loadDelete = true;\n          this.catalogDataSvc.deleteCategory(this.category.id).then(function(d){\n            _self.loadDelete = false;\n          }, function(){\n            _self.loadDelete = false;\n          });\n        }\n      }\n    )\n  }\n\n  alterStatus(status: string){\n    this.category.status = status;\n  }\n\n  toggleShowItems(){\n    if(this.showItems){\n      this.showItems=false;\n    }else{\n      this.showItems=true;\n    }\n  }\n}\n","<div class=\"content\" fxLayout=\"column\" *ngIf=\"!catalogDataSvc.loadCatalog\">\n    <div class=\"heading2\" fxLayoutAlign=\"center\">\n        {{systemSvc.selectedMerchantGroup.name }} - {{systemSvc.selectedMerchant.name}}\n    </div>\n    <mat-select [(ngModel)]=\"catalogDataSvc.catalog\" placeholder=\"\">\n        <mat-option class=\"body1-semibold\" value=\"\">{{ 'pageCategory.allcategories' | translate }}</mat-option>\n        <mat-option *ngFor=\"let catalog of catalogDataSvc.catalogs\" [value]=\"catalog\">{{catalog.type}}</mat-option>\n    </mat-select>\n    <mat-tab-group #tabs [disableRipple]=\"false\">\n        <mat-tab label=\"{{ 'pageCategory.categories' | translate }}\"></mat-tab>\n        <mat-tab label=\"{{ 'pageCategory.integration' | translate }}\"></mat-tab>\n    </mat-tab-group>\n    <div fxLayout.sm=\"column\" fxLayout.xs=\"column\" fxLayout.gt-sm=\"row\">\n        <div fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.gt-sm=\"50\" class=\"buttons\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\n            fxLayout.gt-sm=\"row\">\n            <div fxFlex.sm=\"100\" class=\"add-category\">\n                <button class=\"btn btn-add-category primary-background-color white-60-color\" mat-raised-button\n                    (click)=\"addCategory()\">\n                    <mat-icon class=\"white-color\">add</mat-icon>\n                    {{ 'pageCategory.add' | translate }}\n                </button>\n            </div>\n            <div fxFlex.sm=\"100\" class=\"add-item\">\n                <button class=\"btn btn-add-category primary-border-color primary-color\" mat-button (click)=\"addItem()\">\n                    <mat-icon class=\"primary-color\">add</mat-icon>\n                    {{ 'pageCategory.addItem' | translate }}\n                </button>\n            </div>\n        </div>\n        <div class=\"reorder\" fxFlex.xs=\"100\" fxFlex.sm=\"100\" fxFlex.gt-sm=\"50\" fxLayout.sm=\"column\" fxLayout.xs=\"column\"\n            fxLayout.gt-sm=\"row\" fxLayoutAlign.gt-sm=\"end start\">\n            <div fxFlex.sm=\"100\">\n                <button class=\"btn reorder primary-color\" mat-button (click)=\"reorder()\">\n                    <mat-icon class=\"primary-color\">menu</mat-icon>\n                    <span class=\"body1-semibold primary-color\"> {{ 'pageCategory.reorder' | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class=\"filter-categories\" *ngIf=\"!catalogDataSvc.loadCatalog\">\n        <mat-select [(ngModel)]=\"catalogDataSvc.catFilter\" (selectionChange)=\"catalogDataSvc.filterCategories()\"\n            class=\"body1-semibold\">\n            <mat-option class=\"body1-semibold\" value=\"\">{{ 'pageCategory.allcategories' | translate }}</mat-option>\n            <mat-option class=\"body1-semibold\" *ngFor=\"let c of catalogDataSvc.categoriesDb\" [value]=\"c.id\">{{c.name}}\n            </mat-option>\n        </mat-select>\n    </div>\n    <app-category fxLayout=\"column\" *ngFor=\"let cat of catalogDataSvc.categories\" [category]=\"cat\"></app-category>\n</div>\n<div class=\"spinner-catalog\" *ngIf=\"catalogDataSvc.loadCatalog\">\n    <mat-spinner></mat-spinner>\n</div>","import { OrdersComponent } from './pages/orders/orders.component';\n\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { SplashComponent } from './components/splash/splash.component';\nimport { AuthComponent } from './pages/auth/auth.component';\nimport { DebugComponent } from './pages/debug/debug.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ChooseMerchantComponent } from './pages/choose-merchant/choose-merchant.component';\nimport { WizardNewMerchantGroupComponent } from './pages/wizards/wizard-new-merchant-group/wizard-new-merchant-group.component';\nimport { ChooseMerchantGroupComponent } from './pages/choose-merchant-group/choose-merchant-group.component';\nimport { WizardNewMerchantComponent } from './pages/wizards/wizard-new-merchant/wizard-new-merchant.component';\nimport { HelpComponent } from './pages/help/help.component';\nimport { SettingsComponent } from './pages/settings/settings.component';\nimport { PageCategoryComponent } from './pages/page-category/page-category.component';\nimport { PublishComponent } from './pages/publish/publish.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"orders\", redirectTo: 'orders/', pathMatch: 'full'\n  },\n  {\n    path: \"orders/:id\", component: OrdersComponent, data: { animation: 'orders' }\n  },\n  {\n    path: \"category\", component: PageCategoryComponent, data: { animation: 'orders' }\n  },\n  {\n    path: \"auth\", component: AuthComponent, data: { animation: 'auth' }\n  },\n  {\n    path: \"splash\", component: SplashComponent, data: { animation: 'debug' }\n  },\n  {\n    path: \"debug\", component: DebugComponent, data: { animation: 'debug' }\n  },\n  {\n    path: \"choose-merchant\", component: ChooseMerchantComponent, data: { animation: 'choose-merchant' }\n  },\n  {\n    path: \"choose-merchant-group\", component: ChooseMerchantGroupComponent, data: { animation: 'choose-merchant-group' }\n  },\n  {\n    path: \"wizard-new-merchant-group\", component: WizardNewMerchantGroupComponent, data: { animation: 'wizard-new-merchant-group' }\n  },\n  {\n    path: \"wizard-new-merchant\", component: WizardNewMerchantComponent, data: { animation: 'wizard-new-merchant' }\n  },\n  {\n    path: \"help\", component: HelpComponent, data: { animation: 'help' }\n  },\n  {\n    path: \"publish\", component: PublishComponent, data: { animation: 'publish' }\n  },\n  {\n    path: \"settings\", component: SettingsComponent, data: { animation: 'settings' }\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{ useHash: true }), BrowserAnimationsModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n  constructor(){\n    \n  }\n}\n\n","import { Component, DoCheck, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport Enumerable from 'linq';\nimport { Catalog, Category, Item } from 'src/app/api/models';\nimport { CategoryService } from 'src/app/api/services';\nimport { CategoryEditorComponent } from 'src/app/components/category-editor/category-editor.component';\nimport { ItemEditorComponent } from 'src/app/components/item/item-editor/item-editor.component';\nimport { CatalogDataService } from 'src/app/services/catalog/catalog-data.service';\nimport { SystemService } from 'src/app/services/system.service';\n\n@Component({\n  selector: 'app-page-category',\n  templateUrl: './page-category.component.html',\n  styleUrls: ['./page-category.component.scss']\n})\nexport class PageCategoryComponent implements OnInit, DoCheck {\n  @ViewChild('tabs', { static: false }) tabs;\n  realignInkBar() {\n    var _self = this;\n    setTimeout(() => {\n      try {\n        if (_self.tabs) {\n          _self.tabs.realignInkBar();\n        }\n      } catch (error) {\n        console.log(\"erro: \" + error);\n      }\n    }, 0);\n  }\n\n  constructor(public dialog: MatDialog, public catalogDataSvc: CatalogDataService,\n    public systemSvc: SystemService) {\n    this.catalogDataSvc.start();\n    this.catalogDataSvc.load();\n    // if (this.catalogDataSvc.categoriesDb.length > 0) {\n    //   this.filterCategories();\n    // }\n    // this.catalogDataSvc.onLoadCatalogs.subscribe(\n    //   (data) => {\n    //     if (this.catalogDataSvc.catalogs.length > 0) {\n    //       this.catalog = this.catalogDataSvc.catalogs[0];\n    //     }\n    //   }\n    // );\n    // this.catalogDataSvc.onLoadCategories.subscribe(\n    //   (data) => {\n    //     this.filterCategories();\n    //   }\n    // );\n  }\n  ngDoCheck(): void {\n    this.realignInkBar();\n  }\n\n  ngOnInit(): void {\n    // this.realignInkBar();\n    this.systemSvc.selectedMerchant.name\n  }\n\n  addCategory() {\n    var newCategory: Category = {\n      name: \"\",\n      template: \"\",\n      status: \"AVAILABLE\",\n      catalogId: this.catalogDataSvc.catalog.id\n    }\n    var dialogRef = this.dialog.open(CategoryEditorComponent, {\n      width: \"70vw\",\n      height: \"100vh\",\n      position: { right: '0' },\n      data: newCategory\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        console.log(result);\n        if (result) {\n\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    )\n  }\n  addItem() {\n    var newItem: Item = {\n      categoryId: \"\",\n      id: \"\",\n      status: \"AVAILABLE\",\n      productIdNavigation: {\n        id: \"\",\n        description: undefined,\n        name: undefined,\n        merchantGroupId: this.systemSvc.selectedMerchantGroup.id\n      }\n    }\n    var dialogRef = this.dialog.open(ItemEditorComponent, {\n      width: \"70vw\",\n      height: \"100vh\",\n      position: { right: '0' },\n      data: newItem\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        console.log(result);\n        if (result) {\n          // this.categoryUpdated.emit(result);\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    )\n  }\n  reorder() {\n\n  }\n}\n","import { finalize, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpResponse, HttpHeaders, HttpEvent } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { empty, Observable, of, Subject } from 'rxjs';\n\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(public _router:Router ) { \n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const started = Date.now();\n        let ok: string;\n     \n\n        // extend server response observable with logging\n        return next.handle(req)\n            .pipe(\n                tap(\n                    // Succeeds when there is a response; ignore other events\n                    (event) =>{\n                        ok = event instanceof HttpResponse ? 'succeeded' : '';\n                    } ,\n                    // Operation failed; error is an HttpErrorResponse\n                    (error) => {\n                        ok = 'erro:'+ error.status;\n                    }\n                ),\n                // Log when response observable either completes or errors\n                finalize(() => {\n                    if (ok==\"erro:401\"){\n                        this._router.navigate(['/auth'])\n                    }\n                })\n            );\n    }\n}","import { finalize, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpResponse, HttpHeaders, HttpEvent } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { empty, Observable, of, Subject } from 'rxjs';\nimport { SystemService } from '../services/system.service';\n\n\n@Injectable()\nexport class OrdersInterceptor implements HttpInterceptor {\n    constructor(public _router: Router,public systemSvc:SystemService) {\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        if (\n            req.url.startsWith(\"/api/Order/\") && this.systemSvc.isStaticAppOnly\n        ) {\n            var _url = \"http://localhost:5075\" + req.url;//Temporary order interceptor that link to Dotnet Core Kestrel Development Server\n            return <any>next.handle(req.clone({ url: _url }));\n        } else {\n            return next.handle(req);\n        }\n        \n    }\n}","import Enumerable from \"linq\";\nimport { OptionGroupProduct, Product } from \"src/app/api/models\";\nimport { SSOrbitdb } from \"../orbitdb\";\nimport { IFakeRestController } from \"./IFakeController.interface\";\n\nexport class ProductFakeController implements IFakeRestController<Product> {\n\n    name: string = \"Product\";\n    constructor() {\n    }\n\n\n    async getAll(): Promise<Product[]> {\n        var products: Product[] = [];\n        var productsIndex = {};\n        let itemsDb: any = await SSOrbitdb.GetDocInstance(\"Item\");\n        let items = itemsDb.get('');\n        for (let item of items) {\n            if (item.productIdNavigation) {\n                if (!productsIndex[item.productIdNavigation.id]) {\n                    productsIndex[item.productIdNavigation.id] = item.productIdNavigation;\n                    products.push(item.productIdNavigation);\n                }\n            }\n        }\n        return products;\n    }\n    async get(uuid: any): Promise<Product> {\n        var product: Product = null;\n        let productsDb: any = await SSOrbitdb.GetDocInstance(\"Product\");\n        let opProductsDb: any = await SSOrbitdb.GetDocInstance(\"OptionGroupProduct\");\n        let products : Product[] = productsDb.get(uuid);\n        if(products.length > 0){\n            products[0].optionGroupProduct = opProductsDb.query((doc: OptionGroupProduct)=> doc.productId == uuid);\n            product = products[0];\n        }    \n        return product;\n    }\n    async query(propertyName: any, search: any): Promise<Product[]> {\n        var products = Enumerable.from(await this.getAll()).where(x => x[propertyName] == search).toArray();\n        return products;\n    }\n    async post(payload: Product): Promise<Product> {\n        let productDb: any = await SSOrbitdb.GetDocInstance(\"Product\");\n        var hash = await productDb.put(payload, { pin: true });\n        return payload;\n        // throw new Error(\"Method not implemented.\");\n    }\n\n    async delete(uuid: any): Promise<void> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n}","import { BrandFakeController } from \"./brand.fakecontroller\";\nimport { IFakeRestController } from \"./IFakeController.interface\";\nimport { OptionGroupFakeController } from \"./optionGroup.fakecontroller\";\nimport { ProductFakeController } from \"./product.fakecontroller\";\n\nexport const fakeRestControllers:IFakeRestController<any>[] = [\n    new ProductFakeController(),\n    new OptionGroupFakeController(),\n    new BrandFakeController()\n];\n\nexport const getFakeRestControllerByName=function <T> (name: string): IFakeRestController<T> {\n    return fakeRestControllers.find(c => c.name === name);\n}","import Enumerable from \"linq\";\nimport { OptionGroup } from \"src/app/api/models\";\nimport { SSOrbitdb } from \"../orbitdb\";\nimport { IFakeRestController } from \"./IFakeController.interface\";\n\nexport class OptionGroupFakeController implements IFakeRestController<OptionGroup> {\n\n    name: string = \"OptionGroup\";\n    constructor() {\n    }\n\n\n    async getAll(): Promise<OptionGroup[]> {\n        throw new Error(\"Method not implemented.\");\n    }\n    async get(uuid: any): Promise<OptionGroup> {\n        var optionGroup: OptionGroup = null;\n        let optionGroupDb: any = await SSOrbitdb.GetDocInstance(\"OptionGroup\");\n        let optionGroups : OptionGroup[] = optionGroupDb.get(uuid);\n        if(optionGroups.length > 0){\n            optionGroup = optionGroups[0];\n        }\n        return optionGroup;\n    }\n    async query(propertyName: any, search: any): Promise<OptionGroup[]> {\n        throw new Error(\"Method not implemented.\");\n    }\n    async post(payload: OptionGroup): Promise<OptionGroup> {\n        let optionGroupDb: any = await SSOrbitdb.GetDocInstance(\"OptionGroup\");\n        var hash = await optionGroupDb.put(payload, { pin: true });\n        let opProductsDb: any = await SSOrbitdb.GetDocInstance(\"OptionGroupProduct\");\n\n        if (payload.optionGroupProduct) {\n            for (let ogp of payload.optionGroupProduct) {\n                ogp.optionGroupId = payload.id;\n                var ogpHash = await opProductsDb.put(ogp, { pin: true });\n            }\n        }\n\n        return payload;\n        // throw new Error(\"Method not implemented.\");\n    }\n\n    async delete(uuid: any): Promise<void> {\n        throw new Error(\"Method not implemented.\");\n    }\n}","import Enumerable from \"linq\";\nimport { Catalog, Category, DtoBrand, OptionGroup } from \"src/app/api/models\";\nimport { SystemService } from \"src/app/services/system.service\";\nimport { SSOrbitdb } from \"../orbitdb\";\nimport { IFakeRestController } from \"./IFakeController.interface\";\nimport { ProductFakeController } from \"./product.fakecontroller\";\n\nexport class BrandFakeController implements IFakeRestController<DtoBrand> {\n\n    name: string = \"Brand\";\n    constructor() {\n    }\n\n\n    async getAll(): Promise<DtoBrand[]> {\n        throw new Error(\"Method not implemented.\");\n    }\n    async get(uuid: any): Promise<DtoBrand> {\n        var merchantGroup = SystemService.Instance.selectedMerchantGroup\n        var ret = <DtoBrand>{\n            id: merchantGroup.id,\n            adminMode: merchantGroup.adminMode,\n            status: \"AVAILABLE\",\n            createdAt: merchantGroup.createdAt,\n            name: merchantGroup.name,\n            ordersEndpoint: \"\",\n            product: await (new ProductFakeController()).query(\"merchantGroupId\", merchantGroup.id),\n            merchant: ((<any>await SSOrbitdb.GetDocInstance(\"Merchant\")).get(''))\n        }\n        var allCatalogs = <Catalog[]>(<any>await SSOrbitdb.GetDocInstance(\"Catalog\")).get('');\n        var allCategories = <Category[]>(<any>await SSOrbitdb.GetDocInstance(\"Category\")).get('');\n        var allOptionGroups = <OptionGroup[]>(<any>await SSOrbitdb.GetDocInstance(\"OptionGroup\")).get('');\n        for (var merchant of ret.merchant) {\n            merchant.catalog = Enumerable.from(allCatalogs)\n                .where(x => x.merchantId == merchant.id)\n                .select(x => {\n                    x.category = Enumerable.from(allCategories).where(cat => cat.catalogId == x.id).toArray();\n                    return x\n                })\n                .toArray();\n\n            merchant.optionGroup = Enumerable.from(allOptionGroups)\n                .where(x => x.merchantId == merchant.id)\n                .toArray();\n        }\n\n        return ret;\n    }\n    async query(propertyName: any, search: any): Promise<DtoBrand[]> {\n        var products = Enumerable.from(await this.getAll()).where(x => x[propertyName] == search).toArray();\n        return products;\n    }\n    async post(payload: DtoBrand): Promise<DtoBrand> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    async delete(uuid: any): Promise<void> {\n        throw new Error(\"Method not implemented.\");\n    }\n\n}","import { finalize, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpResponse, HttpHeaders, HttpEvent } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { empty, Observable, of, Subject } from 'rxjs';\nimport { SystemService } from '../services/system.service';\nimport { SSAuthentication } from '../static-stack/authentication';\nimport { SSRestBridge } from '../static-stack/restbridge';\n\n\n\n\n@Injectable()\nexport class StaticStackInterceptor implements HttpInterceptor {\n    constructor(\n        //Injections\n        public _router:Router,\n        public systemSvc:SystemService\n        ) { \n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const started = Date.now();\n        if (this.systemSvc.isStaticAppOnly){\n            return this.staticStackManipulator(req,next,started)\n        } else {\n            return next.handle(req);\n        }\n    }\n\n\n    staticStackManipulator(req: HttpRequest<any>, next: HttpHandler, started: number):Observable<HttpResponse<any>> {\n        if (req.url.startsWith(\"./api/Authentication/oauth/token\")){\n            return StaticStackInterceptor.staticStackResponseAsync(req, SSAuthentication.getOauthTokenAsync(req.body) );\n        } \n        else if (\n                req.url.startsWith(\"./api/Order/\")\n            ){\n                return <any>next.handle(req);\n        }\n        else if (\n            req.url.startsWith(\"http\")\n        ){\n            return <any>next.handle(req);\n    }\n        else if (\n            req.url.startsWith(\"./api/Sys/upload\")\n        ){\n            return <any>next.handle(req);\n    }\n        else {\n            //return this.staticStackResponse(req,[]);\n            return StaticStackInterceptor.staticStackResponseAsync(req,  SSRestBridge.manipulateFakeRestAsync(req,next,started) );\n        }\n    }\n\n    public static staticStackResponse(req:HttpRequest<any>,obj:any){\n        var httpres=new HttpResponse({\n            body:obj,\n            status:200,\n            url:req.url,\n            statusText:'OK',\n        });\n        var subj=(new Subject<HttpResponse<any>>());\n        setTimeout(() => {\n            subj.next(httpres)\n            subj.complete()\n        }, 10);\n        return subj.asObservable();\n    }\n\n    public static staticStackResponseAsync(req:HttpRequest<any>,obj:Promise<any>){\n        var subj=(new Subject<HttpResponse<any>>());\n        obj.then(\n            (d)=>{\n                var httpres=new HttpResponse({\n                    body:d,\n                    status:200,\n                    url:req.url,\n                    statusText:'OK',\n                });\n                subj.next(httpres);\n                subj.complete();\n            }\n        )\n        return subj.asObservable();\n    }\n}","import { HttpHandler, HttpRequest, HttpResponse } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { DtoOauthRequest } from \"src/app/api/models\";\nimport { CryptoService } from \"src/app/services/crypto.service\";\nimport { getFakeRestControllerByName } from \"./fake-controllers\";\nimport { SSOrbitdb } from \"./orbitdb\";\nimport { SSUuid } from \"./uuid\";\n\n\nexport class SSRestBridge {\n    public static manipulateFakeRestAsync(req: HttpRequest<any>, next: HttpHandler, started: number): Promise<any> {\n        return new Promise<any>(\n            async (resolve, reject) => {\n                var spltd = req.url.split('/');\n                var dbName = spltd[2];\n                var lastPartOfUrl = spltd[spltd.length - 1];\n                let fakeRestController = getFakeRestControllerByName(dbName);\n                var dbdoc: any = await SSOrbitdb.GetDocInstance(dbName);\n                console.log(dbdoc);\n                if (req.method == \"POST\" || req.method == \"PUT\") {\n                    if (req.body.id == undefined || req.body.id == null) {\n                        req.body.id = SSUuid.GenerateV4();\n                    }\n                    if (fakeRestController) {\n                        var postResponse = await fakeRestController.post(req.body);\n                        resolve(postResponse);\n                    } else {\n                        var hash = await dbdoc.put(req.body, { pin: true });\n                        resolve(req.body);\n                    }\n                }\n                if (req.method == \"DELETE\") {\n                    if (lastPartOfUrl != dbName) {\n                        if (fakeRestController) {\n                            try {\n                                await fakeRestController.delete(lastPartOfUrl);\n                                resolve(req.body);\n                            } catch (error) {\n                                reject();\n                            }\n                        }\n                        else {\n                            var hash = await dbdoc.del(lastPartOfUrl);\n                            if (hash) {\n                                resolve(req.body);\n                            } else {\n                                reject();\n                            }\n                        }\n                    }\n                }\n                if (req.method == \"GET\") {\n                    if (lastPartOfUrl != dbName) {\n                        var objs = [];\n                        if (spltd.length == 5) {\n                            let queryField = spltd[3].endsWith(\"Id\") ? spltd[3] : spltd[3] + \"Id\";\n                            if (fakeRestController) {\n                                objs = await fakeRestController.query(queryField, lastPartOfUrl);\n                                resolve(objs);\n                            } else {\n                                let allobjs = dbdoc.get('');\n                                objs = dbdoc.query((doc) => doc[queryField] == lastPartOfUrl);\n                                resolve(objs);\n                            }\n                            return;\n                        } else {\n                            if (fakeRestController) {\n                                objs = [await fakeRestController.get(lastPartOfUrl)];\n                            } else {\n                                objs = dbdoc.get(lastPartOfUrl);\n                            }\n                        }\n\n                        if (objs.length > 0) {\n                            resolve(objs[0]);\n                        } else {\n                            reject();\n                        }\n                    } else {\n                        objs = dbdoc.get('');\n                        resolve(objs);\n                    }\n\n                }\n            }\n        );\n    }\n}\n\n","import { finalize, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpResponse, HttpHeaders, HttpEvent } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { empty, Observable, of, Subject } from 'rxjs';\nimport { SystemService } from '../services/system.service';\nimport { SSIpfs } from '../static-stack/ipfs';\nimport { StaticStackInterceptor } from './staticStackInterceptor';\n\n\n@Injectable()\nexport class UploadInterceptor implements HttpInterceptor {\n    constructor(public _router: Router,public systemSvc:SystemService) {\n    }\n\n    async getIpfsMeta(_file){\n        var _cidIpfs=await SSIpfs.addFile(_file);\n        return {\n            ipfsHash:_cidIpfs.cid.toString(),\n            fullName:_file.name\n        }\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        if (\n            req.url.startsWith(\"./api/Sys/upload\") && this.systemSvc.isStaticAppOnly\n        ) {\n            var _file=req.body.get(\"file\");\n            return StaticStackInterceptor.staticStackResponseAsync(req,this.getIpfsMeta(_file));\n            \n        } else {\n            return next.handle(req);\n        }\n        \n    }\n}","/* \"Barrel\" of Http Interceptors */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AuthInterceptor } from './auth-interceptor';\nimport { OrdersInterceptor } from './orders-interceptor';\n\nimport { StaticStackInterceptor } from './staticStackInterceptor';\nimport { UploadInterceptor } from './upload-interceptor';\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n    { provide: HTTP_INTERCEPTORS, useClass: StaticStackInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: UploadInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: OrdersInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n];","<div class=\"content\" fxLayout=\"column\">\n    <div fxLayout=\"row\" fxLayout.xs=\"column\">\n        <div class=\"\" fxFlex=\"60\" fxFlex.xs=\"100\" fxLayout=\"column\">\n            <div class=\"category\" fxLayout=\"column\">\n                <div class=\"body1-semibold title-category\">{{ 'itemDetails.category' | translate }} <span class=\"grey-color\">({{ 'itemDetails.mandatory' | translate }})</span></div>\n                <div>\n                    <mat-select [(ngModel)]=\"item.categoryId\" placeholder=\"\">\n                        <mat-option value=\"\">Select</mat-option>\n                        <mat-option *ngFor=\"let cat of catalogDataSvc.categoriesDb\" [value]=\"cat.id\">{{cat.name}}\n                        </mat-option>\n                    </mat-select>\n                </div>\n            </div>\n            <div class=\"name\" fxLayout=\"column\">\n                <div class=\"body1-semibold product-name\">{{ 'itemDetails.name' | translate }} <span class=\"grey-color\">({{ 'itemDetails.mandatory' | translate }})</span></div>\n                <div>\n                    <input class=\"light-grey-border-color\" placeholder=\"Chicken lunch box\"\n                        [(ngModel)]=\"item.productIdNavigation.name\">\n                </div>\n            </div>\n            <div class=\"description\">\n                <div class=\"body1-semibold description-textarea\">{{ 'itemDetails.description' | translate }}</div>\n                <div>\n                    <textarea class=\"light-grey-border-color\" matInput\n                        [(ngModel)]=\"item.productIdNavigation.description\"\n                        placeholder=\"{{ 'itemDetails.descriptionPlaceholder' | translate }}\"></textarea>\n                </div>\n            </div>\n        </div>\n        <div class=\"\" fxFlex=\"40\" fxFlex.xs=\"100\" fxLayout=\"column\">\n            <div class=\"img-item\">\n                <div class=\"body1-semibold item-image\">{{ 'itemDetails.itemImage' | translate }}</div>\n                <div class=\"body4 description-img\">{{ 'itemDetails.descriptionImg' | translate }}</div>\n                <div *ngIf=\"!imgItem\" class=\"img\" fxLayout=\"column\">\n                    <img class=\"img-image\" src=\"../../../../assets/svgs/icon-food.daed62b4.svg\" />\n                    <button class=\"btn primary-border-color primary-color\" (click)=\"changeImg()\" mat-button>\n                        <mat-icon class=\"primary-color\">add</mat-icon>\n                        {{ 'itemDetails.chooseImage' | translate }}\n                    </button>\n                </div>\n                <div *ngIf=\"imgItem\" class=\"img\" fxLayout=\"column\">\n                    <img class=\"img filled\" [src]=\"imgItem|async\" (click)=\"changeImg()\">\n                </div>\n                <div class=\"detail-img\">\n                    <div class=\"body4\">{{ 'itemDetails.format' | translate }} <b>JPEG, JPG, PNG e HEIC</b></div>\n                    <div class=\"body4\">{{ 'itemDetails.maxWeight' | translate }} <b>20 MB</b></div>\n                    <div class=\"body4\">{{ 'itemDetails.minResolution' | translate }} <b>300x275</b></div>\n                </div>\n            </div>\n            <div class=\"external-code\">\n                <div>{{ 'itemDetails.posCode' | translate }}</div>\n                <div>\n                    <input class=\"light-grey-border-color\" [(ngModel)]=\"item.productIdNavigation.externalCode\" placeholder=\"000\">\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- <div class=\"extra-light-grey-background-color\" fxFlex=\"100\" fxFlex.xs=\"100\" fxLayout=\"column\">\n        <div>\n            <div>\n\n            </div>\n            <div>\n\n            </div>\n            <div>\n\n            </div>\n            <div>\n\n            </div>\n        </div>\n    </div> -->\n</div>","import { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { map, timeout } from 'rxjs/operators';\nimport { Category, Item } from 'src/app/api/models';\nimport { CatalogDataService } from 'src/app/services/catalog/catalog-data.service';\nimport { ImgService } from 'src/app/services/img.service';\nimport { UploadUtil } from 'src/app/shared/upload-util';\n\n@Component({\n  selector: 'app-item-details',\n  templateUrl: './item-details.component.html',\n  styleUrls: ['./item-details.component.scss']\n})\nexport class ItemDetailsComponent implements OnInit {\n\n  constructor(public catalogDataSvc:CatalogDataService, public httpClient: HttpClient, public imgSvc: ImgService) { \n\n  }\n  @Input() item:Item;\n  imgItem: any;\n  public text = \"\";\n  public progress = 0;\n  public meta = null;\n  public file: Blob = null;\n\n  categories:Category[];\n  ngOnInit(): void {\n    if (this.item && this.item.productIdNavigation.image) {\n      this.onUploadImg(this.item.productIdNavigation.image, true);\n    }\n  }\n\n  async changeImg(){\n    var _self = this;\n    var files = await UploadUtil.ChooseFileDialog();\n    if (files.length > 0) {\n      var _file = files[0];\n      var _formData = new FormData();\n      _formData.append(\"file\", _file);\n      this.progress = 0;\n      this.text = \"\";\n      this.httpClient.post<any>(\"./api/Sys/upload\", _formData, {\n        reportProgress: true,\n        observe: 'events'\n      }).pipe(timeout(5 * 60 * 1000))\n        .pipe(map((event) => {\n\n          switch (event.type) {\n\n            case HttpEventType.UploadProgress:\n              const progress = Math.round(100 * event.loaded / event.total!);\n              return { status: 'progress', message: progress };\n\n            case HttpEventType.Response:\n              return event.body;\n            default:\n              return `Unhandled event: ${event.type} ${JSON.stringify(event)}`;\n          }\n        })\n        )\n        .subscribe(\n          (res) => {\n            console.log(res);\n            if (res.status) {\n              this.progress = res.message - 1;\n            } else if (res.ipfsHash) {\n              console.log(res.ipfsHash);\n              this.text = res.ipfsHash;\n              this.progress = 0;\n              res.file = _file;\n              _self.item.productIdNavigation.image = res.ipfsHash;\n              // this.catalogDataSvc.saveItem(_self.item).then(function (d) {\n              //   // _self.load = false;\n              //   // _self.dialogRef.close();\n              _self.onUploadImg(_self.item.productIdNavigation.image, true);\n              // }).catch(function (e) {\n              //   console.log(e);\n              // });\n            }\n            //_self.onUploadImg(res, false);\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n    }\n    console.log(files);\n  }\n\n  onUploadImg(metadata, hasIpfsHash) {\n    if (hasIpfsHash) {\n      this.imgItem = this.imgSvc.getBlobUrlFromHashAsync(metadata);\n    } else {\n      this.imgItem = this.imgSvc.getBlobUrlFromHashAsync(metadata.ipfsHash);\n    }\n    //this.formMerchantGroup.appIcon=metadata.ipfsHash;\n  }\n}\n","<div class=\"content\" fxLayout=\"column\">\n    <div class=\"\" fxLayout=\"row\" *ngIf=\"!applyingDiscount\">\n        <div fxFlex.lt-md=\"60\" fxFlex.gt-sm=\"25\" fxLayout=\"column\">\n            <div fxLayout=\"row\">\n                <div class=\"body1-semibold price-title\">{{ 'itemPrice.price' | translate }} </div>\n                <div class=\"grey-color mandatory\">({{ 'itemPrice.mandatory' | translate }})</div>\n            </div>\n            <div fxFlex=\"100\">\n                <input class=\"price light-grey-border-color\" placeholder=\"$\" [(ngModel)]=\"item.price\">\n            </div>\n        </div>\n        <div fxFlex.lt-md=\"40\" fxFlex.gt-sm=\"25\" fxLayoutAlign=\"start end\" class=\"apply-discount\">\n            <button mat-raised-button color=\"primary\" [disabled]=\"item.price==undefined\"\n                class=\"btn primary-background-color white-80-color\" (click)=\"applyDiscount()\">{{ 'itemPrice.applyDiscount' | translate }}</button>\n        </div>\n        <div fxHide.lt-md=\"\" fxFlex.gt-sm=\"50\"></div>\n    </div>\n    <div class=\"extra-light-grey-background-color discount-area\"  fxLayout=\"column\" *ngIf=\"applyingDiscount\">\n        <div fxLayout=\"row wrap\">\n            <div class=\"field\" fxFlex=\"30\" fxFlex.xs=\"50\">\n                <div class=\"body1-semibold price-title\">{{ 'itemPrice.currentPrice' | translate }} </div>\n                <div>\n                    <input class=\"light-grey-border-color price\" placeholder=\"$0,00\" [(ngModel)]=\"item.originalPrice\"\n                        disabled=\"true\">\n                </div>\n            </div>\n            <div fxHide.gt-xs fxFlex.xs=\"50\"> </div>\n            <div class=\"field\" fxFlex=\"30\" fxFlex.xs=\"50\">\n                <div class=\"body1-semibold price-title\">{{ 'itemPrice.newPrice' | translate }} </div>\n                <div>\n                    <input class=\"light-grey-border-color price\" placeholder=\"$0,00\" [(ngModel)]=\"item.price\"\n                        (ngModelChange)=\"changePrice()\">\n                </div>\n            </div>\n            <div class=\"field\" fxFlex=\"40\" fxFlex.xs=\"50\">\n                <div class=\"body1-semibold price-title\">{{ 'itemPrice.discountPercent' | translate }} </div>\n                <div>\n                    <input class=\"light-grey-border-color\" placeholder=\"0%\" [(ngModel)]=\"percentage\"\n                        (ngModelChange)=\"changePercentage()\">\n                </div>\n            </div>\n        </div>\n        <mat-divider *ngIf=\"applyingDiscount\"></mat-divider>\n        <div *ngIf=\"applyingDiscount\" class=\"remove pointer\" (click)=\"removeDiscount()\">\n            <span class=\"body1-semibold primary-color remove-text\" >{{ 'itemPrice.removeDiscount' | translate }}</span>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Item } from 'src/app/api/models';\n\n@Component({\n  selector: 'app-item-price',\n  templateUrl: './item-price.component.html',\n  styleUrls: ['./item-price.component.scss']\n})\nexport class ItemPriceComponent implements OnInit {\n  @Input() item: Item;\n  applyingDiscount: boolean = false;\n  constructor() { \n  }\n  percentage: number | undefined;\n  ngOnInit(): void {\n    if(this.item && this.item.originalPrice){\n      this.applyingDiscount=true;\n    }\n  }\n\n  applyDiscount() {\n\n    if (this.item.originalPrice != this.item.price) {\n      this.applyingDiscount = true;\n      this.item.originalPrice = this.item.price;\n      this.item.price = undefined;\n    }\n  }\n  changePrice() {\n    if(this.item.price){\n      this.percentage = Math.floor(((this.item.originalPrice - this.item.price) / this.item.originalPrice) * 100);\n    }else{\n      this.item.price=0;\n    }\n  }\n  changePercentage() {\n    if(this.percentage){\n      this.item.price = (1 - (this.percentage / 100)) * this.item.originalPrice;\n    }else{\n      this.percentage=0;\n    }\n  }\n  removeDiscount(){\n    this.item.price = this.item.originalPrice;\n    this.item.originalPrice = undefined;\n    this.percentage=undefined;\n    this.applyingDiscount = false;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Item } from 'src/app/api/models';\n\n@Component({\n  selector: 'app-item-classification',\n  templateUrl: './item-classification.component.html',\n  styleUrls: ['./item-classification.component.scss']\n})\nexport class ItemClassificationComponent implements OnInit {\n  @Input() item:Item;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>item-classification works!</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Item } from 'src/app/api/models';\n\n@Component({\n  selector: 'app-item-availability',\n  templateUrl: './item-availability.component.html',\n  styleUrls: ['./item-availability.component.scss']\n})\nexport class ItemAvailabilityComponent implements OnInit {\n  @Input() item:Item;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>item-availability works!</p>\n","<div class=\"content light-grey-border-color\" fxLayout=\"column\">\n\n    <div fxLayout=\"row\" class=\"header extra-light-grey-background-color\">\n        <div fxFlex=\"10\" fxLayoutAlign=\"center center\">\n            <mat-icon [matMenuTriggerFor]=\"menu\">menu</mat-icon>\n        </div>\n        <div fxFlex=\"60\" class=\"name\" fxLayout=\"column\">\n            <div class=\"heading3\">{{ogp.optionGroupIdNavigation.name}}</div>\n            <div class=\"grey-color body3-semibold\">{{ogp.optionGroupIdNavigation.option.length}} \n                <span *ngIf=\"ogp.optionGroupIdNavigation.option.length==1\">{{ 'optionGroupList.option' | translate }}</span>\n                <span *ngIf=\"ogp.optionGroupIdNavigation.option.length>1\">{{ 'optionGroupList.options' | translate }}</span>\n            </div>\n        </div>\n        <div fxFlex=\"30\" fxLayout=\"row\">\n            <div fxFlex=\"50\" class=\"obligatoriness\" fxLayoutAlign=\"center center\">\n                <div class=\"label body5-semibold grey-background-color\" *ngIf=\"ogp.min ==0\">{{ 'optionGroupList.optional' | translate }}</div>\n                <div class=\"label body5-semibold black-background-color white-color\" *ngIf=\"ogp.min >0\">{{ 'optionGroupList.mandatoryu' | translate }}</div>\n            </div>\n            <div fxFlex=\"50\">\n                <div fxFlex=\"50\" fxLayoutAlign=\"center center\">\n                    <mat-icon [matMenuTriggerFor]=\"menu\">more_vert</mat-icon>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item (click)=\"edit()\">{{ 'optionGroupList.edit' | translate }}</button>\n                        <button mat-menu-item (click)=\"delete()\">{{ 'optionGroupList.deleteComplement' | translate }}</button>\n                        <button mat-menu-item>{{ 'optionGroupList.duplicateComplement' | translate }}</button>\n                    </mat-menu>\n                </div>\n                <div class=\"toggle\" fxFlex=\"50\" fxLayoutAlign=\"center center\">\n                    <!-- <mat-icon class=\"primary-color\">\n                        keyboard_arrow_down</mat-icon> -->\n                    <mat-icon class=\"primary-color\">\n                        keyboard_arrow_up\n                    </mat-icon>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div *ngFor=\"let option of ogp.optionGroupIdNavigation.option\" class=\"option extra-light-grey-border-bottom-color\">\n        <div fxFlex=\"15\" class=\"image\">\n            <img *ngIf=\"true\" src=\"../../../assets/svgs/empty-image.svg\">\n            <img *ngIf=\"false\" src=\"\">\n        </div>\n        <div fxFlex=\"65\" class=\"option-name body1\" fxLayoutAlign=\"start center\">\n            {{option.productIdNavigation.name}}\n        </div>\n        <div  fxFlex=\"20\" class=\"option-price body1\" fxLayoutAlign=\"end center\">\n            {{option.price|currency}}\n        </div>\n\n\n    </div>\n\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OptionGroupProduct } from 'src/app/api/models';\nimport { OptionGroupProductEditorComponent } from '../option-group-product-editor/option-group-product-editor.component';\n\n@Component({\n  selector: 'app-option-group-list-item',\n  templateUrl: './option-group-list-item.component.html',\n  styleUrls: ['./option-group-list-item.component.scss']\n})\nexport class OptionGroupListItemComponent implements OnInit {\n\n  @Input() ogp: OptionGroupProduct;\n  constructor(public dialog: MatDialog) { }\n  @Output() onDeletedOptionGroup = new EventEmitter();\n  ngOnInit(): void {\n  }\n\n  edit() {\n\n    var dialogRef = this.dialog.open(OptionGroupProductEditorComponent, {\n      width: \"70vw\",\n      height: \"100vw\",\n      position: { right: '0' },\n      data: this.ogp\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        console.log(result);\n        if (result) {\n          this.ogp = result;\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    )\n  }\n\n  delete() {\n    this.onDeletedOptionGroup.emit(this.ogp);\n  }\n}\n","import { DEFAULT_CURRENCY_CODE, LOCALE_ID, NgModule } from '@angular/core';\n\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule, HttpClient/* other http imports */ } from \"@angular/common/http\";\nimport { OrdersComponent } from './pages/orders/orders.component';\nimport { OrdersDetailComponent } from './components/order-detail/order-detail.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { httpInterceptorProviders } from './api-interceptors';\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from \"@angular/material/input\"\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { SplashComponent } from './components/splash/splash.component';\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { AuthComponent } from './pages/auth/auth.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { MatDialogModule, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\nimport { DebugComponent } from './pages/debug/debug.component';\nimport { OrderStatusComponent } from './components/order-status/order-status.component';\nimport { WizardNewMerchantGroupComponent } from './pages/wizards/wizard-new-merchant-group/wizard-new-merchant-group.component';\nimport { ChooseMerchantComponent } from './pages/choose-merchant/choose-merchant.component';\nimport { ChooseMerchantGroupComponent } from './pages/choose-merchant-group/choose-merchant-group.component';\nimport { WizardNewMerchantComponent } from './pages/wizards/wizard-new-merchant/wizard-new-merchant.component';\nimport { MffUploadFileComponent } from './components/mat-form-field/mff-upload-file/mff-upload-file.component';\nimport { LeftBarMenuComponent } from './components/left-bar-menu/left-bar-menu.component';\nimport { ConfirmDialogComponent } from './components/dialogs/confirm-dialog/confirm-dialog.component';\nimport { HelpComponent } from './pages/help/help.component';\nimport { AngularSplitModule } from 'angular-split';\n\nimport { SettingsComponent } from './pages/settings/settings.component';\nimport { CategoryComponent } from './components/category/category.component';\nimport { CategoryEditorComponent } from './components/category-editor/category-editor.component';\nimport { PageCategoryComponent } from './pages/page-category/page-category.component';\n\nimport {MatMenuModule} from '@angular/material/menu';\nimport { CategoryListItemComponent } from './components/category-list-item/category-list-item.component';\nimport { ItemEditorComponent } from './components/item/item-editor/item-editor.component';\nimport { ItemDetailsComponent } from './components/item/item-details/item-details.component';\nimport { ItemPriceComponent } from './components/item/item-price/item-price.component';\nimport { ItemComplementComponent } from './components/item/item-complement/item-complement.component';\nimport { ItemClassificationComponent } from './components/item/item-classification/item-classification.component';\nimport { ItemAvailabilityComponent } from './components/item/item-availability/item-availability.component';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { OptionGroupListItemComponent } from './components/option/option-group-list-item/option-group-list-item.component';\nimport { OptionGroupProductEditorComponent } from './components/option/option-group-product-editor/option-group-product-editor.component';\nimport { OptionEditorComponent } from './components/option/option-editor/option-editor.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { PublishComponent } from './pages/publish/publish.component';\nimport { PizzaCrustEditorComponent } from './components/pizza-crust-editor/pizza-crust-editor.component';\nimport { PizzaEdgeEditorComponent } from './components/pizza-edge-editor/pizza-edge-editor.component';\nimport { PizzaSizeEditorComponent } from './components/pizza-size-editor/pizza-size-editor.component';\nimport { ChangeDebouncedDirective } from './directives/change-debounced.directive';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { getCurrency } from \"locale-currency\";\nimport ptBr from '@angular/common/locales/pt';\nimport es from '@angular/common/locales/es';\nimport zh from '@angular/common/locales/zh';\nimport { registerLocaleData } from '@angular/common';\nimport { SetPaymentMethodComponent } from './components/set-payment-method/set-payment-method.component';\nregisterLocaleData(ptBr)\nregisterLocaleData(es)\nregisterLocaleData(zh)\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http,'./assets/i18n/');\n}\nwindow['odp_terminal_base_currency']=getCurrency(navigator.language);\nlet storedBaseCurrency=localStorage.getItem('odp_terminal_base_currency');\nif (storedBaseCurrency){\n  window['odp_terminal_base_currency']=storedBaseCurrency;\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrdersComponent,\n    OrdersDetailComponent,\n    SplashComponent,\n    AuthComponent,\n    DebugComponent,\n    OrderStatusComponent,\n    WizardNewMerchantGroupComponent,\n    ChooseMerchantComponent,\n    ChooseMerchantGroupComponent,\n    WizardNewMerchantComponent,\n    MffUploadFileComponent,\n    LeftBarMenuComponent,\n    ConfirmDialogComponent,\n    HelpComponent,\n    SettingsComponent,\n    CategoryComponent,\n    PageCategoryComponent,\n    CategoryEditorComponent,\n    CategoryListItemComponent,\n    ItemEditorComponent,\n    ItemDetailsComponent,\n    ItemPriceComponent,\n    ItemComplementComponent,\n    ItemClassificationComponent,\n    ItemAvailabilityComponent,\n    OptionGroupListItemComponent,\n    OptionGroupProductEditorComponent,\n    OptionEditorComponent,\n    PublishComponent,\n    PizzaCrustEditorComponent,\n    PizzaEdgeEditorComponent,\n    PizzaSizeEditorComponent,\n    ChangeDebouncedDirective,\n    SetPaymentMethodComponent\n  ],\n  imports: [\n    BrowserModule,\n    TranslateModule.forRoot({\n      defaultLanguage:'en',\n      loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient]\n      }\n      }),\n    AppRoutingModule,\n    CommonModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    MatTabsModule,\n    MatListModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatInputModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatProgressBarModule,\n    AngularSplitModule,\n    MatToolbarModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatCheckboxModule\n  ],\n  providers: [\n    httpInterceptorProviders,\n    { provide: MAT_DIALOG_DATA, useValue: {} },\n    { provide: MatDialogRef, useValue: {} },\n    { provide: DEFAULT_CURRENCY_CODE, useValue: window['odp_terminal_base_currency'] },\n    { provide: LOCALE_ID, useValue: window.navigator.language }\n  ],\n  bootstrap: [AppComponent]\n\n})\nexport class AppModule { \n  constructor(library: FaIconLibrary) {\n    library.addIconPacks(fas, fab);\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport { SSAuthentication } from \"src/app/static-stack/authentication\";\nimport { SSIpfs } from 'src/app/static-stack/ipfs';\nimport { SSOrbitdb } from 'src/app/static-stack/orbitdb';\n\nimport { MatchMediaUtil } from \"src/app/shared/match-media-util\";\n\nif (environment.production) {\n  enableProdMode();\n} else {\n  window['__main'] = {\n    SSOrbitdb: SSOrbitdb,\n    SSAuthentication: SSAuthentication,\n    SSIpfs: SSIpfs\n  }\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n// MatchMediaUtil.setPrefersColorsScheme();\n// setInterval(() => {\n//   MatchMediaUtil.setPrefersColorsScheme();\n// }, 1000);\n\n\n"],"sourceRoot":"webpack:///","file":"main.js"}